(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["OnixChessCtrls"] = factory();
	else
		root["OnixChessCtrls"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// install a JSONP callback for chunk loading
/******/ 	var parentJsonpFunction = window["webpackJsonpOnixChessCtrls"];
/******/ 	window["webpackJsonpOnixChessCtrls"] = function webpackJsonpCallback(chunkIds, moreModules, executeModules) {
/******/ 		// add "moreModules" to the modules object,
/******/ 		// then flag all "chunkIds" as loaded and fire callback
/******/ 		var moduleId, chunkId, i = 0, resolves = [], result;
/******/ 		for(;i < chunkIds.length; i++) {
/******/ 			chunkId = chunkIds[i];
/******/ 			if(installedChunks[chunkId]) {
/******/ 				resolves.push(installedChunks[chunkId][0]);
/******/ 			}
/******/ 			installedChunks[chunkId] = 0;
/******/ 		}
/******/ 		for(moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules, executeModules);
/******/ 		while(resolves.length) {
/******/ 			resolves.shift()();
/******/ 		}
/******/ 		if(executeModules) {
/******/ 			for(i=0; i < executeModules.length; i++) {
/******/ 				result = __webpack_require__(__webpack_require__.s = executeModules[i]);
/******/ 			}
/******/ 		}
/******/ 		return result;
/******/ 	};
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// objects to store loaded and loading chunks
/******/ 	var installedChunks = {
/******/ 		2: 0
/******/ 	};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId) {
/******/ 		var installedChunkData = installedChunks[chunkId];
/******/ 		if(installedChunkData === 0) {
/******/ 			return new Promise(function(resolve) { resolve(); });
/******/ 		}
/******/
/******/ 		// a Promise means "currently loading".
/******/ 		if(installedChunkData) {
/******/ 			return installedChunkData[2];
/******/ 		}
/******/
/******/ 		// setup Promise in chunk cache
/******/ 		var promise = new Promise(function(resolve, reject) {
/******/ 			installedChunkData = installedChunks[chunkId] = [resolve, reject];
/******/ 		});
/******/ 		installedChunkData[2] = promise;
/******/
/******/ 		// start chunk loading
/******/ 		var head = document.getElementsByTagName('head')[0];
/******/ 		var script = document.createElement('script');
/******/ 		script.type = 'text/javascript';
/******/ 		script.charset = 'utf-8';
/******/ 		script.async = true;
/******/ 		script.timeout = 120000;
/******/
/******/ 		if (__webpack_require__.nc) {
/******/ 			script.setAttribute("nonce", __webpack_require__.nc);
/******/ 		}
/******/ 		script.src = __webpack_require__.p + "chess-ctrls." + chunkId + ".js";
/******/ 		var timeout = setTimeout(onScriptComplete, 120000);
/******/ 		script.onerror = script.onload = onScriptComplete;
/******/ 		function onScriptComplete() {
/******/ 			// avoid mem leaks in IE.
/******/ 			script.onerror = script.onload = null;
/******/ 			clearTimeout(timeout);
/******/ 			var chunk = installedChunks[chunkId];
/******/ 			if(chunk !== 0) {
/******/ 				if(chunk) {
/******/ 					chunk[1](new Error('Loading chunk ' + chunkId + ' failed.'));
/******/ 				}
/******/ 				installedChunks[chunkId] = undefined;
/******/ 			}
/******/ 		};
/******/ 		head.appendChild(script);
/******/
/******/ 		return promise;
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// on error function for async loading
/******/ 	__webpack_require__.oe = function(err) { console.error(err); throw err; };
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 602);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat = function validateFormat(format) {};

if (process.env.NODE_ENV !== 'production') {
  validateFormat = function validateFormat(format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

module.exports = invariant;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var emptyFunction = __webpack_require__(12);

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = emptyFunction;

if (process.env.NODE_ENV !== 'production') {
  var printWarning = function printWarning(format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  warning = function warning(condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }

    if (format.indexOf('Failed Composite propType: ') === 0) {
      return; // Ignore CompositeComponent proptype check.
    }

    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

module.exports = warning;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = __webpack_require__(17);


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

/**
 * Simple, lightweight module assisting with the detection and context of
 * Worker. Helps avoid circular dependencies and allows code to reason about
 * whether or not they are in a Worker, even if they never include the main
 * `ReactWorker` dependency.
 */
var ExecutionEnvironment = {

  canUseDOM: canUseDOM,

  canUseWorkers: typeof Worker !== 'undefined',

  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),

  canUseViewport: canUseDOM && !!window.screen,

  isInWorker: !canUseDOM // For now, this is true - might change in the future.

};

module.exports = ExecutionEnvironment;

/***/ }),
/* 6 */,
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */


/**
 * WARNING: DO NOT manually require this module.
 * This is a replacement for `invariant(...)` used by the error code system
 * and will _only_ be required by the corresponding babel pass.
 * It always throws.
 */

function reactProdInvariant(code) {
  var argCount = arguments.length - 1;

  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

  for (var argIdx = 0; argIdx < argCount; argIdx++) {
    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
  }

  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

  var error = new Error(message);
  error.name = 'Invariant Violation';
  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

  throw error;
}

module.exports = reactProdInvariant;

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(42);

var ReactCurrentOwner = __webpack_require__(13);

var invariant = __webpack_require__(1);
var warning = __webpack_require__(2);

function isNative(fn) {
  // Based on isNative() from Lodash
  var funcToString = Function.prototype.toString;
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  var reIsNative = RegExp('^' + funcToString
  // Take an example native function source for comparison
  .call(hasOwnProperty
  // Strip regex characters so we can use it for regex
  ).replace(/[\\^$.*+?()[\]{}|]/g, '\\$&'
  // Remove hasOwnProperty from the template to make it generic
  ).replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$');
  try {
    var source = funcToString.call(fn);
    return reIsNative.test(source);
  } catch (err) {
    return false;
  }
}

var canUseCollections =
// Array.from
typeof Array.from === 'function' &&
// Map
typeof Map === 'function' && isNative(Map) &&
// Map.prototype.keys
Map.prototype != null && typeof Map.prototype.keys === 'function' && isNative(Map.prototype.keys) &&
// Set
typeof Set === 'function' && isNative(Set) &&
// Set.prototype.keys
Set.prototype != null && typeof Set.prototype.keys === 'function' && isNative(Set.prototype.keys);

var setItem;
var getItem;
var removeItem;
var getItemIDs;
var addRoot;
var removeRoot;
var getRootIDs;

if (canUseCollections) {
  var itemMap = new Map();
  var rootIDSet = new Set();

  setItem = function (id, item) {
    itemMap.set(id, item);
  };
  getItem = function (id) {
    return itemMap.get(id);
  };
  removeItem = function (id) {
    itemMap['delete'](id);
  };
  getItemIDs = function () {
    return Array.from(itemMap.keys());
  };

  addRoot = function (id) {
    rootIDSet.add(id);
  };
  removeRoot = function (id) {
    rootIDSet['delete'](id);
  };
  getRootIDs = function () {
    return Array.from(rootIDSet.keys());
  };
} else {
  var itemByKey = {};
  var rootByKey = {};

  // Use non-numeric keys to prevent V8 performance issues:
  // https://github.com/facebook/react/pull/7232
  var getKeyFromID = function (id) {
    return '.' + id;
  };
  var getIDFromKey = function (key) {
    return parseInt(key.substr(1), 10);
  };

  setItem = function (id, item) {
    var key = getKeyFromID(id);
    itemByKey[key] = item;
  };
  getItem = function (id) {
    var key = getKeyFromID(id);
    return itemByKey[key];
  };
  removeItem = function (id) {
    var key = getKeyFromID(id);
    delete itemByKey[key];
  };
  getItemIDs = function () {
    return Object.keys(itemByKey).map(getIDFromKey);
  };

  addRoot = function (id) {
    var key = getKeyFromID(id);
    rootByKey[key] = true;
  };
  removeRoot = function (id) {
    var key = getKeyFromID(id);
    delete rootByKey[key];
  };
  getRootIDs = function () {
    return Object.keys(rootByKey).map(getIDFromKey);
  };
}

var unmountedIDs = [];

function purgeDeep(id) {
  var item = getItem(id);
  if (item) {
    var childIDs = item.childIDs;

    removeItem(id);
    childIDs.forEach(purgeDeep);
  }
}

function describeComponentFrame(name, source, ownerName) {
  return '\n    in ' + (name || 'Unknown') + (source ? ' (at ' + source.fileName.replace(/^.*[\\\/]/, '') + ':' + source.lineNumber + ')' : ownerName ? ' (created by ' + ownerName + ')' : '');
}

function getDisplayName(element) {
  if (element == null) {
    return '#empty';
  } else if (typeof element === 'string' || typeof element === 'number') {
    return '#text';
  } else if (typeof element.type === 'string') {
    return element.type;
  } else {
    return element.type.displayName || element.type.name || 'Unknown';
  }
}

function describeID(id) {
  var name = ReactComponentTreeHook.getDisplayName(id);
  var element = ReactComponentTreeHook.getElement(id);
  var ownerID = ReactComponentTreeHook.getOwnerID(id);
  var ownerName;
  if (ownerID) {
    ownerName = ReactComponentTreeHook.getDisplayName(ownerID);
  }
  process.env.NODE_ENV !== 'production' ? warning(element, 'ReactComponentTreeHook: Missing React element for debugID %s when ' + 'building stack', id) : void 0;
  return describeComponentFrame(name, element && element._source, ownerName);
}

var ReactComponentTreeHook = {
  onSetChildren: function (id, nextChildIDs) {
    var item = getItem(id);
    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
    item.childIDs = nextChildIDs;

    for (var i = 0; i < nextChildIDs.length; i++) {
      var nextChildID = nextChildIDs[i];
      var nextChild = getItem(nextChildID);
      !nextChild ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected hook events to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('140') : void 0;
      !(nextChild.childIDs != null || typeof nextChild.element !== 'object' || nextChild.element == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onSetChildren() to fire for a container child before its parent includes it in onSetChildren().') : _prodInvariant('141') : void 0;
      !nextChild.isMounted ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onMountComponent() to fire for the child before its parent includes it in onSetChildren().') : _prodInvariant('71') : void 0;
      if (nextChild.parentID == null) {
        nextChild.parentID = id;
        // TODO: This shouldn't be necessary but mounting a new root during in
        // componentWillMount currently causes not-yet-mounted components to
        // be purged from our tree data so their parent id is missing.
      }
      !(nextChild.parentID === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected onBeforeMountComponent() parent and onSetChildren() to be consistent (%s has parents %s and %s).', nextChildID, nextChild.parentID, id) : _prodInvariant('142', nextChildID, nextChild.parentID, id) : void 0;
    }
  },
  onBeforeMountComponent: function (id, element, parentID) {
    var item = {
      element: element,
      parentID: parentID,
      text: null,
      childIDs: [],
      isMounted: false,
      updateCount: 0
    };
    setItem(id, item);
  },
  onBeforeUpdateComponent: function (id, element) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      // We may end up here as a result of setState() in componentWillUnmount().
      // In this case, ignore the element.
      return;
    }
    item.element = element;
  },
  onMountComponent: function (id) {
    var item = getItem(id);
    !item ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Item must have been set') : _prodInvariant('144') : void 0;
    item.isMounted = true;
    var isRoot = item.parentID === 0;
    if (isRoot) {
      addRoot(id);
    }
  },
  onUpdateComponent: function (id) {
    var item = getItem(id);
    if (!item || !item.isMounted) {
      // We may end up here as a result of setState() in componentWillUnmount().
      // In this case, ignore the element.
      return;
    }
    item.updateCount++;
  },
  onUnmountComponent: function (id) {
    var item = getItem(id);
    if (item) {
      // We need to check if it exists.
      // `item` might not exist if it is inside an error boundary, and a sibling
      // error boundary child threw while mounting. Then this instance never
      // got a chance to mount, but it still gets an unmounting event during
      // the error boundary cleanup.
      item.isMounted = false;
      var isRoot = item.parentID === 0;
      if (isRoot) {
        removeRoot(id);
      }
    }
    unmountedIDs.push(id);
  },
  purgeUnmountedComponents: function () {
    if (ReactComponentTreeHook._preventPurging) {
      // Should only be used for testing.
      return;
    }

    for (var i = 0; i < unmountedIDs.length; i++) {
      var id = unmountedIDs[i];
      purgeDeep(id);
    }
    unmountedIDs.length = 0;
  },
  isMounted: function (id) {
    var item = getItem(id);
    return item ? item.isMounted : false;
  },
  getCurrentStackAddendum: function (topElement) {
    var info = '';
    if (topElement) {
      var name = getDisplayName(topElement);
      var owner = topElement._owner;
      info += describeComponentFrame(name, topElement._source, owner && owner.getName());
    }

    var currentOwner = ReactCurrentOwner.current;
    var id = currentOwner && currentOwner._debugID;

    info += ReactComponentTreeHook.getStackAddendumByID(id);
    return info;
  },
  getStackAddendumByID: function (id) {
    var info = '';
    while (id) {
      info += describeID(id);
      id = ReactComponentTreeHook.getParentID(id);
    }
    return info;
  },
  getChildIDs: function (id) {
    var item = getItem(id);
    return item ? item.childIDs : [];
  },
  getDisplayName: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element) {
      return null;
    }
    return getDisplayName(element);
  },
  getElement: function (id) {
    var item = getItem(id);
    return item ? item.element : null;
  },
  getOwnerID: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (!element || !element._owner) {
      return null;
    }
    return element._owner._debugID;
  },
  getParentID: function (id) {
    var item = getItem(id);
    return item ? item.parentID : null;
  },
  getSource: function (id) {
    var item = getItem(id);
    var element = item ? item.element : null;
    var source = element != null ? element._source : null;
    return source;
  },
  getText: function (id) {
    var element = ReactComponentTreeHook.getElement(id);
    if (typeof element === 'string') {
      return element;
    } else if (typeof element === 'number') {
      return '' + element;
    } else {
      return null;
    }
  },
  getUpdateCount: function (id) {
    var item = getItem(id);
    return item ? item.updateCount : 0;
  },


  getRootIDs: getRootIDs,
  getRegisteredIDs: getItemIDs,

  pushNonStandardWarningStack: function (isCreatingElement, currentSource) {
    if (typeof console.reactStack !== 'function') {
      return;
    }

    var stack = [];
    var currentOwner = ReactCurrentOwner.current;
    var id = currentOwner && currentOwner._debugID;

    try {
      if (isCreatingElement) {
        stack.push({
          name: id ? ReactComponentTreeHook.getDisplayName(id) : null,
          fileName: currentSource ? currentSource.fileName : null,
          lineNumber: currentSource ? currentSource.lineNumber : null
        });
      }

      while (id) {
        var element = ReactComponentTreeHook.getElement(id);
        var parentID = ReactComponentTreeHook.getParentID(id);
        var ownerID = ReactComponentTreeHook.getOwnerID(id);
        var ownerName = ownerID ? ReactComponentTreeHook.getDisplayName(ownerID) : null;
        var source = element && element._source;
        stack.push({
          name: ownerName,
          fileName: source ? source.fileName : null,
          lineNumber: source ? source.lineNumber : null
        });
        id = parentID;
      }
    } catch (err) {
      // Internal state is messed up.
      // Stop building the stack (it's just a nice to have).
    }

    console.reactStack(stack);
  },
  popNonStandardWarningStack: function () {
    if (typeof console.reactStackEnd !== 'function') {
      return;
    }
    console.reactStackEnd();
  }
};

module.exports = ReactComponentTreeHook;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2016 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg)) {
				classes.push(classNames.apply(null, arg));
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if (typeof module !== 'undefined' && module.exports) {
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
			return classNames;
		}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {
		window.classNames = classNames;
	}
}());


/***/ }),
/* 10 */,
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(7);

var DOMProperty = __webpack_require__(25);
var ReactDOMComponentFlags = __webpack_require__(226);

var invariant = __webpack_require__(1);

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var Flags = ReactDOMComponentFlags;

var internalInstanceKey = '__reactInternalInstance$' + Math.random().toString(36).slice(2);

/**
 * Check if a given node should be cached.
 */
function shouldPrecacheNode(node, nodeID) {
  return node.nodeType === 1 && node.getAttribute(ATTR_NAME) === String(nodeID) || node.nodeType === 8 && node.nodeValue === ' react-text: ' + nodeID + ' ' || node.nodeType === 8 && node.nodeValue === ' react-empty: ' + nodeID + ' ';
}

/**
 * Drill down (through composites and empty components) until we get a host or
 * host text component.
 *
 * This is pretty polymorphic but unavoidable with the current structure we have
 * for `_renderedChildren`.
 */
function getRenderedHostOrTextFromComponent(component) {
  var rendered;
  while (rendered = component._renderedComponent) {
    component = rendered;
  }
  return component;
}

/**
 * Populate `_hostNode` on the rendered host/text component with the given
 * DOM node. The passed `inst` can be a composite.
 */
function precacheNode(inst, node) {
  var hostInst = getRenderedHostOrTextFromComponent(inst);
  hostInst._hostNode = node;
  node[internalInstanceKey] = hostInst;
}

function uncacheNode(inst) {
  var node = inst._hostNode;
  if (node) {
    delete node[internalInstanceKey];
    inst._hostNode = null;
  }
}

/**
 * Populate `_hostNode` on each child of `inst`, assuming that the children
 * match up with the DOM (element) children of `node`.
 *
 * We cache entire levels at once to avoid an n^2 problem where we access the
 * children of a node sequentially and have to walk from the start to our target
 * node every time.
 *
 * Since we update `_renderedChildren` and the actual DOM at (slightly)
 * different times, we could race here and see a newer `_renderedChildren` than
 * the DOM nodes we see. To avoid this, ReactMultiChild calls
 * `prepareToManageChildren` before we change `_renderedChildren`, at which
 * time the container's child nodes are always cached (until it unmounts).
 */
function precacheChildNodes(inst, node) {
  if (inst._flags & Flags.hasCachedChildNodes) {
    return;
  }
  var children = inst._renderedChildren;
  var childNode = node.firstChild;
  outer: for (var name in children) {
    if (!children.hasOwnProperty(name)) {
      continue;
    }
    var childInst = children[name];
    var childID = getRenderedHostOrTextFromComponent(childInst)._domID;
    if (childID === 0) {
      // We're currently unmounting this child in ReactMultiChild; skip it.
      continue;
    }
    // We assume the child nodes are in the same order as the child instances.
    for (; childNode !== null; childNode = childNode.nextSibling) {
      if (shouldPrecacheNode(childNode, childID)) {
        precacheNode(childInst, childNode);
        continue outer;
      }
    }
    // We reached the end of the DOM children without finding an ID match.
     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unable to find element with ID %s.', childID) : _prodInvariant('32', childID) : void 0;
  }
  inst._flags |= Flags.hasCachedChildNodes;
}

/**
 * Given a DOM node, return the closest ReactDOMComponent or
 * ReactDOMTextComponent instance ancestor.
 */
function getClosestInstanceFromNode(node) {
  if (node[internalInstanceKey]) {
    return node[internalInstanceKey];
  }

  // Walk up the tree until we find an ancestor whose instance we have cached.
  var parents = [];
  while (!node[internalInstanceKey]) {
    parents.push(node);
    if (node.parentNode) {
      node = node.parentNode;
    } else {
      // Top of the tree. This node must not be part of a React tree (or is
      // unmounted, potentially).
      return null;
    }
  }

  var closest;
  var inst;
  for (; node && (inst = node[internalInstanceKey]); node = parents.pop()) {
    closest = inst;
    if (parents.length) {
      precacheChildNodes(inst, node);
    }
  }

  return closest;
}

/**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */
function getInstanceFromNode(node) {
  var inst = getClosestInstanceFromNode(node);
  if (inst != null && inst._hostNode === node) {
    return inst;
  } else {
    return null;
  }
}

/**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */
function getNodeFromInstance(inst) {
  // Without this first invariant, passing a non-DOM-component triggers the next
  // invariant for a missing parent, which is super confusing.
  !(inst._hostNode !== undefined) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

  if (inst._hostNode) {
    return inst._hostNode;
  }

  // Walk up the tree until we find an ancestor whose DOM node we have cached.
  var parents = [];
  while (!inst._hostNode) {
    parents.push(inst);
    !inst._hostParent ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React DOM tree root should always have a node reference.') : _prodInvariant('34') : void 0;
    inst = inst._hostParent;
  }

  // Now parents contains each ancestor that does *not* have a cached native
  // node, and `inst` is the deepest ancestor that does.
  for (; parents.length; inst = parents.pop()) {
    precacheChildNodes(inst, inst._hostNode);
  }

  return inst._hostNode;
}

var ReactDOMComponentTree = {
  getClosestInstanceFromNode: getClosestInstanceFromNode,
  getInstanceFromNode: getInstanceFromNode,
  getNodeFromInstance: getNodeFromInstance,
  precacheChildNodes: precacheChildNodes,
  precacheNode: precacheNode,
  uncacheNode: uncacheNode
};

module.exports = ReactDOMComponentTree;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

function makeEmptyFunction(arg) {
  return function () {
    return arg;
  };
}

/**
 * This function accepts and discards inputs; it has no side effects. This is
 * primarily useful idiomatically for overridable function endpoints which
 * always need to be callable, since JS lacks a null-call idiom ala Cocoa.
 */
var emptyFunction = function emptyFunction() {};

emptyFunction.thatReturns = makeEmptyFunction;
emptyFunction.thatReturnsFalse = makeEmptyFunction(false);
emptyFunction.thatReturnsTrue = makeEmptyFunction(true);
emptyFunction.thatReturnsNull = makeEmptyFunction(null);
emptyFunction.thatReturnsThis = function () {
  return this;
};
emptyFunction.thatReturnsArgument = function (arg) {
  return arg;
};

module.exports = emptyFunction;

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
var ReactCurrentOwner = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

module.exports = ReactCurrentOwner;

/***/ }),
/* 14 */,
/* 15 */,
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



// Trust the developer to only use ReactInstrumentation with a __DEV__ check

var debugTool = null;

if (process.env.NODE_ENV !== 'production') {
  var ReactDebugTool = __webpack_require__(534);
  debugTool = ReactDebugTool;
}

module.exports = { debugTool: debugTool };
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(4);

var ReactBaseClasses = __webpack_require__(245);
var ReactChildren = __webpack_require__(578);
var ReactDOMFactories = __webpack_require__(579);
var ReactElement = __webpack_require__(31);
var ReactPropTypes = __webpack_require__(581);
var ReactVersion = __webpack_require__(583);

var createReactClass = __webpack_require__(585);
var onlyChild = __webpack_require__(586);

var createElement = ReactElement.createElement;
var createFactory = ReactElement.createFactory;
var cloneElement = ReactElement.cloneElement;

if (process.env.NODE_ENV !== 'production') {
  var lowPriorityWarning = __webpack_require__(140);
  var canDefineProperty = __webpack_require__(86);
  var ReactElementValidator = __webpack_require__(247);
  var didWarnPropTypesDeprecated = false;
  createElement = ReactElementValidator.createElement;
  createFactory = ReactElementValidator.createFactory;
  cloneElement = ReactElementValidator.cloneElement;
}

var __spread = _assign;
var createMixin = function (mixin) {
  return mixin;
};

if (process.env.NODE_ENV !== 'production') {
  var warnedForSpread = false;
  var warnedForCreateMixin = false;
  __spread = function () {
    lowPriorityWarning(warnedForSpread, 'React.__spread is deprecated and should not be used. Use ' + 'Object.assign directly or another helper function with similar ' + 'semantics. You may be seeing this warning due to your compiler. ' + 'See https://fb.me/react-spread-deprecation for more details.');
    warnedForSpread = true;
    return _assign.apply(null, arguments);
  };

  createMixin = function (mixin) {
    lowPriorityWarning(warnedForCreateMixin, 'React.createMixin is deprecated and should not be used. ' + 'In React v16.0, it will be removed. ' + 'You can use this mixin directly instead. ' + 'See https://fb.me/createmixin-was-never-implemented for more info.');
    warnedForCreateMixin = true;
    return mixin;
  };
}

var React = {
  // Modern

  Children: {
    map: ReactChildren.map,
    forEach: ReactChildren.forEach,
    count: ReactChildren.count,
    toArray: ReactChildren.toArray,
    only: onlyChild
  },

  Component: ReactBaseClasses.Component,
  PureComponent: ReactBaseClasses.PureComponent,

  createElement: createElement,
  cloneElement: cloneElement,
  isValidElement: ReactElement.isValidElement,

  // Classic

  PropTypes: ReactPropTypes,
  createClass: createReactClass,
  createFactory: createFactory,
  createMixin: createMixin,

  // This looks DOM specific but these are actually isomorphic helpers
  // since they are just generating DOM strings.
  DOM: ReactDOMFactories,

  version: ReactVersion,

  // Deprecated hook for JSX spread, don't use this for anything.
  __spread: __spread
};

if (process.env.NODE_ENV !== 'production') {
  var warnedForCreateClass = false;
  if (canDefineProperty) {
    Object.defineProperty(React, 'PropTypes', {
      get: function () {
        lowPriorityWarning(didWarnPropTypesDeprecated, 'Accessing PropTypes via the main React package is deprecated,' + ' and will be removed in  React v16.0.' + ' Use the latest available v15.* prop-types package from npm instead.' + ' For info on usage, compatibility, migration and more, see ' + 'https://fb.me/prop-types-docs');
        didWarnPropTypesDeprecated = true;
        return ReactPropTypes;
      }
    });

    Object.defineProperty(React, 'createClass', {
      get: function () {
        lowPriorityWarning(warnedForCreateClass, 'Accessing createClass via the main React package is deprecated,' + ' and will be removed in React v16.0.' + " Use a plain JavaScript class instead. If you're not yet " + 'ready to migrate, create-react-class v15.* is available ' + 'on npm as a temporary, drop-in replacement. ' + 'For more info see https://fb.me/react-create-class');
        warnedForCreateClass = true;
        return createReactClass;
      }
    });
  }

  // React.DOM factories are deprecated. Wrap these methods so that
  // invocations of the React.DOM namespace and alert users to switch
  // to the `react-dom-factories` package.
  React.DOM = {};
  var warnedForFactories = false;
  Object.keys(ReactDOMFactories).forEach(function (factory) {
    React.DOM[factory] = function () {
      if (!warnedForFactories) {
        lowPriorityWarning(false, 'Accessing factories like React.DOM.%s has been deprecated ' + 'and will be removed in v16.0+. Use the ' + 'react-dom-factories package instead. ' + ' Version 1.0 provides a drop-in replacement.' + ' For more info, see https://fb.me/react-dom-factories', factory);
        warnedForFactories = true;
      }
      return ReactDOMFactories[factory].apply(ReactDOMFactories, arguments);
    };
  });
}

module.exports = React;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 18 */,
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(7),
    _assign = __webpack_require__(4);

var CallbackQueue = __webpack_require__(224);
var PooledClass = __webpack_require__(30);
var ReactFeatureFlags = __webpack_require__(229);
var ReactReconciler = __webpack_require__(41);
var Transaction = __webpack_require__(83);

var invariant = __webpack_require__(1);

var dirtyComponents = [];
var updateBatchNumber = 0;
var asapCallbackQueue = CallbackQueue.getPooled();
var asapEnqueued = false;

var batchingStrategy = null;

function ensureInjected() {
  !(ReactUpdates.ReactReconcileTransaction && batchingStrategy) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must inject a reconcile transaction class and batching strategy') : _prodInvariant('123') : void 0;
}

var NESTED_UPDATES = {
  initialize: function () {
    this.dirtyComponentsLength = dirtyComponents.length;
  },
  close: function () {
    if (this.dirtyComponentsLength !== dirtyComponents.length) {
      // Additional updates were enqueued by componentDidUpdate handlers or
      // similar; before our own UPDATE_QUEUEING wrapper closes, we want to run
      // these new updates so that if A's componentDidUpdate calls setState on
      // B, B will update before the callback A's updater provided when calling
      // setState.
      dirtyComponents.splice(0, this.dirtyComponentsLength);
      flushBatchedUpdates();
    } else {
      dirtyComponents.length = 0;
    }
  }
};

var UPDATE_QUEUEING = {
  initialize: function () {
    this.callbackQueue.reset();
  },
  close: function () {
    this.callbackQueue.notifyAll();
  }
};

var TRANSACTION_WRAPPERS = [NESTED_UPDATES, UPDATE_QUEUEING];

function ReactUpdatesFlushTransaction() {
  this.reinitializeTransaction();
  this.dirtyComponentsLength = null;
  this.callbackQueue = CallbackQueue.getPooled();
  this.reconcileTransaction = ReactUpdates.ReactReconcileTransaction.getPooled(
  /* useCreateElement */true);
}

_assign(ReactUpdatesFlushTransaction.prototype, Transaction, {
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  destructor: function () {
    this.dirtyComponentsLength = null;
    CallbackQueue.release(this.callbackQueue);
    this.callbackQueue = null;
    ReactUpdates.ReactReconcileTransaction.release(this.reconcileTransaction);
    this.reconcileTransaction = null;
  },

  perform: function (method, scope, a) {
    // Essentially calls `this.reconcileTransaction.perform(method, scope, a)`
    // with this transaction's wrappers around it.
    return Transaction.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, method, scope, a);
  }
});

PooledClass.addPoolingTo(ReactUpdatesFlushTransaction);

function batchedUpdates(callback, a, b, c, d, e) {
  ensureInjected();
  return batchingStrategy.batchedUpdates(callback, a, b, c, d, e);
}

/**
 * Array comparator for ReactComponents by mount ordering.
 *
 * @param {ReactComponent} c1 first component you're comparing
 * @param {ReactComponent} c2 second component you're comparing
 * @return {number} Return value usable by Array.prototype.sort().
 */
function mountOrderComparator(c1, c2) {
  return c1._mountOrder - c2._mountOrder;
}

function runBatchedUpdates(transaction) {
  var len = transaction.dirtyComponentsLength;
  !(len === dirtyComponents.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected flush transaction\'s stored dirty-components length (%s) to match dirty-components array length (%s).', len, dirtyComponents.length) : _prodInvariant('124', len, dirtyComponents.length) : void 0;

  // Since reconciling a component higher in the owner hierarchy usually (not
  // always -- see shouldComponentUpdate()) will reconcile children, reconcile
  // them before their children by sorting the array.
  dirtyComponents.sort(mountOrderComparator);

  // Any updates enqueued while reconciling must be performed after this entire
  // batch. Otherwise, if dirtyComponents is [A, B] where A has children B and
  // C, B could update twice in a single batch if C's render enqueues an update
  // to B (since B would have already updated, we should skip it, and the only
  // way we can know to do so is by checking the batch counter).
  updateBatchNumber++;

  for (var i = 0; i < len; i++) {
    // If a component is unmounted before pending changes apply, it will still
    // be here, but we assume that it has cleared its _pendingCallbacks and
    // that performUpdateIfNecessary is a noop.
    var component = dirtyComponents[i];

    // If performUpdateIfNecessary happens to enqueue any new updates, we
    // shouldn't execute the callbacks until the next render happens, so
    // stash the callbacks first
    var callbacks = component._pendingCallbacks;
    component._pendingCallbacks = null;

    var markerName;
    if (ReactFeatureFlags.logTopLevelRenders) {
      var namedComponent = component;
      // Duck type TopLevelWrapper. This is probably always true.
      if (component._currentElement.type.isReactTopLevelWrapper) {
        namedComponent = component._renderedComponent;
      }
      markerName = 'React update: ' + namedComponent.getName();
      console.time(markerName);
    }

    ReactReconciler.performUpdateIfNecessary(component, transaction.reconcileTransaction, updateBatchNumber);

    if (markerName) {
      console.timeEnd(markerName);
    }

    if (callbacks) {
      for (var j = 0; j < callbacks.length; j++) {
        transaction.callbackQueue.enqueue(callbacks[j], component.getPublicInstance());
      }
    }
  }
}

var flushBatchedUpdates = function () {
  // ReactUpdatesFlushTransaction's wrappers will clear the dirtyComponents
  // array and perform any updates enqueued by mount-ready handlers (i.e.,
  // componentDidUpdate) but we need to check here too in order to catch
  // updates enqueued by setState callbacks and asap calls.
  while (dirtyComponents.length || asapEnqueued) {
    if (dirtyComponents.length) {
      var transaction = ReactUpdatesFlushTransaction.getPooled();
      transaction.perform(runBatchedUpdates, null, transaction);
      ReactUpdatesFlushTransaction.release(transaction);
    }

    if (asapEnqueued) {
      asapEnqueued = false;
      var queue = asapCallbackQueue;
      asapCallbackQueue = CallbackQueue.getPooled();
      queue.notifyAll();
      CallbackQueue.release(queue);
    }
  }
};

/**
 * Mark a component as needing a rerender, adding an optional callback to a
 * list of functions which will be executed once the rerender occurs.
 */
function enqueueUpdate(component) {
  ensureInjected();

  // Various parts of our code (such as ReactCompositeComponent's
  // _renderValidatedComponent) assume that calls to render aren't nested;
  // verify that that's the case. (This is called by each top-level update
  // function, like setState, forceUpdate, etc.; creation and
  // destruction of top-level components is guarded in ReactMount.)

  if (!batchingStrategy.isBatchingUpdates) {
    batchingStrategy.batchedUpdates(enqueueUpdate, component);
    return;
  }

  dirtyComponents.push(component);
  if (component._updateBatchNumber == null) {
    component._updateBatchNumber = updateBatchNumber + 1;
  }
}

/**
 * Enqueue a callback to be run at the end of the current batching cycle. Throws
 * if no updates are currently being performed.
 */
function asap(callback, context) {
  !batchingStrategy.isBatchingUpdates ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates.asap: Can\'t enqueue an asap callback in a context whereupdates are not being batched.') : _prodInvariant('125') : void 0;
  asapCallbackQueue.enqueue(callback, context);
  asapEnqueued = true;
}

var ReactUpdatesInjection = {
  injectReconcileTransaction: function (ReconcileTransaction) {
    !ReconcileTransaction ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a reconcile transaction class') : _prodInvariant('126') : void 0;
    ReactUpdates.ReactReconcileTransaction = ReconcileTransaction;
  },

  injectBatchingStrategy: function (_batchingStrategy) {
    !_batchingStrategy ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batching strategy') : _prodInvariant('127') : void 0;
    !(typeof _batchingStrategy.batchedUpdates === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide a batchedUpdates() function') : _prodInvariant('128') : void 0;
    !(typeof _batchingStrategy.isBatchingUpdates === 'boolean') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactUpdates: must provide an isBatchingUpdates boolean attribute') : _prodInvariant('129') : void 0;
    batchingStrategy = _batchingStrategy;
  }
};

var ReactUpdates = {
  /**
   * React references `ReactReconcileTransaction` using this property in order
   * to allow dependency injection.
   *
   * @internal
   */
  ReactReconcileTransaction: null,

  batchedUpdates: batchedUpdates,
  enqueueUpdate: enqueueUpdate,
  flushBatchedUpdates: flushBatchedUpdates,
  injection: ReactUpdatesInjection,
  asap: asap
};

module.exports = ReactUpdates;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 20 */,
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(39));
__export(__webpack_require__(442));
__export(__webpack_require__(453));
__export(__webpack_require__(116));
__export(__webpack_require__(445));
__export(__webpack_require__(455));
__export(__webpack_require__(440));
var Logger_1 = __webpack_require__(438);
exports.Logger = Logger_1.Logger;
var Intl_1 = __webpack_require__(437);
exports.Intl = Intl_1.Intl;


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(4);

var PooledClass = __webpack_require__(30);

var emptyFunction = __webpack_require__(12);
var warning = __webpack_require__(2);

var didWarnForAddedNewProperty = false;
var isProxySupported = typeof Proxy === 'function';

var shouldBeReleasedProperties = ['dispatchConfig', '_targetInst', 'nativeEvent', 'isDefaultPrevented', 'isPropagationStopped', '_dispatchListeners', '_dispatchInstances'];

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var EventInterface = {
  type: null,
  target: null,
  // currentTarget is set when dispatching; no use in copying it here
  currentTarget: emptyFunction.thatReturnsNull,
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function (event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

/**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {*} targetInst Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @param {DOMEventTarget} nativeEventTarget Target node.
 */
function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
  if (process.env.NODE_ENV !== 'production') {
    // these have a getter/setter for warnings
    delete this.nativeEvent;
    delete this.preventDefault;
    delete this.stopPropagation;
  }

  this.dispatchConfig = dispatchConfig;
  this._targetInst = targetInst;
  this.nativeEvent = nativeEvent;

  var Interface = this.constructor.Interface;
  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }
    if (process.env.NODE_ENV !== 'production') {
      delete this[propName]; // this has a getter/setter for warnings
    }
    var normalize = Interface[propName];
    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      if (propName === 'target') {
        this.target = nativeEventTarget;
      } else {
        this[propName] = nativeEvent[propName];
      }
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
  if (defaultPrevented) {
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  } else {
    this.isDefaultPrevented = emptyFunction.thatReturnsFalse;
  }
  this.isPropagationStopped = emptyFunction.thatReturnsFalse;
  return this;
}

_assign(SyntheticEvent.prototype, {
  preventDefault: function () {
    this.defaultPrevented = true;
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.preventDefault) {
      event.preventDefault();
      // eslint-disable-next-line valid-typeof
    } else if (typeof event.returnValue !== 'unknown') {
      event.returnValue = false;
    }
    this.isDefaultPrevented = emptyFunction.thatReturnsTrue;
  },

  stopPropagation: function () {
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.stopPropagation) {
      event.stopPropagation();
      // eslint-disable-next-line valid-typeof
    } else if (typeof event.cancelBubble !== 'unknown') {
      // The ChangeEventPlugin registers a "propertychange" event for
      // IE. This event does not support bubbling or cancelling, and
      // any references to cancelBubble throw "Member not found".  A
      // typeof check of "unknown" circumvents this issue (and is also
      // IE specific).
      event.cancelBubble = true;
    }

    this.isPropagationStopped = emptyFunction.thatReturnsTrue;
  },

  /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
  persist: function () {
    this.isPersistent = emptyFunction.thatReturnsTrue;
  },

  /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
  isPersistent: emptyFunction.thatReturnsFalse,

  /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
  destructor: function () {
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      if (process.env.NODE_ENV !== 'production') {
        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
      } else {
        this[propName] = null;
      }
    }
    for (var i = 0; i < shouldBeReleasedProperties.length; i++) {
      this[shouldBeReleasedProperties[i]] = null;
    }
    if (process.env.NODE_ENV !== 'production') {
      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', emptyFunction));
      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', emptyFunction));
    }
  }
});

SyntheticEvent.Interface = EventInterface;

if (process.env.NODE_ENV !== 'production') {
  if (isProxySupported) {
    /*eslint-disable no-func-assign */
    SyntheticEvent = new Proxy(SyntheticEvent, {
      construct: function (target, args) {
        return this.apply(target, Object.create(target.prototype), args);
      },
      apply: function (constructor, that, args) {
        return new Proxy(constructor.apply(that, args), {
          set: function (target, prop, value) {
            if (prop !== 'isPersistent' && !target.constructor.Interface.hasOwnProperty(prop) && shouldBeReleasedProperties.indexOf(prop) === -1) {
              process.env.NODE_ENV !== 'production' ? warning(didWarnForAddedNewProperty || target.isPersistent(), "This synthetic event is reused for performance reasons. If you're " + "seeing this, you're adding a new property in the synthetic event object. " + 'The property is never released. See ' + 'https://fb.me/react-event-pooling for more information.') : void 0;
              didWarnForAddedNewProperty = true;
            }
            target[prop] = value;
            return true;
          }
        });
      }
    });
    /*eslint-enable no-func-assign */
  }
}
/**
 * Helper to reduce boilerplate when creating subclasses.
 *
 * @param {function} Class
 * @param {?object} Interface
 */
SyntheticEvent.augmentClass = function (Class, Interface) {
  var Super = this;

  var E = function () {};
  E.prototype = Super.prototype;
  var prototype = new E();

  _assign(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;

  Class.Interface = _assign({}, Super.Interface, Interface);
  Class.augmentClass = Super.augmentClass;

  PooledClass.addPoolingTo(Class, PooledClass.fourArgumentPooler);
};

PooledClass.addPoolingTo(SyntheticEvent, PooledClass.fourArgumentPooler);

module.exports = SyntheticEvent;

/**
  * Helper to nullify syntheticEvent instance properties when destructing
  *
  * @param {object} SyntheticEvent
  * @param {String} propName
  * @return {object} defineProperty object
  */
function getPooledWarningPropertyDefinition(propName, getVal) {
  var isFunction = typeof getVal === 'function';
  return {
    configurable: true,
    set: set,
    get: get
  };

  function set(val) {
    var action = isFunction ? 'setting the method' : 'setting the property';
    warn(action, 'This is effectively a no-op');
    return val;
  }

  function get() {
    var action = isFunction ? 'accessing the method' : 'accessing the property';
    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
    warn(action, result);
    return getVal;
  }

  function warn(action, result) {
    var warningCondition = false;
    process.env.NODE_ENV !== 'production' ? warning(warningCondition, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
  }
}
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 23 */,
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

if (process.env.NODE_ENV !== 'production') {
  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&
    Symbol.for &&
    Symbol.for('react.element')) ||
    0xeac7;

  var isValidElement = function(object) {
    return typeof object === 'object' &&
      object !== null &&
      object.$$typeof === REACT_ELEMENT_TYPE;
  };

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = __webpack_require__(215)(isValidElement, throwOnDirectAccess);
} else {
  // By explicitly using `prop-types` you are opting into new production behavior.
  // http://fb.me/prop-types-in-prod
  module.exports = __webpack_require__(484)();
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(7);

var invariant = __webpack_require__(1);

function checkMask(value, bitmask) {
  return (value & bitmask) === bitmask;
}

var DOMPropertyInjection = {
  /**
   * Mapping from normalized, camelcased property names to a configuration that
   * specifies how the associated DOM property should be accessed or rendered.
   */
  MUST_USE_PROPERTY: 0x1,
  HAS_BOOLEAN_VALUE: 0x4,
  HAS_NUMERIC_VALUE: 0x8,
  HAS_POSITIVE_NUMERIC_VALUE: 0x10 | 0x8,
  HAS_OVERLOADED_BOOLEAN_VALUE: 0x20,

  /**
   * Inject some specialized knowledge about the DOM. This takes a config object
   * with the following properties:
   *
   * isCustomAttribute: function that given an attribute name will return true
   * if it can be inserted into the DOM verbatim. Useful for data-* or aria-*
   * attributes where it's impossible to enumerate all of the possible
   * attribute names,
   *
   * Properties: object mapping DOM property name to one of the
   * DOMPropertyInjection constants or null. If your attribute isn't in here,
   * it won't get written to the DOM.
   *
   * DOMAttributeNames: object mapping React attribute name to the DOM
   * attribute name. Attribute names not specified use the **lowercase**
   * normalized name.
   *
   * DOMAttributeNamespaces: object mapping React attribute name to the DOM
   * attribute namespace URL. (Attribute names not specified use no namespace.)
   *
   * DOMPropertyNames: similar to DOMAttributeNames but for DOM properties.
   * Property names not specified use the normalized name.
   *
   * DOMMutationMethods: Properties that require special mutation methods. If
   * `value` is undefined, the mutation method should unset the property.
   *
   * @param {object} domPropertyConfig the config as described above.
   */
  injectDOMPropertyConfig: function (domPropertyConfig) {
    var Injection = DOMPropertyInjection;
    var Properties = domPropertyConfig.Properties || {};
    var DOMAttributeNamespaces = domPropertyConfig.DOMAttributeNamespaces || {};
    var DOMAttributeNames = domPropertyConfig.DOMAttributeNames || {};
    var DOMPropertyNames = domPropertyConfig.DOMPropertyNames || {};
    var DOMMutationMethods = domPropertyConfig.DOMMutationMethods || {};

    if (domPropertyConfig.isCustomAttribute) {
      DOMProperty._isCustomAttributeFunctions.push(domPropertyConfig.isCustomAttribute);
    }

    for (var propName in Properties) {
      !!DOMProperty.properties.hasOwnProperty(propName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'injectDOMPropertyConfig(...): You\'re trying to inject DOM property \'%s\' which has already been injected. You may be accidentally injecting the same DOM property config twice, or you may be injecting two configs that have conflicting property names.', propName) : _prodInvariant('48', propName) : void 0;

      var lowerCased = propName.toLowerCase();
      var propConfig = Properties[propName];

      var propertyInfo = {
        attributeName: lowerCased,
        attributeNamespace: null,
        propertyName: propName,
        mutationMethod: null,

        mustUseProperty: checkMask(propConfig, Injection.MUST_USE_PROPERTY),
        hasBooleanValue: checkMask(propConfig, Injection.HAS_BOOLEAN_VALUE),
        hasNumericValue: checkMask(propConfig, Injection.HAS_NUMERIC_VALUE),
        hasPositiveNumericValue: checkMask(propConfig, Injection.HAS_POSITIVE_NUMERIC_VALUE),
        hasOverloadedBooleanValue: checkMask(propConfig, Injection.HAS_OVERLOADED_BOOLEAN_VALUE)
      };
      !(propertyInfo.hasBooleanValue + propertyInfo.hasNumericValue + propertyInfo.hasOverloadedBooleanValue <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'DOMProperty: Value can be one of boolean, overloaded boolean, or numeric value, but not a combination: %s', propName) : _prodInvariant('50', propName) : void 0;

      if (process.env.NODE_ENV !== 'production') {
        DOMProperty.getPossibleStandardName[lowerCased] = propName;
      }

      if (DOMAttributeNames.hasOwnProperty(propName)) {
        var attributeName = DOMAttributeNames[propName];
        propertyInfo.attributeName = attributeName;
        if (process.env.NODE_ENV !== 'production') {
          DOMProperty.getPossibleStandardName[attributeName] = propName;
        }
      }

      if (DOMAttributeNamespaces.hasOwnProperty(propName)) {
        propertyInfo.attributeNamespace = DOMAttributeNamespaces[propName];
      }

      if (DOMPropertyNames.hasOwnProperty(propName)) {
        propertyInfo.propertyName = DOMPropertyNames[propName];
      }

      if (DOMMutationMethods.hasOwnProperty(propName)) {
        propertyInfo.mutationMethod = DOMMutationMethods[propName];
      }

      DOMProperty.properties[propName] = propertyInfo;
    }
  }
};

/* eslint-disable max-len */
var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
/* eslint-enable max-len */

/**
 * DOMProperty exports lookup objects that can be used like functions:
 *
 *   > DOMProperty.isValid['id']
 *   true
 *   > DOMProperty.isValid['foobar']
 *   undefined
 *
 * Although this may be confusing, it performs better in general.
 *
 * @see http://jsperf.com/key-exists
 * @see http://jsperf.com/key-missing
 */
var DOMProperty = {
  ID_ATTRIBUTE_NAME: 'data-reactid',
  ROOT_ATTRIBUTE_NAME: 'data-reactroot',

  ATTRIBUTE_NAME_START_CHAR: ATTRIBUTE_NAME_START_CHAR,
  ATTRIBUTE_NAME_CHAR: ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040',

  /**
   * Map from property "standard name" to an object with info about how to set
   * the property in the DOM. Each object contains:
   *
   * attributeName:
   *   Used when rendering markup or with `*Attribute()`.
   * attributeNamespace
   * propertyName:
   *   Used on DOM node instances. (This includes properties that mutate due to
   *   external factors.)
   * mutationMethod:
   *   If non-null, used instead of the property or `setAttribute()` after
   *   initial render.
   * mustUseProperty:
   *   Whether the property must be accessed and mutated as an object property.
   * hasBooleanValue:
   *   Whether the property should be removed when set to a falsey value.
   * hasNumericValue:
   *   Whether the property must be numeric or parse as a numeric and should be
   *   removed when set to a falsey value.
   * hasPositiveNumericValue:
   *   Whether the property must be positive numeric or parse as a positive
   *   numeric and should be removed when set to a falsey value.
   * hasOverloadedBooleanValue:
   *   Whether the property can be used as a flag as well as with a value.
   *   Removed when strictly equal to false; present without a value when
   *   strictly equal to true; present with a value otherwise.
   */
  properties: {},

  /**
   * Mapping from lowercase property names to the properly cased version, used
   * to warn in the case of missing properties. Available only in __DEV__.
   *
   * autofocus is predefined, because adding it to the property whitelist
   * causes unintended side effects.
   *
   * @type {Object}
   */
  getPossibleStandardName: process.env.NODE_ENV !== 'production' ? { autofocus: 'autoFocus' } : null,

  /**
   * All of the isCustomAttribute() functions that have been injected.
   */
  _isCustomAttributeFunctions: [],

  /**
   * Checks whether a property name is a custom attribute.
   * @method
   */
  isCustomAttribute: function (attributeName) {
    for (var i = 0; i < DOMProperty._isCustomAttributeFunctions.length; i++) {
      var isCustomAttributeFn = DOMProperty._isCustomAttributeFunctions[i];
      if (isCustomAttributeFn(attributeName)) {
        return true;
      }
    }
    return false;
  },

  injection: DOMPropertyInjection
};

module.exports = DOMProperty;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 26 */,
/* 27 */,
/* 28 */,
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var WHITE = 0;
var BLACK = 1;
var NO_COLOR = 2;
/**
 * Color
 */
var Color = (function () {
    function Color() {
    }
    Color.flip = function (c) {
        return (1 - c);
    };
    Color.White = WHITE;
    Color.Black = BLACK;
    Color.NoColor = NO_COLOR;
    Color.WhiteChar = "w";
    Color.BlackChar = "b";
    Color.Names = ["white", "black", "none"];
    return Color;
}());
exports.Color = Color;


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(7);

var invariant = __webpack_require__(1);

/**
 * Static poolers. Several custom versions for each potential number of
 * arguments. A completely generic pooler is easy to implement, but would
 * require accessing the `arguments` object. In each of these, `this` refers to
 * the Class itself, not an instance. If any others are needed, simply add them
 * here, or in their own files.
 */
var oneArgumentPooler = function (copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function (a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function (a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function (a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var standardReleaser = function (instance) {
  var Klass = this;
  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

/**
 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
 * itself (statically) not adding any prototypical fields. Any CopyConstructor
 * you give this may have a `poolSize` property, and will look for a
 * prototypical `destructor` on instances.
 *
 * @param {Function} CopyConstructor Constructor that can be used to reset.
 * @param {Function} pooler Customizable pooler.
 */
var addPoolingTo = function (CopyConstructor, pooler) {
  // Casting as any so that flow ignores the actual implementation and trusts
  // it to match the type we declared
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler
};

module.exports = PooledClass;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(4);

var ReactCurrentOwner = __webpack_require__(13);

var warning = __webpack_require__(2);
var canDefineProperty = __webpack_require__(86);
var hasOwnProperty = Object.prototype.hasOwnProperty;

var REACT_ELEMENT_TYPE = __webpack_require__(246);

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};

var specialPropKeyWarningShown, specialPropRefWarningShown;

function hasValidRef(config) {
  if (process.env.NODE_ENV !== 'production') {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.ref !== undefined;
}

function hasValidKey(config) {
  if (process.env.NODE_ENV !== 'production') {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function () {
    if (!specialPropKeyWarningShown) {
      specialPropKeyWarningShown = true;
      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
    }
  };
  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function () {
    if (!specialPropRefWarningShown) {
      specialPropRefWarningShown = true;
      process.env.NODE_ENV !== 'production' ? warning(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName) : void 0;
    }
  };
  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, no instanceof check
 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} key
 * @param {string|object} ref
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @param {*} owner
 * @param {*} props
 * @internal
 */
var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allow us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,

    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,

    // Record the component responsible for creating this element.
    _owner: owner
  };

  if (process.env.NODE_ENV !== 'production') {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {};

    // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.
    if (canDefineProperty) {
      Object.defineProperty(element._store, 'validated', {
        configurable: false,
        enumerable: false,
        writable: true,
        value: false
      });
      // self and source are DEV only properties.
      Object.defineProperty(element, '_self', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: self
      });
      // Two elements created in two different places should be considered
      // equal for testing purposes and therefore we hide it from enumeration.
      Object.defineProperty(element, '_source', {
        configurable: false,
        enumerable: false,
        writable: false,
        value: source
      });
    } else {
      element._store.validated = false;
      element._self = self;
      element._source = source;
    }
    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};

/**
 * Create and return a new ReactElement of the given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createelement
 */
ReactElement.createElement = function (type, config, children) {
  var propName;

  // Reserved names are extracted
  var props = {};

  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source;
    // Remaining properties are added to a new props object
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    if (process.env.NODE_ENV !== 'production') {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }
    props.children = childArray;
  }

  // Resolve default props
  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }
  if (process.env.NODE_ENV !== 'production') {
    if (key || ref) {
      if (typeof props.$$typeof === 'undefined' || props.$$typeof !== REACT_ELEMENT_TYPE) {
        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
        if (key) {
          defineKeyPropWarningGetter(props, displayName);
        }
        if (ref) {
          defineRefPropWarningGetter(props, displayName);
        }
      }
    }
  }
  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
};

/**
 * Return a function that produces ReactElements of a given type.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.createfactory
 */
ReactElement.createFactory = function (type) {
  var factory = ReactElement.createElement.bind(null, type);
  // Expose the type on the factory and the prototype so that it can be
  // easily accessed on elements. E.g. `<Foo />.type === Foo`.
  // This should not be named `constructor` since this may not be the function
  // that created the element, and it may not even be a constructor.
  // Legacy hook TODO: Warn if this is accessed
  factory.type = type;
  return factory;
};

ReactElement.cloneAndReplaceKey = function (oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

  return newElement;
};

/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.cloneelement
 */
ReactElement.cloneElement = function (element, config, children) {
  var propName;

  // Original props are copied
  var props = _assign({}, element.props);

  // Reserved names are extracted
  var key = element.key;
  var ref = element.ref;
  // Self is preserved since the owner is preserved.
  var self = element._self;
  // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.
  var source = element._source;

  // Owner will be preserved, unless ref is overridden
  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    // Remaining properties override existing props
    var defaultProps;
    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
};

/**
 * Verifies the object is a ReactElement.
 * See https://facebook.github.io/react/docs/top-level-api.html#react.isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a valid component.
 * @final
 */
ReactElement.isValidElement = function (object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
};

module.exports = ReactElement;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = __webpack_require__(519);


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var emptyObject = {};

if (process.env.NODE_ENV !== 'production') {
  Object.freeze(emptyObject);
}

module.exports = emptyObject;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 * 
 */

/*eslint-disable no-self-compare */



var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  // SameValue algorithm
  if (x === y) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    // Added the nonzero y check to make Flow happy, but it is redundant
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
  }
}

/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */
function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  // Test for A's keys different from B.
  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

module.exports = shallowEqual;

/***/ }),
/* 35 */,
/* 36 */,
/* 37 */,
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Color_1 = __webpack_require__(29);
exports.Color = Color_1.Color;
var Castle_1 = __webpack_require__(199);
exports.Castle = Castle_1.Castle;
var Piece_1 = __webpack_require__(50);
exports.Piece = Piece_1.Piece;
var Square_1 = __webpack_require__(51);
exports.Square = Square_1.Square;
var Move_1 = __webpack_require__(201);
exports.Move = Move_1.Move;
var SimpleMove_1 = __webpack_require__(114);
exports.SimpleMove = SimpleMove_1.SimpleMove;
var Position_1 = __webpack_require__(202);
exports.Position = Position_1.Position;
exports.FenStandartStart = Position_1.FenStandartStart;
exports.FenEmptyBoard = Position_1.FenEmptyBoard;
var Chess_1 = __webpack_require__(436);
exports.Chess = Chess_1.Chess;


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// ===================== Types =======================
/** @returns object string name (using Object.prototype.toString.call) */
exports.getType = function (x) {
    return Object.prototype.toString.call(x);
};
/** @returns true if object is number */
exports.isNumber = function (x) {
    return exports.getType(x) === "[object Number]";
};
/** @returns true if object is string */
exports.isString = function (x) {
    return exports.getType(x) === "[object String]";
};
/** @returns true if object is Date */
exports.isDate = function (x) {
    return exports.getType(x) === "[object Date]";
};
/** @returns true if object is function */
exports.isFunction = function (x) {
    return exports.getType(x) === "[object Function]";
};
/** @returns true if object is array */
exports.isArray = function (x) {
    return exports.getType(x) === "[object Array]";
};
/** @return true if object is empty object  */
exports.isEmptyObject = function (obj) {
    var name;
    for (name in obj) {
        return false;
    }
    return true;
};


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMNamespaces = __webpack_require__(126);
var setInnerHTML = __webpack_require__(85);

var createMicrosoftUnsafeLocalFunction = __webpack_require__(133);
var setTextContent = __webpack_require__(243);

var ELEMENT_NODE_TYPE = 1;
var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

/**
 * In IE (8-11) and Edge, appending nodes with no children is dramatically
 * faster than appending a full subtree, so we essentially queue up the
 * .appendChild calls here and apply them so each node is added to its parent
 * before any children are added.
 *
 * In other browsers, doing so is slower or neutral compared to the other order
 * (in Firefox, twice as slow) so we only do this inversion in IE.
 *
 * See https://github.com/spicyj/innerhtml-vs-createelement-vs-clonenode.
 */
var enableLazy = typeof document !== 'undefined' && typeof document.documentMode === 'number' || typeof navigator !== 'undefined' && typeof navigator.userAgent === 'string' && /\bEdge\/\d/.test(navigator.userAgent);

function insertTreeChildren(tree) {
  if (!enableLazy) {
    return;
  }
  var node = tree.node;
  var children = tree.children;
  if (children.length) {
    for (var i = 0; i < children.length; i++) {
      insertTreeBefore(node, children[i], null);
    }
  } else if (tree.html != null) {
    setInnerHTML(node, tree.html);
  } else if (tree.text != null) {
    setTextContent(node, tree.text);
  }
}

var insertTreeBefore = createMicrosoftUnsafeLocalFunction(function (parentNode, tree, referenceNode) {
  // DocumentFragments aren't actually part of the DOM after insertion so
  // appending children won't update the DOM. We need to ensure the fragment
  // is properly populated first, breaking out of our lazy approach for just
  // this level. Also, some <object> plugins (like Flash Player) will read
  // <param> nodes immediately upon insertion into the DOM, so <object>
  // must also be populated prior to insertion into the DOM.
  if (tree.node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE || tree.node.nodeType === ELEMENT_NODE_TYPE && tree.node.nodeName.toLowerCase() === 'object' && (tree.node.namespaceURI == null || tree.node.namespaceURI === DOMNamespaces.html)) {
    insertTreeChildren(tree);
    parentNode.insertBefore(tree.node, referenceNode);
  } else {
    parentNode.insertBefore(tree.node, referenceNode);
    insertTreeChildren(tree);
  }
});

function replaceChildWithTree(oldNode, newTree) {
  oldNode.parentNode.replaceChild(newTree.node, oldNode);
  insertTreeChildren(newTree);
}

function queueChild(parentTree, childTree) {
  if (enableLazy) {
    parentTree.children.push(childTree);
  } else {
    parentTree.node.appendChild(childTree.node);
  }
}

function queueHTML(tree, html) {
  if (enableLazy) {
    tree.html = html;
  } else {
    setInnerHTML(tree.node, html);
  }
}

function queueText(tree, text) {
  if (enableLazy) {
    tree.text = text;
  } else {
    setTextContent(tree.node, text);
  }
}

function toString() {
  return this.node.nodeName;
}

function DOMLazyTree(node) {
  return {
    node: node,
    children: [],
    html: null,
    text: null,
    toString: toString
  };
}

DOMLazyTree.insertTreeBefore = insertTreeBefore;
DOMLazyTree.replaceChildWithTree = replaceChildWithTree;
DOMLazyTree.queueChild = queueChild;
DOMLazyTree.queueHTML = queueHTML;
DOMLazyTree.queueText = queueText;

module.exports = DOMLazyTree;

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactRef = __webpack_require__(548);
var ReactInstrumentation = __webpack_require__(16);

var warning = __webpack_require__(2);

/**
 * Helper to call ReactRef.attachRefs with this composite component, split out
 * to avoid allocations in the transaction mount-ready queue.
 */
function attachRefs() {
  ReactRef.attachRefs(this, this._currentElement);
}

var ReactReconciler = {
  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} the containing host component instance
   * @param {?object} info about the host container
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function (internalInstance, transaction, hostParent, hostContainerInfo, context, parentDebugID) // 0 in production and for roots
  {
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeMountComponent(internalInstance._debugID, internalInstance._currentElement, parentDebugID);
      }
    }
    var markup = internalInstance.mountComponent(transaction, hostParent, hostContainerInfo, context, parentDebugID);
    if (internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onMountComponent(internalInstance._debugID);
      }
    }
    return markup;
  },

  /**
   * Returns a value that can be passed to
   * ReactComponentEnvironment.replaceNodeWithMarkup.
   */
  getHostNode: function (internalInstance) {
    return internalInstance.getHostNode();
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function (internalInstance, safely) {
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUnmountComponent(internalInstance._debugID);
      }
    }
    ReactRef.detachRefs(internalInstance, internalInstance._currentElement);
    internalInstance.unmountComponent(safely);
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUnmountComponent(internalInstance._debugID);
      }
    }
  },

  /**
   * Update a component using a new element.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @internal
   */
  receiveComponent: function (internalInstance, nextElement, transaction, context) {
    var prevElement = internalInstance._currentElement;

    if (nextElement === prevElement && context === internalInstance._context) {
      // Since elements are immutable after the owner is rendered,
      // we can do a cheap identity compare here to determine if this is a
      // superfluous reconcile. It's possible for state to be mutable but such
      // change should trigger an update of the owner which would recreate
      // the element. We explicitly check for the existence of an owner since
      // it's possible for an element created outside a composite to be
      // deeply mutated and reused.

      // TODO: Bailing out early is just a perf optimization right?
      // TODO: Removing the return statement should affect correctness?
      return;
    }

    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, nextElement);
      }
    }

    var refsChanged = ReactRef.shouldUpdateRefs(prevElement, nextElement);

    if (refsChanged) {
      ReactRef.detachRefs(internalInstance, prevElement);
    }

    internalInstance.receiveComponent(nextElement, transaction, context);

    if (refsChanged && internalInstance._currentElement && internalInstance._currentElement.ref != null) {
      transaction.getReactMountReady().enqueue(attachRefs, internalInstance);
    }

    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
      }
    }
  },

  /**
   * Flush any dirty changes in a component.
   *
   * @param {ReactComponent} internalInstance
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function (internalInstance, transaction, updateBatchNumber) {
    if (internalInstance._updateBatchNumber !== updateBatchNumber) {
      // The component's enqueued batch number should always be the current
      // batch or the following one.
      process.env.NODE_ENV !== 'production' ? warning(internalInstance._updateBatchNumber == null || internalInstance._updateBatchNumber === updateBatchNumber + 1, 'performUpdateIfNecessary: Unexpected batch number (current %s, ' + 'pending %s)', updateBatchNumber, internalInstance._updateBatchNumber) : void 0;
      return;
    }
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onBeforeUpdateComponent(internalInstance._debugID, internalInstance._currentElement);
      }
    }
    internalInstance.performUpdateIfNecessary(transaction);
    if (process.env.NODE_ENV !== 'production') {
      if (internalInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onUpdateComponent(internalInstance._debugID);
      }
    }
  }
};

module.exports = ReactReconciler;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */


/**
 * WARNING: DO NOT manually require this module.
 * This is a replacement for `invariant(...)` used by the error code system
 * and will _only_ be required by the corresponding babel pass.
 * It always throws.
 */

function reactProdInvariant(code) {
  var argCount = arguments.length - 1;

  var message = 'Minified React error #' + code + '; visit ' + 'http://facebook.github.io/react/docs/error-decoder.html?invariant=' + code;

  for (var argIdx = 0; argIdx < argCount; argIdx++) {
    message += '&args[]=' + encodeURIComponent(arguments[argIdx + 1]);
  }

  message += ' for the full message or use the non-minified dev environment' + ' for full errors and additional helpful warnings.';

  var error = new Error(message);
  error.name = 'Invariant Violation';
  error.framesToPop = 1; // we don't care about reactProdInvariant's own frame

  throw error;
}

module.exports = reactProdInvariant;

/***/ }),
/* 43 */,
/* 44 */,
/* 45 */,
/* 46 */,
/* 47 */,
/* 48 */,
/* 49 */,
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Color_1 = __webpack_require__(29);
/**
 * Zero (empty) piece
 */
var noPiece = 0x07;
var PIECE_IS_SLIDER = [false, false, true, true, true, false, false, false];
var PIECE_CHARS = ["x", "K", "Q", "R", "B", "N", "P", ".", "x", "k", "q", "r", "b", "n", "p", "x"];
var PIECE_NAMES = ["xx", "wk", "wq", "wr", "wb", "wn", "wp", "xx", "xx", "bk", "bq", "br", "bb", "bn", "bp"];
/**
 * Chess piece
 */
var Piece = (function () {
    function Piece() {
    }
    /**
     * Return piece type.
     */
    Piece.type = function (p) {
        return (p & 0x07);
    };
    /**
     * Return piece color.
     * If piece is invalid or empty return [[Color.NoColor]].
     */
    Piece.color = function (p) {
        return (p === noPiece) ? Color_1.Color.NoColor : ((p & 0x08) >> 3);
    };
    /**
     * Return piece color for valid piece
     */
    Piece.colorNotEmpty = function (p) {
        return ((p & 0x08) >> 3);
    };
    /**
     * Make colored piece.
     * @param c piece color
     * @param p piece type
     */
    Piece.create = function (c, p) {
        return (p === noPiece) ? noPiece : ((c << 3) | (p & 0x07));
    };
    /**
     * Return true, if piece can slide moves.
     */
    Piece.isSlider = function (p) {
        return PIECE_IS_SLIDER[Piece.type(p)];
    };
    /**
     * Return piece type from piece char.
     */
    Piece.typeFromChar = function (pc) {
        switch (pc) {
            case "k": return Piece.King;
            case "q": return Piece.Queen;
            case "r": return Piece.Rook;
            case "n": return Piece.Knight;
            case "b": return Piece.Bishop;
            case "p": return Piece.Pawn;
            default: return noPiece;
        }
    };
    /**
     * Return piece char.
     * White pieces will be returns uppercased, black lowercased.
     */
    Piece.toChar = function (p) {
        return PIECE_CHARS[p];
    };
    /**
     * Return uppercased piece char.
     */
    Piece.toUpperChar = function (p) {
        var pt = Piece.type(p);
        switch (pt) {
            case Piece.King: return "K";
            case Piece.Queen: return "Q";
            case Piece.Rook: return "R";
            case Piece.Knight: return "N";
            case Piece.Bishop: return "B";
            case Piece.Pawn: return "P";
            default: return "";
        }
    };
    Piece.pieceName = function (p) {
        return PIECE_NAMES[p];
    };
    /* tslint:disable:no-bitwise */
    // Piece types (without color): ============
    Piece.King = 0x01;
    Piece.Queen = 0x02;
    Piece.Rook = 0x03;
    Piece.Bishop = 0x04;
    Piece.Knight = 0x05;
    Piece.Pawn = 0x06;
    Piece.NoPiece = noPiece;
    // White pieces: ============
    Piece.WKing = 0x01;
    Piece.WQueen = 0x02;
    Piece.WRook = 0x03;
    Piece.WBishop = 0x04;
    Piece.WKnight = 0x05;
    Piece.WPawn = 0x06;
    // Black pieces: ============
    Piece.BKing = 0x09;
    Piece.BQueen = 0x0A;
    Piece.BRook = 0x0B;
    Piece.BBishop = 0x0C;
    Piece.BKnight = 0x0D;
    Piece.BPawn = 0x0E;
    Piece.Score = [9999, 10, 6, 3, 3, 1];
    return Piece;
}());
exports.Piece = Piece;


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Color_1 = __webpack_require__(29);
var Direction_1 = __webpack_require__(200);
/**
 * Zero (invalid) square
 */
var ns = 65;
/**
 * Fyle's names
 */
var hqs = ["a", "b", "c", "d", "e", "f", "g", "h"];
/**
 * Conver square number to name
 */
function notation_Pos2Note(pos) {
    return hqs[pos % 8] + Math.ceil((pos + 1) / 8).toString();
}
/**
 * Last square for moves.
 */
var __squareLast = [
    [ns, 56, 0, ns, 0, 0, 0, ns, 7, 63, 0],
    [ns, 57, 1, ns, 0, 8, 1, ns, 7, 55, 1],
    [ns, 58, 2, ns, 0, 16, 2, ns, 7, 47, 2],
    [ns, 59, 3, ns, 0, 24, 3, ns, 7, 39, 3],
    [ns, 60, 4, ns, 0, 32, 4, ns, 7, 31, 4],
    [ns, 61, 5, ns, 0, 40, 5, ns, 7, 23, 5],
    [ns, 62, 6, ns, 0, 48, 6, ns, 7, 15, 6],
    [ns, 63, 7, ns, 0, 56, 7, ns, 7, 7, 7],
    [ns, 56, 0, ns, 8, 8, 8, ns, 15, 62, 1],
    [ns, 57, 1, ns, 8, 16, 0, ns, 15, 63, 2],
    [ns, 58, 2, ns, 8, 24, 1, ns, 15, 55, 3],
    [ns, 59, 3, ns, 8, 32, 2, ns, 15, 47, 4],
    [ns, 60, 4, ns, 8, 40, 3, ns, 15, 39, 5],
    [ns, 61, 5, ns, 8, 48, 4, ns, 15, 31, 6],
    [ns, 62, 6, ns, 8, 56, 5, ns, 15, 23, 7],
    [ns, 63, 7, ns, 8, 57, 6, ns, 15, 15, 15],
    [ns, 56, 0, ns, 16, 16, 16, ns, 23, 61, 2],
    [ns, 57, 1, ns, 16, 24, 8, ns, 23, 62, 3],
    [ns, 58, 2, ns, 16, 32, 0, ns, 23, 63, 4],
    [ns, 59, 3, ns, 16, 40, 1, ns, 23, 55, 5],
    [ns, 60, 4, ns, 16, 48, 2, ns, 23, 47, 6],
    [ns, 61, 5, ns, 16, 56, 3, ns, 23, 39, 7],
    [ns, 62, 6, ns, 16, 57, 4, ns, 23, 31, 15],
    [ns, 63, 7, ns, 16, 58, 5, ns, 23, 23, 23],
    [ns, 56, 0, ns, 24, 24, 24, ns, 31, 60, 3],
    [ns, 57, 1, ns, 24, 32, 16, ns, 31, 61, 4],
    [ns, 58, 2, ns, 24, 40, 8, ns, 31, 62, 5],
    [ns, 59, 3, ns, 24, 48, 0, ns, 31, 63, 6],
    [ns, 60, 4, ns, 24, 56, 1, ns, 31, 55, 7],
    [ns, 61, 5, ns, 24, 57, 2, ns, 31, 47, 15],
    [ns, 62, 6, ns, 24, 58, 3, ns, 31, 39, 23],
    [ns, 63, 7, ns, 24, 59, 4, ns, 31, 31, 31],
    [ns, 56, 0, ns, 32, 32, 32, ns, 39, 59, 4],
    [ns, 57, 1, ns, 32, 40, 24, ns, 39, 60, 5],
    [ns, 58, 2, ns, 32, 48, 16, ns, 39, 61, 6],
    [ns, 59, 3, ns, 32, 56, 8, ns, 39, 62, 7],
    [ns, 60, 4, ns, 32, 57, 0, ns, 39, 63, 15],
    [ns, 61, 5, ns, 32, 58, 1, ns, 39, 55, 23],
    [ns, 62, 6, ns, 32, 59, 2, ns, 39, 47, 31],
    [ns, 63, 7, ns, 32, 60, 3, ns, 39, 39, 39],
    [ns, 56, 0, ns, 40, 40, 40, ns, 47, 58, 5],
    [ns, 57, 1, ns, 40, 48, 32, ns, 47, 59, 6],
    [ns, 58, 2, ns, 40, 56, 24, ns, 47, 60, 7],
    [ns, 59, 3, ns, 40, 57, 16, ns, 47, 61, 15],
    [ns, 60, 4, ns, 40, 58, 8, ns, 47, 62, 23],
    [ns, 61, 5, ns, 40, 59, 0, ns, 47, 63, 31],
    [ns, 62, 6, ns, 40, 60, 1, ns, 47, 55, 39],
    [ns, 63, 7, ns, 40, 61, 2, ns, 47, 47, 47],
    [ns, 56, 0, ns, 48, 48, 48, ns, 55, 57, 6],
    [ns, 57, 1, ns, 48, 56, 40, ns, 55, 58, 7],
    [ns, 58, 2, ns, 48, 57, 32, ns, 55, 59, 15],
    [ns, 59, 3, ns, 48, 58, 24, ns, 55, 60, 23],
    [ns, 60, 4, ns, 48, 59, 16, ns, 55, 61, 31],
    [ns, 61, 5, ns, 48, 60, 8, ns, 55, 62, 39],
    [ns, 62, 6, ns, 48, 61, 0, ns, 55, 63, 47],
    [ns, 63, 7, ns, 48, 62, 1, ns, 55, 55, 55],
    [ns, 56, 0, ns, 56, 56, 56, ns, 63, 56, 7],
    [ns, 57, 1, ns, 56, 57, 48, ns, 63, 57, 15],
    [ns, 58, 2, ns, 56, 58, 40, ns, 63, 58, 23],
    [ns, 59, 3, ns, 56, 59, 32, ns, 63, 59, 31],
    [ns, 60, 4, ns, 56, 60, 24, ns, 63, 60, 39],
    [ns, 61, 5, ns, 56, 61, 16, ns, 63, 61, 47],
    [ns, 62, 6, ns, 56, 62, 8, ns, 63, 62, 55],
    [ns, 63, 7, ns, 56, 63, 0, ns, 63, 63, 63],
    [ns, ns, ns, ns, ns, ns, ns, ns, ns, ns, ns],
    [ns, ns, ns, ns, ns, ns, ns, ns, ns, ns, ns]
];
/**
 * Knight moves
 */
var __knightAttacks = [
    [10, 17, ns, ns, ns, ns, ns, ns, ns],
    [11, 16, 18, ns, ns, ns, ns, ns, ns],
    [8, 12, 17, 19, ns, ns, ns, ns, ns],
    [9, 13, 18, 20, ns, ns, ns, ns, ns],
    [10, 14, 19, 21, ns, ns, ns, ns, ns],
    [11, 15, 20, 22, ns, ns, ns, ns, ns],
    [12, 21, 23, ns, ns, ns, ns, ns, ns],
    [13, 22, ns, ns, ns, ns, ns, ns, ns],
    [2, 18, 25, ns, ns, ns, ns, ns, ns],
    [3, 19, 24, 26, ns, ns, ns, ns, ns],
    [0, 4, 16, 20, 25, 27, ns, ns, ns],
    [1, 5, 17, 21, 26, 28, ns, ns, ns],
    [2, 6, 18, 22, 27, 29, ns, ns, ns],
    [3, 7, 19, 23, 28, 30, ns, ns, ns],
    [4, 20, 29, 31, ns, ns, ns, ns, ns],
    [5, 21, 30, ns, ns, ns, ns, ns, ns],
    [1, 10, 26, 33, ns, ns, ns, ns, ns],
    [0, 2, 11, 27, 32, 34, ns, ns, ns],
    [1, 3, 8, 12, 24, 28, 33, 35, ns],
    [2, 4, 9, 13, 25, 29, 34, 36, ns],
    [3, 5, 10, 14, 26, 30, 35, 37, ns],
    [4, 6, 11, 15, 27, 31, 36, 38, ns],
    [5, 7, 12, 28, 37, 39, ns, ns, ns],
    [6, 13, 29, 38, ns, ns, ns, ns, ns],
    [9, 18, 34, 41, ns, ns, ns, ns, ns],
    [8, 10, 19, 35, 40, 42, ns, ns, ns],
    [9, 11, 16, 20, 32, 36, 41, 43, ns],
    [10, 12, 17, 21, 33, 37, 42, 44, ns],
    [11, 13, 18, 22, 34, 38, 43, 45, ns],
    [12, 14, 19, 23, 35, 39, 44, 46, ns],
    [13, 15, 20, 36, 45, 47, ns, ns, ns],
    [14, 21, 37, 46, ns, ns, ns, ns, ns],
    [17, 26, 42, 49, ns, ns, ns, ns, ns],
    [16, 18, 27, 43, 48, 50, ns, ns, ns],
    [17, 19, 24, 28, 40, 44, 49, 51, ns],
    [18, 20, 25, 29, 41, 45, 50, 52, ns],
    [19, 21, 26, 30, 42, 46, 51, 53, ns],
    [20, 22, 27, 31, 43, 47, 52, 54, ns],
    [21, 23, 28, 44, 53, 55, ns, ns, ns],
    [22, 29, 45, 54, ns, ns, ns, ns, ns],
    [25, 34, 50, 57, ns, ns, ns, ns, ns],
    [24, 26, 35, 51, 56, 58, ns, ns, ns],
    [25, 27, 32, 36, 48, 52, 57, 59, ns],
    [26, 28, 33, 37, 49, 53, 58, 60, ns],
    [27, 29, 34, 38, 50, 54, 59, 61, ns],
    [28, 30, 35, 39, 51, 55, 60, 62, ns],
    [29, 31, 36, 52, 61, 63, ns, ns, ns],
    [30, 37, 53, 62, ns, ns, ns, ns, ns],
    [33, 42, 58, ns, ns, ns, ns, ns, ns],
    [32, 34, 43, 59, ns, ns, ns, ns, ns],
    [33, 35, 40, 44, 56, 60, ns, ns, ns],
    [34, 36, 41, 45, 57, 61, ns, ns, ns],
    [35, 37, 42, 46, 58, 62, ns, ns, ns],
    [36, 38, 43, 47, 59, 63, ns, ns, ns],
    [37, 39, 44, 60, ns, ns, ns, ns, ns],
    [38, 45, 61, ns, ns, ns, ns, ns, ns],
    [41, 50, ns, ns, ns, ns, ns, ns, ns],
    [40, 42, 51, ns, ns, ns, ns, ns, ns],
    [41, 43, 48, 52, ns, ns, ns, ns, ns],
    [42, 44, 49, 53, ns, ns, ns, ns, ns],
    [43, 45, 50, 54, ns, ns, ns, ns, ns],
    [44, 46, 51, 55, ns, ns, ns, ns, ns],
    [45, 47, 52, ns, ns, ns, ns, ns, ns],
    [46, 53, ns, ns, ns, ns, ns, ns, ns],
    [ns, ns, ns, ns, ns, ns, ns, ns, ns],
    [ns, ns, ns, ns, ns, ns, ns, ns, ns]
];
/**
 * King moves
 */
var __kingAttacks = [
    [1, 8, 9, ns, ns, ns, ns, ns, ns],
    [0, 2, 8, 9, 10, ns, ns, ns, ns],
    [1, 3, 9, 10, 11, ns, ns, ns, ns],
    [2, 4, 10, 11, 12, ns, ns, ns, ns],
    [3, 5, 11, 12, 13, ns, ns, ns, ns],
    [4, 6, 12, 13, 14, ns, ns, ns, ns],
    [5, 7, 13, 14, 15, ns, ns, ns, ns],
    [6, 14, 15, ns, ns, ns, ns, ns, ns],
    [0, 1, 9, 16, 17, ns, ns, ns, ns],
    [0, 1, 2, 8, 10, 16, 17, 18, ns],
    [1, 2, 3, 9, 11, 17, 18, 19, ns],
    [2, 3, 4, 10, 12, 18, 19, 20, ns],
    [3, 4, 5, 11, 13, 19, 20, 21, ns],
    [4, 5, 6, 12, 14, 20, 21, 22, ns],
    [5, 6, 7, 13, 15, 21, 22, 23, ns],
    [6, 7, 14, 22, 23, ns, ns, ns, ns],
    [8, 9, 17, 24, 25, ns, ns, ns, ns],
    [8, 9, 10, 16, 18, 24, 25, 26, ns],
    [9, 10, 11, 17, 19, 25, 26, 27, ns],
    [10, 11, 12, 18, 20, 26, 27, 28, ns],
    [11, 12, 13, 19, 21, 27, 28, 29, ns],
    [12, 13, 14, 20, 22, 28, 29, 30, ns],
    [13, 14, 15, 21, 23, 29, 30, 31, ns],
    [14, 15, 22, 30, 31, ns, ns, ns, ns],
    [16, 17, 25, 32, 33, ns, ns, ns, ns],
    [16, 17, 18, 24, 26, 32, 33, 34, ns],
    [17, 18, 19, 25, 27, 33, 34, 35, ns],
    [18, 19, 20, 26, 28, 34, 35, 36, ns],
    [19, 20, 21, 27, 29, 35, 36, 37, ns],
    [20, 21, 22, 28, 30, 36, 37, 38, ns],
    [21, 22, 23, 29, 31, 37, 38, 39, ns],
    [22, 23, 30, 38, 39, ns, ns, ns, ns],
    [24, 25, 33, 40, 41, ns, ns, ns, ns],
    [24, 25, 26, 32, 34, 40, 41, 42, ns],
    [25, 26, 27, 33, 35, 41, 42, 43, ns],
    [26, 27, 28, 34, 36, 42, 43, 44, ns],
    [27, 28, 29, 35, 37, 43, 44, 45, ns],
    [28, 29, 30, 36, 38, 44, 45, 46, ns],
    [29, 30, 31, 37, 39, 45, 46, 47, ns],
    [30, 31, 38, 46, 47, ns, ns, ns, ns],
    [32, 33, 41, 48, 49, ns, ns, ns, ns],
    [32, 33, 34, 40, 42, 48, 49, 50, ns],
    [33, 34, 35, 41, 43, 49, 50, 51, ns],
    [34, 35, 36, 42, 44, 50, 51, 52, ns],
    [35, 36, 37, 43, 45, 51, 52, 53, ns],
    [36, 37, 38, 44, 46, 52, 53, 54, ns],
    [37, 38, 39, 45, 47, 53, 54, 55, ns],
    [38, 39, 46, 54, 55, ns, ns, ns, ns],
    [40, 41, 49, 56, 57, ns, ns, ns, ns],
    [40, 41, 42, 48, 50, 56, 57, 58, ns],
    [41, 42, 43, 49, 51, 57, 58, 59, ns],
    [42, 43, 44, 50, 52, 58, 59, 60, ns],
    [43, 44, 45, 51, 53, 59, 60, 61, ns],
    [44, 45, 46, 52, 54, 60, 61, 62, ns],
    [45, 46, 47, 53, 55, 61, 62, 63, ns],
    [46, 47, 54, 62, 63, ns, ns, ns, ns],
    [48, 49, 57, ns, ns, ns, ns, ns, ns],
    [48, 49, 50, 56, 58, ns, ns, ns, ns],
    [49, 50, 51, 57, 59, ns, ns, ns, ns],
    [50, 51, 52, 58, 60, ns, ns, ns, ns],
    [51, 52, 53, 59, 61, ns, ns, ns, ns],
    [52, 53, 54, 60, 62, ns, ns, ns, ns],
    [53, 54, 55, 61, 63, ns, ns, ns, ns],
    [54, 55, 62, ns, ns, ns, ns, ns, ns],
    [ns, ns, ns, ns, ns, ns, ns, ns, ns],
    [ns, ns, ns, ns, ns, ns, ns, ns, ns]
];
var __rankFyleDist = [
    0, 1, 2, 3, 4, 5, 6, 7,
    1, 0, 1, 2, 3, 4, 5, 6,
    2, 1, 0, 1, 2, 3, 4, 5,
    3, 2, 1, 0, 1, 2, 3, 4,
    4, 3, 2, 1, 0, 1, 2, 3,
    5, 4, 3, 2, 1, 0, 1, 2,
    6, 5, 4, 3, 2, 1, 0, 1,
    7, 6, 5, 4, 3, 2, 1, 0
];
var squareLast = function (sq, dir) {
    return __squareLast[sq][dir];
};
/**
 * Chess board squares.
 * A1 = 0, B1 = 1, C1 = 2, ... G8 =62, H8 =63,
 * COLOR_SQUARE = 64, NULL_SQUARE = 65
 */
var Square = (function () {
    function Square() {
    }
    Square.fyle = function (sq) {
        return (sq & 0x7);
    };
    Square.rank = function (sq) {
        return ((sq >> 3) & 0x7);
    };
    Square.create = function (f, r) {
        return ((r << 3) | f);
    };
    Square.rankFromChar = function (c) {
        /* tslint:disable:no-eval */
        return (c < "1" || c > "8") ? ns : (eval(c) - 1);
        /* tslint:enable:no-eval */
    };
    Square.fyleFromChar = function (c) {
        return (c < "a" || c > "h") ? ns : (c.charCodeAt(0) - "a".charCodeAt(0));
    };
    Square.leftDiag = function (sq) {
        return Square.rank(sq) + Square.fyle(sq);
    };
    Square.rightDiag = function (sq) {
        return (7 + Square.rank(sq) - Square.fyle(sq));
    };
    Square.color = function (sq) {
        return 1 - (Square.leftDiag(sq) & 1);
    };
    Square.colorChar = function (sq) {
        return (Square.color(sq) === Color_1.Color.Black) ? Color_1.Color.BlackChar : Color_1.Color.WhiteChar;
    };
    Square.rankChar = function (sq) {
        return (Square.rank(sq) + 1).toString();
    };
    Square.fyleChar = function (sq) {
        return hqs[Square.fyle(sq)];
    };
    Square.parse = function (sq) {
        if (sq && sq.length === 2) {
            return Square.create(Square.fyleFromChar(sq[0]), Square.rankFromChar(sq[1]));
        }
        return ns;
    };
    Square.squareName = function (s) {
        return notation_Pos2Note(s);
    };
    /**
     * returns true if the two squares are adjacent.
     * Note that diagonal adjacency is included: a1 and b2 are adjacent.
     * Also note that a square is adjacent to itself.
     */
    Square.adjacent = function (from, to) {
        var fromRank = Square.rank(from);
        var toRank = Square.rank(to);
        var rdist = fromRank - toRank;
        if (rdist < -1 || rdist > 1) {
            return false;
        }
        var fromFyle = Square.fyle(from);
        var toFyle = Square.fyle(to);
        var fdist = fromFyle - toFyle;
        if (fdist < -1 || fdist > 1) {
            return false;
        }
        return true;
    };
    /**
     * Get direction for move from square @fr to square @to.
     */
    Square.direction = function (fr, to) {
        return Direction_1.Direction.squareDirection(fr, to);
    };
    Square.move = function (sq, dir) {
        return Direction_1.Direction.squareMove(sq, dir);
    };
    Square.last = function (sq, dir) {
        return squareLast(sq, dir);
    };
    Square.isKnightHop = function (from, to) {
        var rdist = __rankFyleDist[(Square.rank(from) << 3) | Square.rank(to)];
        var fdist = __rankFyleDist[(Square.fyle(from) << 3) | Square.fyle(to)];
        // it is a knight hop only if one distance is two squares and the
        // other is one square -- that is, only if their product equals two.
        return ((rdist * fdist) === 2);
    };
    Square.knightAttack = function (from, to) {
        return __knightAttacks[from][to];
    };
    Square.knightAttacks = function (from) {
        return __knightAttacks[from];
    };
    Square.kingAttack = function (from, to) {
        return __kingAttacks[from][to];
    };
    Square.kingAttacks = function (from) {
        return __kingAttacks[from];
    };
    /* tslint:disable:no-bitwise */
    Square.NullSquare = ns;
    return Square;
}());
exports.Square = Square;


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
__export(__webpack_require__(482));


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(7);

var EventPluginRegistry = __webpack_require__(80);
var EventPluginUtils = __webpack_require__(127);
var ReactErrorUtils = __webpack_require__(131);

var accumulateInto = __webpack_require__(236);
var forEachAccumulated = __webpack_require__(237);
var invariant = __webpack_require__(1);

/**
 * Internal store for event listeners
 */
var listenerBank = {};

/**
 * Internal queue of events that have accumulated their dispatches and are
 * waiting to have their dispatches executed.
 */
var eventQueue = null;

/**
 * Dispatches an event and releases it back into the pool, unless persistent.
 *
 * @param {?object} event Synthetic event to be dispatched.
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @private
 */
var executeDispatchesAndRelease = function (event, simulated) {
  if (event) {
    EventPluginUtils.executeDispatchesInOrder(event, simulated);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};
var executeDispatchesAndReleaseSimulated = function (e) {
  return executeDispatchesAndRelease(e, true);
};
var executeDispatchesAndReleaseTopLevel = function (e) {
  return executeDispatchesAndRelease(e, false);
};

var getDictionaryKey = function (inst) {
  // Prevents V8 performance issue:
  // https://github.com/facebook/react/pull/7232
  return '.' + inst._rootNodeID;
};

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

function shouldPreventMouseEvent(name, type, props) {
  switch (name) {
    case 'onClick':
    case 'onClickCapture':
    case 'onDoubleClick':
    case 'onDoubleClickCapture':
    case 'onMouseDown':
    case 'onMouseDownCapture':
    case 'onMouseMove':
    case 'onMouseMoveCapture':
    case 'onMouseUp':
    case 'onMouseUpCapture':
      return !!(props.disabled && isInteractive(type));
    default:
      return false;
  }
}

/**
 * This is a unified interface for event plugins to be installed and configured.
 *
 * Event plugins can implement the following properties:
 *
 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
 *     Required. When a top-level event is fired, this method is expected to
 *     extract synthetic events that will in turn be queued and dispatched.
 *
 *   `eventTypes` {object}
 *     Optional, plugins that fire events must publish a mapping of registration
 *     names that are used to register listeners. Values of this mapping must
 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
 *
 *   `executeDispatch` {function(object, function, string)}
 *     Optional, allows plugins to override how an event gets dispatched. By
 *     default, the listener is simply invoked.
 *
 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
 *
 * @public
 */
var EventPluginHub = {
  /**
   * Methods for injecting dependencies.
   */
  injection: {
    /**
     * @param {array} InjectedEventPluginOrder
     * @public
     */
    injectEventPluginOrder: EventPluginRegistry.injectEventPluginOrder,

    /**
     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
     */
    injectEventPluginsByName: EventPluginRegistry.injectEventPluginsByName
  },

  /**
   * Stores `listener` at `listenerBank[registrationName][key]`. Is idempotent.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {function} listener The callback to store.
   */
  putListener: function (inst, registrationName, listener) {
    !(typeof listener === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Expected %s listener to be a function, instead got type %s', registrationName, typeof listener) : _prodInvariant('94', registrationName, typeof listener) : void 0;

    var key = getDictionaryKey(inst);
    var bankForRegistrationName = listenerBank[registrationName] || (listenerBank[registrationName] = {});
    bankForRegistrationName[key] = listener;

    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.didPutListener) {
      PluginModule.didPutListener(inst, registrationName, listener);
    }
  },

  /**
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @return {?function} The stored callback.
   */
  getListener: function (inst, registrationName) {
    // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
    // live here; needs to be moved to a better place soon
    var bankForRegistrationName = listenerBank[registrationName];
    if (shouldPreventMouseEvent(registrationName, inst._currentElement.type, inst._currentElement.props)) {
      return null;
    }
    var key = getDictionaryKey(inst);
    return bankForRegistrationName && bankForRegistrationName[key];
  },

  /**
   * Deletes a listener from the registration bank.
   *
   * @param {object} inst The instance, which is the source of events.
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   */
  deleteListener: function (inst, registrationName) {
    var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
    if (PluginModule && PluginModule.willDeleteListener) {
      PluginModule.willDeleteListener(inst, registrationName);
    }

    var bankForRegistrationName = listenerBank[registrationName];
    // TODO: This should never be null -- when is it?
    if (bankForRegistrationName) {
      var key = getDictionaryKey(inst);
      delete bankForRegistrationName[key];
    }
  },

  /**
   * Deletes all listeners for the DOM element with the supplied ID.
   *
   * @param {object} inst The instance, which is the source of events.
   */
  deleteAllListeners: function (inst) {
    var key = getDictionaryKey(inst);
    for (var registrationName in listenerBank) {
      if (!listenerBank.hasOwnProperty(registrationName)) {
        continue;
      }

      if (!listenerBank[registrationName][key]) {
        continue;
      }

      var PluginModule = EventPluginRegistry.registrationNameModules[registrationName];
      if (PluginModule && PluginModule.willDeleteListener) {
        PluginModule.willDeleteListener(inst, registrationName);
      }

      delete listenerBank[registrationName][key];
    }
  },

  /**
   * Allows registered plugins an opportunity to extract events from top-level
   * native browser events.
   *
   * @return {*} An accumulation of synthetic events.
   * @internal
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events;
    var plugins = EventPluginRegistry.plugins;
    for (var i = 0; i < plugins.length; i++) {
      // Not every plugin in the ordering may be loaded at runtime.
      var possiblePlugin = plugins[i];
      if (possiblePlugin) {
        var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
        if (extractedEvents) {
          events = accumulateInto(events, extractedEvents);
        }
      }
    }
    return events;
  },

  /**
   * Enqueues a synthetic event that should be dispatched when
   * `processEventQueue` is invoked.
   *
   * @param {*} events An accumulation of synthetic events.
   * @internal
   */
  enqueueEvents: function (events) {
    if (events) {
      eventQueue = accumulateInto(eventQueue, events);
    }
  },

  /**
   * Dispatches all synthetic events on the event queue.
   *
   * @internal
   */
  processEventQueue: function (simulated) {
    // Set `eventQueue` to null before processing it so that we can tell if more
    // events get enqueued while processing.
    var processingEventQueue = eventQueue;
    eventQueue = null;
    if (simulated) {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseSimulated);
    } else {
      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
    }
    !!eventQueue ? process.env.NODE_ENV !== 'production' ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : _prodInvariant('95') : void 0;
    // This would be a good time to rethrow if any of the event handlers threw.
    ReactErrorUtils.rethrowCaughtError();
  },

  /**
   * These are needed for tests only. Do not use!
   */
  __purge: function () {
    listenerBank = {};
  },

  __getListenerBank: function () {
    return listenerBank;
  }
};

module.exports = EventPluginHub;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var EventPluginHub = __webpack_require__(53);
var EventPluginUtils = __webpack_require__(127);

var accumulateInto = __webpack_require__(236);
var forEachAccumulated = __webpack_require__(237);
var warning = __webpack_require__(2);

var getListener = EventPluginHub.getListener;

/**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
function listenerAtPhase(inst, event, propagationPhase) {
  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(inst, registrationName);
}

/**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */
function accumulateDirectionalDispatches(inst, phase, event) {
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(inst, 'Dispatching inst must not be null') : void 0;
  }
  var listener = listenerAtPhase(inst, event, phase);
  if (listener) {
    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }
}

/**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We cannot perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */
function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    EventPluginUtils.traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Same as `accumulateTwoPhaseDispatchesSingle`, but skips over the targetID.
 */
function accumulateTwoPhaseDispatchesSingleSkipTarget(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    var targetInst = event._targetInst;
    var parentInst = targetInst ? EventPluginUtils.getParentInstance(targetInst) : null;
    EventPluginUtils.traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */
function accumulateDispatches(inst, ignoredDirection, event) {
  if (event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(inst, registrationName);
    if (listener) {
      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
    }
  }
}

/**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */
function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event._targetInst, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}

function accumulateTwoPhaseDispatchesSkipTarget(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);
}

function accumulateEnterLeaveDispatches(leave, enter, from, to) {
  EventPluginUtils.traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}

function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}

/**
 * A small set of propagation patterns, each of which will accept a small amount
 * of information, and generate a set of "dispatch ready event objects" - which
 * are sets of events that have already been annotated with a set of dispatched
 * listener functions/ids. The API is designed this way to discourage these
 * propagation strategies from actually executing the dispatches, since we
 * always want to collect the entire set of dispatches before executing event a
 * single one.
 *
 * @constructor EventPropagators
 */
var EventPropagators = {
  accumulateTwoPhaseDispatches: accumulateTwoPhaseDispatches,
  accumulateTwoPhaseDispatchesSkipTarget: accumulateTwoPhaseDispatchesSkipTarget,
  accumulateDirectDispatches: accumulateDirectDispatches,
  accumulateEnterLeaveDispatches: accumulateEnterLeaveDispatches
};

module.exports = EventPropagators;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 */

// TODO: Replace this with ES6: var ReactInstanceMap = new Map();

var ReactInstanceMap = {
  /**
   * This API should be called `delete` but we'd have to make sure to always
   * transform these to strings for IE support. When this transform is fully
   * supported we can rename it.
   */
  remove: function (key) {
    key._reactInternalInstance = undefined;
  },

  get: function (key) {
    return key._reactInternalInstance;
  },

  has: function (key) {
    return key._reactInternalInstance !== undefined;
  },

  set: function (key, value) {
    key._reactInternalInstance = value;
  }
};

module.exports = ReactInstanceMap;

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticEvent = __webpack_require__(22);

var getEventTarget = __webpack_require__(136);

/**
 * @interface UIEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var UIEventInterface = {
  view: function (event) {
    if (event.view) {
      return event.view;
    }

    var target = getEventTarget(event);
    if (target.window === target) {
      // target is a window object
      return target;
    }

    var doc = target.ownerDocument;
    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
    if (doc) {
      return doc.defaultView || doc.parentWindow;
    } else {
      return window;
    }
  },
  detail: function (event) {
    return event.detail || 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);

module.exports = SyntheticUIEvent;

/***/ }),
/* 57 */,
/* 58 */,
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var emptyFunction = __webpack_require__(12);

/**
 * Upstream version of event listener. Does not take into account specific
 * nature of platform.
 */
var EventListener = {
  /**
   * Listen to DOM events during the bubble phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  listen: function listen(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, false);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, false);
        }
      };
    } else if (target.attachEvent) {
      target.attachEvent('on' + eventType, callback);
      return {
        remove: function remove() {
          target.detachEvent('on' + eventType, callback);
        }
      };
    }
  },

  /**
   * Listen to DOM events during the capture phase.
   *
   * @param {DOMEventTarget} target DOM element to register listener on.
   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.
   * @param {function} callback Callback function.
   * @return {object} Object with a `remove` method.
   */
  capture: function capture(target, eventType, callback) {
    if (target.addEventListener) {
      target.addEventListener(eventType, callback, true);
      return {
        remove: function remove() {
          target.removeEventListener(eventType, callback, true);
        }
      };
    } else {
      if (process.env.NODE_ENV !== 'production') {
        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');
      }
      return {
        remove: emptyFunction
      };
    }
  },

  registerDefault: function registerDefault() {}
};

module.exports = EventListener;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * @param {DOMElement} node input/textarea to focus
 */

function focusNode(node) {
  // IE8 can throw "Can't move focus to the control because it is invisible,
  // not enabled, or of a type that does not accept the focus." for all kinds of
  // reasons that are too expensive and fragile to test.
  try {
    node.focus();
  } catch (e) {}
}

module.exports = focusNode;

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/* eslint-disable fb-www/typeof-undefined */

/**
 * Same as document.activeElement but wraps in a try-catch block. In IE it is
 * not safe to call document.activeElement if there is nothing focused.
 *
 * The activeElement will be null only if the document or document body is not
 * yet defined.
 *
 * @param {?DOMDocument} doc Defaults to current document.
 * @return {?DOMElement}
 */
function getActiveElement(doc) /*?DOMElement*/{
  doc = doc || (typeof document !== 'undefined' ? document : undefined);
  if (typeof doc === 'undefined') {
    return null;
  }
  try {
    return doc.activeElement || doc.body;
  } catch (e) {
    return doc.body;
  }
}

module.exports = getActiveElement;

/***/ }),
/* 62 */,
/* 63 */,
/* 64 */,
/* 65 */,
/* 66 */,
/* 67 */,
/* 68 */,
/* 69 */,
/* 70 */,
/* 71 */,
/* 72 */,
/* 73 */,
/* 74 */,
/* 75 */,
/* 76 */,
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.intVal = function (mixed_var, base) {
    base = base || 10;
    if (typeof mixed_var === "string") {
        var tmp = parseInt(mixed_var, base);
        if (isNaN(tmp)) {
            return 0;
        }
        else {
            return tmp;
        }
    }
    else if (typeof mixed_var === "number") {
        return Math.floor(mixed_var);
    }
    else {
        return 0;
    }
};


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.Size = {
    LARGE: 'large',
    SMALL: 'small',
    XSMALL: 'xsmall',
};
exports.SIZE_MAP = {
    large: 'lg',
    medium: 'md',
    small: 'sm',
    xsmall: 'xs',
    lg: 'lg',
    md: 'md',
    sm: 'sm',
    xs: 'xs',
};
exports.DEVICE_SIZES = [
    'lg',
    'md',
    'sm',
    'xs',
];
exports.State = {
    SUCCESS: 'success',
    WARNING: 'warning',
    DANGER: 'danger',
    INFO: 'info',
};
exports.Style = {
    DEFAULT: 'default',
    PRIMARY: 'primary',
    LINK: 'link',
    INVERSE: 'inverse',
};


/***/ }),
/* 79 */,
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(7);

var invariant = __webpack_require__(1);

/**
 * Injectable ordering of event plugins.
 */
var eventPluginOrder = null;

/**
 * Injectable mapping from names to event plugin modules.
 */
var namesToPlugins = {};

/**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */
function recomputePluginOrdering() {
  if (!eventPluginOrder) {
    // Wait until an `eventPluginOrder` is injected.
    return;
  }
  for (var pluginName in namesToPlugins) {
    var pluginModule = namesToPlugins[pluginName];
    var pluginIndex = eventPluginOrder.indexOf(pluginName);
    !(pluginIndex > -1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : _prodInvariant('96', pluginName) : void 0;
    if (EventPluginRegistry.plugins[pluginIndex]) {
      continue;
    }
    !pluginModule.extractEvents ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : _prodInvariant('97', pluginName) : void 0;
    EventPluginRegistry.plugins[pluginIndex] = pluginModule;
    var publishedEvents = pluginModule.eventTypes;
    for (var eventName in publishedEvents) {
      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : _prodInvariant('98', eventName, pluginName) : void 0;
    }
  }
}

/**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */
function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
  !!EventPluginRegistry.eventNameDispatchConfigs.hasOwnProperty(eventName) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : _prodInvariant('99', eventName) : void 0;
  EventPluginRegistry.eventNameDispatchConfigs[eventName] = dispatchConfig;

  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
      }
    }
    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
    return true;
  }
  return false;
}

/**
 * Publishes a registration name that is used to identify dispatched events and
 * can be used with `EventPluginHub.putListener` to register listeners.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */
function publishRegistrationName(registrationName, pluginModule, eventName) {
  !!EventPluginRegistry.registrationNameModules[registrationName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : _prodInvariant('100', registrationName) : void 0;
  EventPluginRegistry.registrationNameModules[registrationName] = pluginModule;
  EventPluginRegistry.registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

  if (process.env.NODE_ENV !== 'production') {
    var lowerCasedName = registrationName.toLowerCase();
    EventPluginRegistry.possibleRegistrationNames[lowerCasedName] = registrationName;

    if (registrationName === 'onDoubleClick') {
      EventPluginRegistry.possibleRegistrationNames.ondblclick = registrationName;
    }
  }
}

/**
 * Registers plugins so that they can extract and dispatch events.
 *
 * @see {EventPluginHub}
 */
var EventPluginRegistry = {
  /**
   * Ordered list of injected plugins.
   */
  plugins: [],

  /**
   * Mapping from event name to dispatch config
   */
  eventNameDispatchConfigs: {},

  /**
   * Mapping from registration name to plugin module
   */
  registrationNameModules: {},

  /**
   * Mapping from registration name to event name
   */
  registrationNameDependencies: {},

  /**
   * Mapping from lowercase registration names to the properly cased version,
   * used to warn in the case of missing event handlers. Available
   * only in __DEV__.
   * @type {Object}
   */
  possibleRegistrationNames: process.env.NODE_ENV !== 'production' ? {} : null,
  // Trust the developer to only use possibleRegistrationNames in __DEV__

  /**
   * Injects an ordering of plugins (by plugin name). This allows the ordering
   * to be decoupled from injection of the actual plugins so that ordering is
   * always deterministic regardless of packaging, on-the-fly injection, etc.
   *
   * @param {array} InjectedEventPluginOrder
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginOrder}
   */
  injectEventPluginOrder: function (injectedEventPluginOrder) {
    !!eventPluginOrder ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : _prodInvariant('101') : void 0;
    // Clone the ordering so it cannot be dynamically mutated.
    eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
    recomputePluginOrdering();
  },

  /**
   * Injects plugins to be used by `EventPluginHub`. The plugin names must be
   * in the ordering injected by `injectEventPluginOrder`.
   *
   * Plugins can be injected as part of page initialization or on-the-fly.
   *
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   * @internal
   * @see {EventPluginHub.injection.injectEventPluginsByName}
   */
  injectEventPluginsByName: function (injectedNamesToPlugins) {
    var isOrderingDirty = false;
    for (var pluginName in injectedNamesToPlugins) {
      if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
        continue;
      }
      var pluginModule = injectedNamesToPlugins[pluginName];
      if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
        !!namesToPlugins[pluginName] ? process.env.NODE_ENV !== 'production' ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : _prodInvariant('102', pluginName) : void 0;
        namesToPlugins[pluginName] = pluginModule;
        isOrderingDirty = true;
      }
    }
    if (isOrderingDirty) {
      recomputePluginOrdering();
    }
  },

  /**
   * Looks up the plugin for the supplied event.
   *
   * @param {object} event A synthetic event.
   * @return {?object} The plugin that created the supplied event.
   * @internal
   */
  getPluginModuleForEvent: function (event) {
    var dispatchConfig = event.dispatchConfig;
    if (dispatchConfig.registrationName) {
      return EventPluginRegistry.registrationNameModules[dispatchConfig.registrationName] || null;
    }
    if (dispatchConfig.phasedRegistrationNames !== undefined) {
      // pulling phasedRegistrationNames out of dispatchConfig helps Flow see
      // that it is not undefined.
      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

      for (var phase in phasedRegistrationNames) {
        if (!phasedRegistrationNames.hasOwnProperty(phase)) {
          continue;
        }
        var pluginModule = EventPluginRegistry.registrationNameModules[phasedRegistrationNames[phase]];
        if (pluginModule) {
          return pluginModule;
        }
      }
    }
    return null;
  },

  /**
   * Exposed for unit testing.
   * @private
   */
  _resetEventPlugins: function () {
    eventPluginOrder = null;
    for (var pluginName in namesToPlugins) {
      if (namesToPlugins.hasOwnProperty(pluginName)) {
        delete namesToPlugins[pluginName];
      }
    }
    EventPluginRegistry.plugins.length = 0;

    var eventNameDispatchConfigs = EventPluginRegistry.eventNameDispatchConfigs;
    for (var eventName in eventNameDispatchConfigs) {
      if (eventNameDispatchConfigs.hasOwnProperty(eventName)) {
        delete eventNameDispatchConfigs[eventName];
      }
    }

    var registrationNameModules = EventPluginRegistry.registrationNameModules;
    for (var registrationName in registrationNameModules) {
      if (registrationNameModules.hasOwnProperty(registrationName)) {
        delete registrationNameModules[registrationName];
      }
    }

    if (process.env.NODE_ENV !== 'production') {
      var possibleRegistrationNames = EventPluginRegistry.possibleRegistrationNames;
      for (var lowerCasedName in possibleRegistrationNames) {
        if (possibleRegistrationNames.hasOwnProperty(lowerCasedName)) {
          delete possibleRegistrationNames[lowerCasedName];
        }
      }
    }
  }
};

module.exports = EventPluginRegistry;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(4);

var EventPluginRegistry = __webpack_require__(80);
var ReactEventEmitterMixin = __webpack_require__(538);
var ViewportMetrics = __webpack_require__(235);

var getVendorPrefixedEventName = __webpack_require__(573);
var isEventSupported = __webpack_require__(137);

/**
 * Summary of `ReactBrowserEventEmitter` event handling:
 *
 *  - Top-level delegation is used to trap most native browser events. This
 *    may only occur in the main thread and is the responsibility of
 *    ReactEventListener, which is injected and can therefore support pluggable
 *    event sources. This is the only work that occurs in the main thread.
 *
 *  - We normalize and de-duplicate events to account for browser quirks. This
 *    may be done in the worker thread.
 *
 *  - Forward these native events (with the associated top-level type used to
 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
 *    to extract any synthetic events.
 *
 *  - The `EventPluginHub` will then process each event by annotating them with
 *    "dispatches", a sequence of listeners and IDs that care about that event.
 *
 *  - The `EventPluginHub` then dispatches the events.
 *
 * Overview of React and the event system:
 *
 * +------------+    .
 * |    DOM     |    .
 * +------------+    .
 *       |           .
 *       v           .
 * +------------+    .
 * | ReactEvent |    .
 * |  Listener  |    .
 * +------------+    .                         +-----------+
 *       |           .               +--------+|SimpleEvent|
 *       |           .               |         |Plugin     |
 * +-----|------+    .               v         +-----------+
 * |     |      |    .    +--------------+                    +------------+
 * |     +-----------.--->|EventPluginHub|                    |    Event   |
 * |            |    .    |              |     +-----------+  | Propagators|
 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
 * |            |    .    |              |     +-----------+  |  utilities |
 * |     +-----------.--->|              |                    +------------+
 * |     |      |    .    +--------------+
 * +-----|------+    .                ^        +-----------+
 *       |           .                |        |Enter/Leave|
 *       +           .                +-------+|Plugin     |
 * +-------------+   .                         +-----------+
 * | application |   .
 * |-------------|   .
 * |             |   .
 * |             |   .
 * +-------------+   .
 *                   .
 *    React Core     .  General Purpose Event Plugin System
 */

var hasEventPageXY;
var alreadyListeningTo = {};
var isMonitoringScrollValue = false;
var reactTopListenersCounter = 0;

// For events like 'submit' which don't consistently bubble (which we trap at a
// lower node than `document`), binding at `document` would cause duplicate
// events so we don't include them here
var topEventMapping = {
  topAbort: 'abort',
  topAnimationEnd: getVendorPrefixedEventName('animationend') || 'animationend',
  topAnimationIteration: getVendorPrefixedEventName('animationiteration') || 'animationiteration',
  topAnimationStart: getVendorPrefixedEventName('animationstart') || 'animationstart',
  topBlur: 'blur',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topChange: 'change',
  topClick: 'click',
  topCompositionEnd: 'compositionend',
  topCompositionStart: 'compositionstart',
  topCompositionUpdate: 'compositionupdate',
  topContextMenu: 'contextmenu',
  topCopy: 'copy',
  topCut: 'cut',
  topDoubleClick: 'dblclick',
  topDrag: 'drag',
  topDragEnd: 'dragend',
  topDragEnter: 'dragenter',
  topDragExit: 'dragexit',
  topDragLeave: 'dragleave',
  topDragOver: 'dragover',
  topDragStart: 'dragstart',
  topDrop: 'drop',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topFocus: 'focus',
  topInput: 'input',
  topKeyDown: 'keydown',
  topKeyPress: 'keypress',
  topKeyUp: 'keyup',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topMouseDown: 'mousedown',
  topMouseMove: 'mousemove',
  topMouseOut: 'mouseout',
  topMouseOver: 'mouseover',
  topMouseUp: 'mouseup',
  topPaste: 'paste',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topScroll: 'scroll',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topSelectionChange: 'selectionchange',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTextInput: 'textInput',
  topTimeUpdate: 'timeupdate',
  topTouchCancel: 'touchcancel',
  topTouchEnd: 'touchend',
  topTouchMove: 'touchmove',
  topTouchStart: 'touchstart',
  topTransitionEnd: getVendorPrefixedEventName('transitionend') || 'transitionend',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting',
  topWheel: 'wheel'
};

/**
 * To ensure no conflicts with other potential React instances on the page
 */
var topListenersIDKey = '_reactListenersID' + String(Math.random()).slice(2);

function getListeningForDocument(mountAt) {
  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
  // directly.
  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
    mountAt[topListenersIDKey] = reactTopListenersCounter++;
    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
  }
  return alreadyListeningTo[mountAt[topListenersIDKey]];
}

/**
 * `ReactBrowserEventEmitter` is used to attach top-level event listeners. For
 * example:
 *
 *   EventPluginHub.putListener('myID', 'onClick', myFunction);
 *
 * This would allocate a "registration" of `('onClick', myFunction)` on 'myID'.
 *
 * @internal
 */
var ReactBrowserEventEmitter = _assign({}, ReactEventEmitterMixin, {
  /**
   * Injectable event backend
   */
  ReactEventListener: null,

  injection: {
    /**
     * @param {object} ReactEventListener
     */
    injectReactEventListener: function (ReactEventListener) {
      ReactEventListener.setHandleTopLevel(ReactBrowserEventEmitter.handleTopLevel);
      ReactBrowserEventEmitter.ReactEventListener = ReactEventListener;
    }
  },

  /**
   * Sets whether or not any created callbacks should be enabled.
   *
   * @param {boolean} enabled True if callbacks should be enabled.
   */
  setEnabled: function (enabled) {
    if (ReactBrowserEventEmitter.ReactEventListener) {
      ReactBrowserEventEmitter.ReactEventListener.setEnabled(enabled);
    }
  },

  /**
   * @return {boolean} True if callbacks are enabled.
   */
  isEnabled: function () {
    return !!(ReactBrowserEventEmitter.ReactEventListener && ReactBrowserEventEmitter.ReactEventListener.isEnabled());
  },

  /**
   * We listen for bubbled touch events on the document object.
   *
   * Firefox v8.01 (and possibly others) exhibited strange behavior when
   * mounting `onmousemove` events at some node that was not the document
   * element. The symptoms were that if your mouse is not moving over something
   * contained within that mount point (for example on the background) the
   * top-level listeners for `onmousemove` won't be called. However, if you
   * register the `mousemove` on the document object, then it will of course
   * catch all `mousemove`s. This along with iOS quirks, justifies restricting
   * top-level listeners to the document object only, at least for these
   * movement types of events and possibly all events.
   *
   * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
   *
   * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
   * they bubble to document.
   *
   * @param {string} registrationName Name of listener (e.g. `onClick`).
   * @param {object} contentDocumentHandle Document which owns the container
   */
  listenTo: function (registrationName, contentDocumentHandle) {
    var mountAt = contentDocumentHandle;
    var isListening = getListeningForDocument(mountAt);
    var dependencies = EventPluginRegistry.registrationNameDependencies[registrationName];

    for (var i = 0; i < dependencies.length; i++) {
      var dependency = dependencies[i];
      if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
        if (dependency === 'topWheel') {
          if (isEventSupported('wheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'wheel', mountAt);
          } else if (isEventSupported('mousewheel')) {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'mousewheel', mountAt);
          } else {
            // Firefox needs to capture a different mouse scroll event.
            // @see http://www.quirksmode.org/dom/events/tests/scroll.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topWheel', 'DOMMouseScroll', mountAt);
          }
        } else if (dependency === 'topScroll') {
          if (isEventSupported('scroll', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topScroll', 'scroll', mountAt);
          } else {
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topScroll', 'scroll', ReactBrowserEventEmitter.ReactEventListener.WINDOW_HANDLE);
          }
        } else if (dependency === 'topFocus' || dependency === 'topBlur') {
          if (isEventSupported('focus', true)) {
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topFocus', 'focus', mountAt);
            ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent('topBlur', 'blur', mountAt);
          } else if (isEventSupported('focusin')) {
            // IE has `focusin` and `focusout` events which bubble.
            // @see http://www.quirksmode.org/blog/archives/2008/04/delegating_the.html
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topFocus', 'focusin', mountAt);
            ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent('topBlur', 'focusout', mountAt);
          }

          // to make sure blur and focus event listeners are only attached once
          isListening.topBlur = true;
          isListening.topFocus = true;
        } else if (topEventMapping.hasOwnProperty(dependency)) {
          ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(dependency, topEventMapping[dependency], mountAt);
        }

        isListening[dependency] = true;
      }
    }
  },

  trapBubbledEvent: function (topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapBubbledEvent(topLevelType, handlerBaseName, handle);
  },

  trapCapturedEvent: function (topLevelType, handlerBaseName, handle) {
    return ReactBrowserEventEmitter.ReactEventListener.trapCapturedEvent(topLevelType, handlerBaseName, handle);
  },

  /**
   * Protect against document.createEvent() returning null
   * Some popup blocker extensions appear to do this:
   * https://github.com/facebook/react/issues/6887
   */
  supportsEventPageXY: function () {
    if (!document.createEvent) {
      return false;
    }
    var ev = document.createEvent('MouseEvent');
    return ev != null && 'pageX' in ev;
  },

  /**
   * Listens to window scroll and resize events. We cache scroll values so that
   * application code can access them without triggering reflows.
   *
   * ViewportMetrics is only used by SyntheticMouse/TouchEvent and only when
   * pageX/pageY isn't supported (legacy browsers).
   *
   * NOTE: Scroll events do not bubble.
   *
   * @see http://www.quirksmode.org/dom/events/scroll.html
   */
  ensureScrollValueMonitoring: function () {
    if (hasEventPageXY === undefined) {
      hasEventPageXY = ReactBrowserEventEmitter.supportsEventPageXY();
    }
    if (!hasEventPageXY && !isMonitoringScrollValue) {
      var refresh = ViewportMetrics.refreshScrollValues;
      ReactBrowserEventEmitter.ReactEventListener.monitorScrollValue(refresh);
      isMonitoringScrollValue = true;
    }
  }
});

module.exports = ReactBrowserEventEmitter;

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticUIEvent = __webpack_require__(56);
var ViewportMetrics = __webpack_require__(235);

var getEventModifierState = __webpack_require__(135);

/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var MouseEventInterface = {
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  getModifierState: getEventModifierState,
  button: function (event) {
    // Webkit, Firefox, IE9+
    // which:  1 2 3
    // button: 0 1 2 (standard)
    var button = event.button;
    if ('which' in event) {
      return button;
    }
    // IE<9
    // which:  undefined
    // button: 0 0 0
    // button: 1 4 2 (onmouseup)
    return button === 2 ? 2 : button === 4 ? 1 : 0;
  },
  buttons: null,
  relatedTarget: function (event) {
    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
  },
  // "Proprietary" Interface.
  pageX: function (event) {
    return 'pageX' in event ? event.pageX : event.clientX + ViewportMetrics.currentScrollLeft;
  },
  pageY: function (event) {
    return 'pageY' in event ? event.pageY : event.clientY + ViewportMetrics.currentScrollTop;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticMouseEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticMouseEvent, MouseEventInterface);

module.exports = SyntheticMouseEvent;

/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(7);

var invariant = __webpack_require__(1);

var OBSERVED_ERROR = {};

/**
 * `Transaction` creates a black box that is able to wrap any method such that
 * certain invariants are maintained before and after the method is invoked
 * (Even if an exception is thrown while invoking the wrapped method). Whoever
 * instantiates a transaction can provide enforcers of the invariants at
 * creation time. The `Transaction` class itself will supply one additional
 * automatic invariant for you - the invariant that any transaction instance
 * should not be run while it is already being run. You would typically create a
 * single instance of a `Transaction` for reuse multiple times, that potentially
 * is used to wrap several different methods. Wrappers are extremely simple -
 * they only require implementing two methods.
 *
 * <pre>
 *                       wrappers (injected at creation time)
 *                                      +        +
 *                                      |        |
 *                    +-----------------|--------|--------------+
 *                    |                 v        |              |
 *                    |      +---------------+   |              |
 *                    |   +--|    wrapper1   |---|----+         |
 *                    |   |  +---------------+   v    |         |
 *                    |   |          +-------------+  |         |
 *                    |   |     +----|   wrapper2  |--------+   |
 *                    |   |     |    +-------------+  |     |   |
 *                    |   |     |                     |     |   |
 *                    |   v     v                     v     v   | wrapper
 *                    | +---+ +---+   +---------+   +---+ +---+ | invariants
 * perform(anyMethod) | |   | |   |   |         |   |   | |   | | maintained
 * +----------------->|-|---|-|---|-->|anyMethod|---|---|-|---|-|-------->
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | |   | |   |   |         |   |   | |   | |
 *                    | +---+ +---+   +---------+   +---+ +---+ |
 *                    |  initialize                    close    |
 *                    +-----------------------------------------+
 * </pre>
 *
 * Use cases:
 * - Preserving the input selection ranges before/after reconciliation.
 *   Restoring selection even in the event of an unexpected error.
 * - Deactivating events while rearranging the DOM, preventing blurs/focuses,
 *   while guaranteeing that afterwards, the event system is reactivated.
 * - Flushing a queue of collected DOM mutations to the main UI thread after a
 *   reconciliation takes place in a worker thread.
 * - Invoking any collected `componentDidUpdate` callbacks after rendering new
 *   content.
 * - (Future use case): Wrapping particular flushes of the `ReactWorker` queue
 *   to preserve the `scrollTop` (an automatic scroll aware DOM).
 * - (Future use case): Layout calculations before and after DOM updates.
 *
 * Transactional plugin API:
 * - A module that has an `initialize` method that returns any precomputation.
 * - and a `close` method that accepts the precomputation. `close` is invoked
 *   when the wrapped process is completed, or has failed.
 *
 * @param {Array<TransactionalWrapper>} transactionWrapper Wrapper modules
 * that implement `initialize` and `close`.
 * @return {Transaction} Single transaction for reuse in thread.
 *
 * @class Transaction
 */
var TransactionImpl = {
  /**
   * Sets up this instance so that it is prepared for collecting metrics. Does
   * so such that this setup method may be used on an instance that is already
   * initialized, in a way that does not consume additional memory upon reuse.
   * That can be useful if you decide to make your subclass of this mixin a
   * "PooledClass".
   */
  reinitializeTransaction: function () {
    this.transactionWrappers = this.getTransactionWrappers();
    if (this.wrapperInitData) {
      this.wrapperInitData.length = 0;
    } else {
      this.wrapperInitData = [];
    }
    this._isInTransaction = false;
  },

  _isInTransaction: false,

  /**
   * @abstract
   * @return {Array<TransactionWrapper>} Array of transaction wrappers.
   */
  getTransactionWrappers: null,

  isInTransaction: function () {
    return !!this._isInTransaction;
  },

  /* eslint-disable space-before-function-paren */

  /**
   * Executes the function within a safety window. Use this for the top level
   * methods that result in large amounts of computation/mutations that would
   * need to be safety checked. The optional arguments helps prevent the need
   * to bind in many cases.
   *
   * @param {function} method Member of scope to call.
   * @param {Object} scope Scope to invoke from.
   * @param {Object?=} a Argument to pass to the method.
   * @param {Object?=} b Argument to pass to the method.
   * @param {Object?=} c Argument to pass to the method.
   * @param {Object?=} d Argument to pass to the method.
   * @param {Object?=} e Argument to pass to the method.
   * @param {Object?=} f Argument to pass to the method.
   *
   * @return {*} Return value from `method`.
   */
  perform: function (method, scope, a, b, c, d, e, f) {
    /* eslint-enable space-before-function-paren */
    !!this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.perform(...): Cannot initialize a transaction when there is already an outstanding transaction.') : _prodInvariant('27') : void 0;
    var errorThrown;
    var ret;
    try {
      this._isInTransaction = true;
      // Catching errors makes debugging more difficult, so we start with
      // errorThrown set to true before setting it to false after calling
      // close -- if it's still set to true in the finally block, it means
      // one of these calls threw.
      errorThrown = true;
      this.initializeAll(0);
      ret = method.call(scope, a, b, c, d, e, f);
      errorThrown = false;
    } finally {
      try {
        if (errorThrown) {
          // If `method` throws, prefer to show that stack trace over any thrown
          // by invoking `closeAll`.
          try {
            this.closeAll(0);
          } catch (err) {}
        } else {
          // Since `method` didn't throw, we don't want to silence the exception
          // here.
          this.closeAll(0);
        }
      } finally {
        this._isInTransaction = false;
      }
    }
    return ret;
  },

  initializeAll: function (startIndex) {
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      try {
        // Catching errors makes debugging more difficult, so we start with the
        // OBSERVED_ERROR state before overwriting it with the real return value
        // of initialize -- if it's still set to OBSERVED_ERROR in the finally
        // block, it means wrapper.initialize threw.
        this.wrapperInitData[i] = OBSERVED_ERROR;
        this.wrapperInitData[i] = wrapper.initialize ? wrapper.initialize.call(this) : null;
      } finally {
        if (this.wrapperInitData[i] === OBSERVED_ERROR) {
          // The initializer for wrapper i threw an error; initialize the
          // remaining wrappers but silence any exceptions from them to ensure
          // that the first error is the one to bubble up.
          try {
            this.initializeAll(i + 1);
          } catch (err) {}
        }
      }
    }
  },

  /**
   * Invokes each of `this.transactionWrappers.close[i]` functions, passing into
   * them the respective return values of `this.transactionWrappers.init[i]`
   * (`close`rs that correspond to initializers that failed will not be
   * invoked).
   */
  closeAll: function (startIndex) {
    !this.isInTransaction() ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Transaction.closeAll(): Cannot close transaction when none are open.') : _prodInvariant('28') : void 0;
    var transactionWrappers = this.transactionWrappers;
    for (var i = startIndex; i < transactionWrappers.length; i++) {
      var wrapper = transactionWrappers[i];
      var initData = this.wrapperInitData[i];
      var errorThrown;
      try {
        // Catching errors makes debugging more difficult, so we start with
        // errorThrown set to true before setting it to false after calling
        // close -- if it's still set to true in the finally block, it means
        // wrapper.close threw.
        errorThrown = true;
        if (initData !== OBSERVED_ERROR && wrapper.close) {
          wrapper.close.call(this, initData);
        }
        errorThrown = false;
      } finally {
        if (errorThrown) {
          // The closer for wrapper i threw an error; close the remaining
          // wrappers but silence any exceptions from them to ensure that the
          // first error is the one to bubble up.
          try {
            this.closeAll(i + 1);
          } catch (e) {}
        }
      }
    }
    this.wrapperInitData.length = 0;
  }
};

module.exports = TransactionImpl;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * Based on the escape-html library, which is used under the MIT License below:
 *
 * Copyright (c) 2012-2013 TJ Holowaychuk
 * Copyright (c) 2015 Andreas Lubbe
 * Copyright (c) 2015 Tiancheng "Timothy" Gu
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * 'Software'), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 * IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
 * CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
 * TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */



// code copied and modified from escape-html
/**
 * Module variables.
 * @private
 */

var matchHtmlRegExp = /["'&<>]/;

/**
 * Escape special characters in the given string of html.
 *
 * @param  {string} string The string to escape for inserting into HTML
 * @return {string}
 * @public
 */

function escapeHtml(string) {
  var str = '' + string;
  var match = matchHtmlRegExp.exec(str);

  if (!match) {
    return str;
  }

  var escape;
  var html = '';
  var index = 0;
  var lastIndex = 0;

  for (index = match.index; index < str.length; index++) {
    switch (str.charCodeAt(index)) {
      case 34:
        // "
        escape = '&quot;';
        break;
      case 38:
        // &
        escape = '&amp;';
        break;
      case 39:
        // '
        escape = '&#x27;'; // modified from escape-html; used to be '&#39'
        break;
      case 60:
        // <
        escape = '&lt;';
        break;
      case 62:
        // >
        escape = '&gt;';
        break;
      default:
        continue;
    }

    if (lastIndex !== index) {
      html += str.substring(lastIndex, index);
    }

    lastIndex = index + 1;
    html += escape;
  }

  return lastIndex !== index ? html + str.substring(lastIndex, index) : html;
}
// end code copied and modified from escape-html

/**
 * Escapes text to prevent scripting attacks.
 *
 * @param {*} text Text value to escape.
 * @return {string} An escaped string.
 */
function escapeTextContentForBrowser(text) {
  if (typeof text === 'boolean' || typeof text === 'number') {
    // this shortcircuit helps perf for types that we know will never have
    // special characters, especially given that this function is used often
    // for numeric dom ids.
    return '' + text;
  }
  return escapeHtml(text);
}

module.exports = escapeTextContentForBrowser;

/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ExecutionEnvironment = __webpack_require__(5);
var DOMNamespaces = __webpack_require__(126);

var WHITESPACE_TEST = /^[ \r\n\t\f]/;
var NONVISIBLE_TEST = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/;

var createMicrosoftUnsafeLocalFunction = __webpack_require__(133);

// SVG temp container for IE lacking innerHTML
var reusableSVGContainer;

/**
 * Set the innerHTML property of a node, ensuring that whitespace is preserved
 * even in IE8.
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */
var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
  // IE does not have innerHTML for SVG nodes, so instead we inject the
  // new markup in a temp node and then move the child nodes across into
  // the target node
  if (node.namespaceURI === DOMNamespaces.svg && !('innerHTML' in node)) {
    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
    var svgNode = reusableSVGContainer.firstChild;
    while (svgNode.firstChild) {
      node.appendChild(svgNode.firstChild);
    }
  } else {
    node.innerHTML = html;
  }
});

if (ExecutionEnvironment.canUseDOM) {
  // IE8: When updating a just created node with innerHTML only leading
  // whitespace is removed. When updating an existing node with innerHTML
  // whitespace in root TextNodes is also collapsed.
  // @see quirksmode.org/bugreports/archives/2004/11/innerhtml_and_t.html

  // Feature detection; only IE8 is known to behave improperly like this.
  var testElement = document.createElement('div');
  testElement.innerHTML = ' ';
  if (testElement.innerHTML === '') {
    setInnerHTML = function (node, html) {
      // Magic theory: IE8 supposedly differentiates between added and updated
      // nodes when processing innerHTML, innerHTML on updated nodes suffers
      // from worse whitespace behavior. Re-adding a node like this triggers
      // the initial and more favorable whitespace behavior.
      // TODO: What to do on a detached node?
      if (node.parentNode) {
        node.parentNode.replaceChild(node, node);
      }

      // We also implement a workaround for non-visible tags disappearing into
      // thin air on IE8, this only happens if there is no visible text
      // in-front of the non-visible tags. Piggyback on the whitespace fix
      // and simply check if any non-visible tags appear in the source.
      if (WHITESPACE_TEST.test(html) || html[0] === '<' && NONVISIBLE_TEST.test(html)) {
        // Recover leading whitespace by temporarily prepending any character.
        // \uFEFF has the potential advantage of being zero-width/invisible.
        // UglifyJS drops U+FEFF chars when parsing, so use String.fromCharCode
        // in hopes that this is preserved even if "\uFEFF" is transformed to
        // the actual Unicode character (by Babel, for example).
        // https://github.com/mishoo/UglifyJS2/blob/v2.4.20/lib/parse.js#L216
        node.innerHTML = String.fromCharCode(0xfeff) + html;

        // deleteData leaves an empty `TextNode` which offsets the index of all
        // children. Definitely want to avoid this.
        var textNode = node.firstChild;
        if (textNode.data.length === 1) {
          node.removeChild(textNode);
        } else {
          textNode.deleteData(0, 1);
        }
      } else {
        node.innerHTML = html;
      }
    };
  }
  testElement = null;
}

module.exports = setInnerHTML;

/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var canDefineProperty = false;
if (process.env.NODE_ENV !== 'production') {
  try {
    // $FlowFixMe https://github.com/facebook/flow/issues/285
    Object.defineProperty({}, 'x', { get: function () {} });
    canDefineProperty = true;
  } catch (x) {
    // IE will fail on defineProperty
  }
}

module.exports = canDefineProperty;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var randomFromSeed = __webpack_require__(595);

var ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';
var alphabet;
var previousSeed;

var shuffled;

function reset() {
    shuffled = false;
}

function setCharacters(_alphabet_) {
    if (!_alphabet_) {
        if (alphabet !== ORIGINAL) {
            alphabet = ORIGINAL;
            reset();
        }
        return;
    }

    if (_alphabet_ === alphabet) {
        return;
    }

    if (_alphabet_.length !== ORIGINAL.length) {
        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);
    }

    var unique = _alphabet_.split('').filter(function(item, ind, arr){
       return ind !== arr.lastIndexOf(item);
    });

    if (unique.length) {
        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));
    }

    alphabet = _alphabet_;
    reset();
}

function characters(_alphabet_) {
    setCharacters(_alphabet_);
    return alphabet;
}

function setSeed(seed) {
    randomFromSeed.seed(seed);
    if (previousSeed !== seed) {
        reset();
        previousSeed = seed;
    }
}

function shuffle() {
    if (!alphabet) {
        setCharacters(ORIGINAL);
    }

    var sourceArray = alphabet.split('');
    var targetArray = [];
    var r = randomFromSeed.nextValue();
    var characterIndex;

    while (sourceArray.length > 0) {
        r = randomFromSeed.nextValue();
        characterIndex = Math.floor(r * sourceArray.length);
        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);
    }
    return targetArray.join('');
}

function getShuffled() {
    if (shuffled) {
        return shuffled;
    }
    shuffled = shuffle();
    return shuffled;
}

/**
 * lookup shuffled letter
 * @param index
 * @returns {string}
 */
function lookup(index) {
    var alphabetShuffled = getShuffled();
    return alphabetShuffled[index];
}

module.exports = {
    characters: characters,
    seed: setSeed,
    lookup: lookup,
    shuffled: getShuffled
};


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = function() {};

if (process.env.NODE_ENV !== 'production') {
  warning = function(condition, format, args) {
    var len = arguments.length;
    args = new Array(len > 2 ? len - 2 : 0);
    for (var key = 2; key < len; key++) {
      args[key - 2] = arguments[key];
    }
    if (format === undefined) {
      throw new Error(
        '`warning(condition, format, ...args)` requires a warning ' +
        'message argument'
      );
    }

    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
      throw new Error(
        'The warning format should be able to uniquely identify this ' +
        'warning. Please, use a more descriptive format than: ' + format
      );
    }

    if (!condition) {
      var argIndex = 0;
      var message = 'Warning: ' +
        format.replace(/%s/g, function() {
          return args[argIndex++];
        });
      if (typeof console !== 'undefined') {
        console.error(message);
      }
      try {
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
      } catch(x) {}
    }
  };
}

module.exports = warning;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 89 */,
/* 90 */,
/* 91 */,
/* 92 */,
/* 93 */,
/* 94 */,
/* 95 */,
/* 96 */,
/* 97 */,
/* 98 */,
/* 99 */,
/* 100 */,
/* 101 */,
/* 102 */,
/* 103 */,
/* 104 */,
/* 105 */,
/* 106 */,
/* 107 */,
/* 108 */,
/* 109 */,
/* 110 */,
/* 111 */,
/* 112 */,
/* 113 */,
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Color_1 = __webpack_require__(29);
var Piece_1 = __webpack_require__(50);
var Square_1 = __webpack_require__(51);
/**
 * Move data.
 */
var SimpleMove = (function () {
    function SimpleMove() {
        this.PieceNum = 0;
        this.MovingPiece = Piece_1.Piece.NoPiece;
        this.From = Square_1.Square.NullSquare;
        this.To = Square_1.Square.NullSquare;
        this.Color = Color_1.Color.NoColor;
        this.CapturedNum = 0;
        this.CapturedPiece = Piece_1.Piece.NoPiece;
        this.Promote = Piece_1.Piece.NoPiece;
        this.CapturedSquare = Square_1.Square.NullSquare; // only different to "to" field if this capture is an en passant capture.
        this.CastleFlags = 0;
        this.EpSquare = Square_1.Square.NullSquare;
        this.OldHalfMoveClock = 0;
        this.PlyCount = 0;
        this.San = "";
        this.Comments = "";
        this.Nag = "";
        this.Permanent = true;
    }
    SimpleMove.prototype.toString = function () {
        return this.San;
    };
    return SimpleMove;
}());
exports.SimpleMove = SimpleMove;


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.inArray = function (needle, haystack, strict) {
    var found = false;
    var key;
    var strct = !!strict;
    for (key in haystack) {
        if ((strct && haystack[key] === needle) || (!strct && haystack[key] == needle)) {
            found = true;
            break;
        }
    }
    return found;
};


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var IntVal_1 = __webpack_require__(77);
exports.intVal = IntVal_1.intVal;
var IsValueOutOfRange_1 = __webpack_require__(447);
exports.isValueOutOfRange = IsValueOutOfRange_1.isValueOutOfRange;
var EnsureValueInRange_1 = __webpack_require__(446);
exports.ensureValueInRange = EnsureValueInRange_1.ensureValueInRange;
var Average_1 = __webpack_require__(207);
exports.average = Average_1.average;
var StdDeviation_1 = __webpack_require__(448);
exports.stdDeviation = StdDeviation_1.stdDeviation;


/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.pad = function (str, len, chr, leftJustify) {
    var padding = (str.length >= len) ? '' : Array(1 + len - str.length >>> 0).join(chr);
    return leftJustify ? str + padding : padding + str;
};


/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var react_dom_1 = __webpack_require__(32);
function isEventFromHandle(e, handles) {
    return Object.keys(handles)
        .some(function (key) { return e.target === react_dom_1.findDOMNode(handles[key]); });
}
exports.isEventFromHandle = isEventFromHandle;
function isNotTouchEvent(e) {
    return e.touches.length > 1 ||
        (e.type.toLowerCase() === 'touchend' && e.touches.length > 0);
}
exports.isNotTouchEvent = isNotTouchEvent;
function getTouchPosition(vertical, e) {
    return vertical ? e.touches[0].clientY : e.touches[0].pageX;
}
exports.getTouchPosition = getTouchPosition;
function pauseEvent(e) {
    e.stopPropagation();
    e.preventDefault();
}
exports.pauseEvent = pauseEvent;
function getMousePosition(vertical, e) {
    return vertical ? e.clientY : e.pageX;
}
exports.getMousePosition = getMousePosition;
function getHandleCenterPosition(vertical, handle) {
    var coords = handle.getBoundingClientRect();
    return vertical ?
        coords.top + (coords.height * 0.5) :
        coords.left + (coords.width * 0.5);
}
exports.getHandleCenterPosition = getHandleCenterPosition;


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
var classNames = __webpack_require__(9);
var Icon = (function (_super) {
    __extends(Icon, _super);
    function Icon(props) {
        return _super.call(this, props) || this;
    }
    Icon.prototype.render = function () {
        var _a = this.props, className = _a.className, glyph = _a.glyph, elementProps = __rest(_a, ["className", "glyph"]);
        var classes = classNames(className, glyph);
        return (React.createElement("i", __assign({}, elementProps, { className: classes })));
    };
    return Icon;
}(React.Component));
exports.Icon = Icon;


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



// React 15.5 references this module, and assumes PropTypes are still callable in production.
// Therefore we re-export development-only version with all the PropTypes checks here.
// However if one is migrating to the `prop-types` npm library, they will go through the
// `index.js` entry point, and it will branch depending on the environment.
var factory = __webpack_require__(215);
module.exports = function(isValidElement) {
  // It is still allowed in 15.5.
  var throwOnDirectAccess = false;
  return factory(isValidElement, throwOnDirectAccess);
};


/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),
/* 122 */,
/* 123 */,
/* 124 */,
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMLazyTree = __webpack_require__(40);
var Danger = __webpack_require__(511);
var ReactDOMComponentTree = __webpack_require__(11);
var ReactInstrumentation = __webpack_require__(16);

var createMicrosoftUnsafeLocalFunction = __webpack_require__(133);
var setInnerHTML = __webpack_require__(85);
var setTextContent = __webpack_require__(243);

function getNodeAfter(parentNode, node) {
  // Special case for text components, which return [open, close] comments
  // from getHostNode.
  if (Array.isArray(node)) {
    node = node[1];
  }
  return node ? node.nextSibling : parentNode.firstChild;
}

/**
 * Inserts `childNode` as a child of `parentNode` at the `index`.
 *
 * @param {DOMElement} parentNode Parent node in which to insert.
 * @param {DOMElement} childNode Child node to insert.
 * @param {number} index Index at which to insert the child.
 * @internal
 */
var insertChildAt = createMicrosoftUnsafeLocalFunction(function (parentNode, childNode, referenceNode) {
  // We rely exclusively on `insertBefore(node, null)` instead of also using
  // `appendChild(node)`. (Using `undefined` is not allowed by all browsers so
  // we are careful to use `null`.)
  parentNode.insertBefore(childNode, referenceNode);
});

function insertLazyTreeChildAt(parentNode, childTree, referenceNode) {
  DOMLazyTree.insertTreeBefore(parentNode, childTree, referenceNode);
}

function moveChild(parentNode, childNode, referenceNode) {
  if (Array.isArray(childNode)) {
    moveDelimitedText(parentNode, childNode[0], childNode[1], referenceNode);
  } else {
    insertChildAt(parentNode, childNode, referenceNode);
  }
}

function removeChild(parentNode, childNode) {
  if (Array.isArray(childNode)) {
    var closingComment = childNode[1];
    childNode = childNode[0];
    removeDelimitedText(parentNode, childNode, closingComment);
    parentNode.removeChild(closingComment);
  }
  parentNode.removeChild(childNode);
}

function moveDelimitedText(parentNode, openingComment, closingComment, referenceNode) {
  var node = openingComment;
  while (true) {
    var nextNode = node.nextSibling;
    insertChildAt(parentNode, node, referenceNode);
    if (node === closingComment) {
      break;
    }
    node = nextNode;
  }
}

function removeDelimitedText(parentNode, startNode, closingComment) {
  while (true) {
    var node = startNode.nextSibling;
    if (node === closingComment) {
      // The closing comment is removed by ReactMultiChild.
      break;
    } else {
      parentNode.removeChild(node);
    }
  }
}

function replaceDelimitedText(openingComment, closingComment, stringText) {
  var parentNode = openingComment.parentNode;
  var nodeAfterComment = openingComment.nextSibling;
  if (nodeAfterComment === closingComment) {
    // There are no text nodes between the opening and closing comments; insert
    // a new one if stringText isn't empty.
    if (stringText) {
      insertChildAt(parentNode, document.createTextNode(stringText), nodeAfterComment);
    }
  } else {
    if (stringText) {
      // Set the text content of the first node after the opening comment, and
      // remove all following nodes up until the closing comment.
      setTextContent(nodeAfterComment, stringText);
      removeDelimitedText(parentNode, nodeAfterComment, closingComment);
    } else {
      removeDelimitedText(parentNode, openingComment, closingComment);
    }
  }

  if (process.env.NODE_ENV !== 'production') {
    ReactInstrumentation.debugTool.onHostOperation({
      instanceID: ReactDOMComponentTree.getInstanceFromNode(openingComment)._debugID,
      type: 'replace text',
      payload: stringText
    });
  }
}

var dangerouslyReplaceNodeWithMarkup = Danger.dangerouslyReplaceNodeWithMarkup;
if (process.env.NODE_ENV !== 'production') {
  dangerouslyReplaceNodeWithMarkup = function (oldChild, markup, prevInstance) {
    Danger.dangerouslyReplaceNodeWithMarkup(oldChild, markup);
    if (prevInstance._debugID !== 0) {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: prevInstance._debugID,
        type: 'replace with',
        payload: markup.toString()
      });
    } else {
      var nextInstance = ReactDOMComponentTree.getInstanceFromNode(markup.node);
      if (nextInstance._debugID !== 0) {
        ReactInstrumentation.debugTool.onHostOperation({
          instanceID: nextInstance._debugID,
          type: 'mount',
          payload: markup.toString()
        });
      }
    }
  };
}

/**
 * Operations for updating with DOM children.
 */
var DOMChildrenOperations = {
  dangerouslyReplaceNodeWithMarkup: dangerouslyReplaceNodeWithMarkup,

  replaceDelimitedText: replaceDelimitedText,

  /**
   * Updates a component's children by processing a series of updates. The
   * update configurations are each expected to have a `parentNode` property.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
  processUpdates: function (parentNode, updates) {
    if (process.env.NODE_ENV !== 'production') {
      var parentNodeDebugID = ReactDOMComponentTree.getInstanceFromNode(parentNode)._debugID;
    }

    for (var k = 0; k < updates.length; k++) {
      var update = updates[k];
      switch (update.type) {
        case 'INSERT_MARKUP':
          insertLazyTreeChildAt(parentNode, update.content, getNodeAfter(parentNode, update.afterNode));
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'insert child',
              payload: {
                toIndex: update.toIndex,
                content: update.content.toString()
              }
            });
          }
          break;
        case 'MOVE_EXISTING':
          moveChild(parentNode, update.fromNode, getNodeAfter(parentNode, update.afterNode));
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'move child',
              payload: { fromIndex: update.fromIndex, toIndex: update.toIndex }
            });
          }
          break;
        case 'SET_MARKUP':
          setInnerHTML(parentNode, update.content);
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'replace children',
              payload: update.content.toString()
            });
          }
          break;
        case 'TEXT_CONTENT':
          setTextContent(parentNode, update.content);
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'replace text',
              payload: update.content.toString()
            });
          }
          break;
        case 'REMOVE_NODE':
          removeChild(parentNode, update.fromNode);
          if (process.env.NODE_ENV !== 'production') {
            ReactInstrumentation.debugTool.onHostOperation({
              instanceID: parentNodeDebugID,
              type: 'remove child',
              payload: { fromIndex: update.fromIndex }
            });
          }
          break;
      }
    }
  }
};

module.exports = DOMChildrenOperations;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMNamespaces = {
  html: 'http://www.w3.org/1999/xhtml',
  mathml: 'http://www.w3.org/1998/Math/MathML',
  svg: 'http://www.w3.org/2000/svg'
};

module.exports = DOMNamespaces;

/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(7);

var ReactErrorUtils = __webpack_require__(131);

var invariant = __webpack_require__(1);
var warning = __webpack_require__(2);

/**
 * Injected dependencies:
 */

/**
 * - `ComponentTree`: [required] Module that can convert between React instances
 *   and actual node references.
 */
var ComponentTree;
var TreeTraversal;
var injection = {
  injectComponentTree: function (Injected) {
    ComponentTree = Injected;
    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.getNodeFromInstance && Injected.getInstanceFromNode, 'EventPluginUtils.injection.injectComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
    }
  },
  injectTreeTraversal: function (Injected) {
    TreeTraversal = Injected;
    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(Injected && Injected.isAncestor && Injected.getLowestCommonAncestor, 'EventPluginUtils.injection.injectTreeTraversal(...): Injected ' + 'module is missing isAncestor or getLowestCommonAncestor.') : void 0;
    }
  }
};

function isEndish(topLevelType) {
  return topLevelType === 'topMouseUp' || topLevelType === 'topTouchEnd' || topLevelType === 'topTouchCancel';
}

function isMoveish(topLevelType) {
  return topLevelType === 'topMouseMove' || topLevelType === 'topTouchMove';
}
function isStartish(topLevelType) {
  return topLevelType === 'topMouseDown' || topLevelType === 'topTouchStart';
}

var validateEventDispatches;
if (process.env.NODE_ENV !== 'production') {
  validateEventDispatches = function (event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchInstances = event._dispatchInstances;

    var listenersIsArr = Array.isArray(dispatchListeners);
    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

    var instancesIsArr = Array.isArray(dispatchInstances);
    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

    process.env.NODE_ENV !== 'production' ? warning(instancesIsArr === listenersIsArr && instancesLen === listenersLen, 'EventPluginUtils: Invalid `event`.') : void 0;
  };
}

/**
 * Dispatch the event to the listener.
 * @param {SyntheticEvent} event SyntheticEvent to handle
 * @param {boolean} simulated If the event is simulated (changes exn behavior)
 * @param {function} listener Application-level callback
 * @param {*} inst Internal component instance
 */
function executeDispatch(event, simulated, listener, inst) {
  var type = event.type || 'unknown-event';
  event.currentTarget = EventPluginUtils.getNodeFromInstance(inst);
  if (simulated) {
    ReactErrorUtils.invokeGuardedCallbackWithCatch(type, listener, event);
  } else {
    ReactErrorUtils.invokeGuardedCallback(type, listener, event);
  }
  event.currentTarget = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches.
 */
function executeDispatchesInOrder(event, simulated) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if (process.env.NODE_ENV !== 'production') {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      executeDispatch(event, simulated, dispatchListeners[i], dispatchInstances[i]);
    }
  } else if (dispatchListeners) {
    executeDispatch(event, simulated, dispatchListeners, dispatchInstances);
  }
  event._dispatchListeners = null;
  event._dispatchInstances = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches, but stops
 * at the first dispatch execution returning true, and returns that id.
 *
 * @return {?string} id of the first dispatch execution who's listener returns
 * true, or null if no listener returned true.
 */
function executeDispatchesInOrderStopAtTrueImpl(event) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  if (process.env.NODE_ENV !== 'production') {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      if (dispatchListeners[i](event, dispatchInstances[i])) {
        return dispatchInstances[i];
      }
    }
  } else if (dispatchListeners) {
    if (dispatchListeners(event, dispatchInstances)) {
      return dispatchInstances;
    }
  }
  return null;
}

/**
 * @see executeDispatchesInOrderStopAtTrueImpl
 */
function executeDispatchesInOrderStopAtTrue(event) {
  var ret = executeDispatchesInOrderStopAtTrueImpl(event);
  event._dispatchInstances = null;
  event._dispatchListeners = null;
  return ret;
}

/**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return {*} The return value of executing the single dispatch.
 */
function executeDirectDispatch(event) {
  if (process.env.NODE_ENV !== 'production') {
    validateEventDispatches(event);
  }
  var dispatchListener = event._dispatchListeners;
  var dispatchInstance = event._dispatchInstances;
  !!Array.isArray(dispatchListener) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'executeDirectDispatch(...): Invalid `event`.') : _prodInvariant('103') : void 0;
  event.currentTarget = dispatchListener ? EventPluginUtils.getNodeFromInstance(dispatchInstance) : null;
  var res = dispatchListener ? dispatchListener(event) : null;
  event.currentTarget = null;
  event._dispatchListeners = null;
  event._dispatchInstances = null;
  return res;
}

/**
 * @param {SyntheticEvent} event
 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
 */
function hasDispatches(event) {
  return !!event._dispatchListeners;
}

/**
 * General utilities that are useful in creating custom Event Plugins.
 */
var EventPluginUtils = {
  isEndish: isEndish,
  isMoveish: isMoveish,
  isStartish: isStartish,

  executeDirectDispatch: executeDirectDispatch,
  executeDispatchesInOrder: executeDispatchesInOrder,
  executeDispatchesInOrderStopAtTrue: executeDispatchesInOrderStopAtTrue,
  hasDispatches: hasDispatches,

  getInstanceFromNode: function (node) {
    return ComponentTree.getInstanceFromNode(node);
  },
  getNodeFromInstance: function (node) {
    return ComponentTree.getNodeFromInstance(node);
  },
  isAncestor: function (a, b) {
    return TreeTraversal.isAncestor(a, b);
  },
  getLowestCommonAncestor: function (a, b) {
    return TreeTraversal.getLowestCommonAncestor(a, b);
  },
  getParentInstance: function (inst) {
    return TreeTraversal.getParentInstance(inst);
  },
  traverseTwoPhase: function (target, fn, arg) {
    return TreeTraversal.traverseTwoPhase(target, fn, arg);
  },
  traverseEnterLeave: function (from, to, fn, argFrom, argTo) {
    return TreeTraversal.traverseEnterLeave(from, to, fn, argFrom, argTo);
  },

  injection: injection
};

module.exports = EventPluginUtils;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

/**
 * Unescape and unwrap key for human-readable display
 *
 * @param {string} key to unescape.
 * @return {string} the unescaped key.
 */
function unescape(key) {
  var unescapeRegex = /(=0|=2)/g;
  var unescaperLookup = {
    '=0': '=',
    '=2': ':'
  };
  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

  return ('' + keySubstring).replace(unescapeRegex, function (match) {
    return unescaperLookup[match];
  });
}

var KeyEscapeUtils = {
  escape: escape,
  unescape: unescape
};

module.exports = KeyEscapeUtils;

/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(7);

var ReactPropTypesSecret = __webpack_require__(234);
var propTypesFactory = __webpack_require__(120);

var React = __webpack_require__(17);
var PropTypes = propTypesFactory(React.isValidElement);

var invariant = __webpack_require__(1);
var warning = __webpack_require__(2);

var hasReadOnlyValue = {
  button: true,
  checkbox: true,
  image: true,
  hidden: true,
  radio: true,
  reset: true,
  submit: true
};

function _assertSingleLink(inputProps) {
  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;
}
function _assertValueLink(inputProps) {
  _assertSingleLink(inputProps);
  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\'t want to use valueLink.') : _prodInvariant('88') : void 0;
}

function _assertCheckedLink(inputProps) {
  _assertSingleLink(inputProps);
  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\'t want to use checkedLink') : _prodInvariant('89') : void 0;
}

var propTypes = {
  value: function (props, propName, componentName) {
    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {
      return null;
    }
    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
  },
  checked: function (props, propName, componentName) {
    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {
      return null;
    }
    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
  },
  onChange: PropTypes.func
};

var loggedTypeFailures = {};
function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Provide a linked `value` attribute for controlled forms. You should not use
 * this outside of the ReactDOM controlled form components.
 */
var LinkedValueUtils = {
  checkPropTypes: function (tagName, props, owner) {
    for (var propName in propTypes) {
      if (propTypes.hasOwnProperty(propName)) {
        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);
      }
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var addendum = getDeclarationErrorAddendum(owner);
        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;
      }
    }
  },

  /**
   * @param {object} inputProps Props for form component
   * @return {*} current value of the input either from value prop or link.
   */
  getValue: function (inputProps) {
    if (inputProps.valueLink) {
      _assertValueLink(inputProps);
      return inputProps.valueLink.value;
    }
    return inputProps.value;
  },

  /**
   * @param {object} inputProps Props for form component
   * @return {*} current checked status of the input either from checked prop
   *             or link.
   */
  getChecked: function (inputProps) {
    if (inputProps.checkedLink) {
      _assertCheckedLink(inputProps);
      return inputProps.checkedLink.value;
    }
    return inputProps.checked;
  },

  /**
   * @param {object} inputProps Props for form component
   * @param {SyntheticEvent} event change event to handle
   */
  executeOnChange: function (inputProps, event) {
    if (inputProps.valueLink) {
      _assertValueLink(inputProps);
      return inputProps.valueLink.requestChange(event.target.value);
    } else if (inputProps.checkedLink) {
      _assertCheckedLink(inputProps);
      return inputProps.checkedLink.requestChange(event.target.checked);
    } else if (inputProps.onChange) {
      return inputProps.onChange.call(undefined, event);
    }
  }
};

module.exports = LinkedValueUtils;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(7);

var invariant = __webpack_require__(1);

var injected = false;

var ReactComponentEnvironment = {
  /**
   * Optionally injectable hook for swapping out mount images in the middle of
   * the tree.
   */
  replaceNodeWithMarkup: null,

  /**
   * Optionally injectable hook for processing a queue of child updates. Will
   * later move into MultiChildComponents.
   */
  processChildrenUpdates: null,

  injection: {
    injectEnvironment: function (environment) {
      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;
      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;
      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;
      injected = true;
    }
  }
};

module.exports = ReactComponentEnvironment;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var caughtError = null;

/**
 * Call a function while guarding against errors that happens within it.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} a First argument
 * @param {*} b Second argument
 */
function invokeGuardedCallback(name, func, a) {
  try {
    func(a);
  } catch (x) {
    if (caughtError === null) {
      caughtError = x;
    }
  }
}

var ReactErrorUtils = {
  invokeGuardedCallback: invokeGuardedCallback,

  /**
   * Invoked by ReactTestUtils.Simulate so that any errors thrown by the event
   * handler are sure to be rethrown by rethrowCaughtError.
   */
  invokeGuardedCallbackWithCatch: invokeGuardedCallback,

  /**
   * During execution of guarded functions we will capture the first error which
   * we will rethrow to be handled by the top level error handler.
   */
  rethrowCaughtError: function () {
    if (caughtError) {
      var error = caughtError;
      caughtError = null;
      throw error;
    }
  }
};

if (process.env.NODE_ENV !== 'production') {
  /**
   * To help development we can get better devtools integration by simulating a
   * real browser event.
   */
  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');
    ReactErrorUtils.invokeGuardedCallback = function (name, func, a) {
      var boundFunc = func.bind(null, a);
      var evtType = 'react-' + name;
      fakeNode.addEventListener(evtType, boundFunc, false);
      var evt = document.createEvent('Event');
      evt.initEvent(evtType, false, false);
      fakeNode.dispatchEvent(evt);
      fakeNode.removeEventListener(evtType, boundFunc, false);
    };
  }
}

module.exports = ReactErrorUtils;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(7);

var ReactCurrentOwner = __webpack_require__(13);
var ReactInstanceMap = __webpack_require__(55);
var ReactInstrumentation = __webpack_require__(16);
var ReactUpdates = __webpack_require__(19);

var invariant = __webpack_require__(1);
var warning = __webpack_require__(2);

function enqueueUpdate(internalInstance) {
  ReactUpdates.enqueueUpdate(internalInstance);
}

function formatUnexpectedArgument(arg) {
  var type = typeof arg;
  if (type !== 'object') {
    return type;
  }
  var displayName = arg.constructor && arg.constructor.name || type;
  var keys = Object.keys(arg);
  if (keys.length > 0 && keys.length < 20) {
    return displayName + ' (keys: ' + keys.join(', ') + ')';
  }
  return displayName;
}

function getInternalInstanceReadyForUpdate(publicInstance, callerName) {
  var internalInstance = ReactInstanceMap.get(publicInstance);
  if (!internalInstance) {
    if (process.env.NODE_ENV !== 'production') {
      var ctor = publicInstance.constructor;
      // Only warn when we have a callerName. Otherwise we should be silent.
      // We're probably calling from enqueueCallback. We don't want to warn
      // there because we already warned for the corresponding lifecycle method.
      process.env.NODE_ENV !== 'production' ? warning(!callerName, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, ctor && (ctor.displayName || ctor.name) || 'ReactClass') : void 0;
    }
    return null;
  }

  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '%s(...): Cannot update during an existing state transition (such as ' + "within `render` or another component's constructor). Render methods " + 'should be a pure function of props and state; constructor ' + 'side-effects are an anti-pattern, but can be moved to ' + '`componentWillMount`.', callerName) : void 0;
  }

  return internalInstance;
}

/**
 * ReactUpdateQueue allows for state updates to be scheduled into a later
 * reconciliation step.
 */
var ReactUpdateQueue = {
  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    if (process.env.NODE_ENV !== 'production') {
      var owner = ReactCurrentOwner.current;
      if (owner !== null) {
        process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
        owner._warnedAboutRefsInRender = true;
      }
    }
    var internalInstance = ReactInstanceMap.get(publicInstance);
    if (internalInstance) {
      // During componentWillMount and render this will still be null but after
      // that will always render to something. At least for now. So we can use
      // this hack.
      return !!internalInstance._renderedComponent;
    } else {
      return false;
    }
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @param {string} callerName Name of the calling function in the public API.
   * @internal
   */
  enqueueCallback: function (publicInstance, callback, callerName) {
    ReactUpdateQueue.validateCallback(callback, callerName);
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance);

    // Previously we would throw an error if we didn't have an internal
    // instance. Since we want to make it a no-op instead, we mirror the same
    // behavior we have in other enqueue* methods.
    // We also need to ignore callbacks in componentWillMount. See
    // enqueueUpdates.
    if (!internalInstance) {
      return null;
    }

    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    // TODO: The callback here is ignored when setState is called from
    // componentWillMount. Either fix it or disallow doing so completely in
    // favor of getInitialState. Alternatively, we can disallow
    // componentWillMount during server-side rendering.
    enqueueUpdate(internalInstance);
  },

  enqueueCallbackInternal: function (internalInstance, callback) {
    if (internalInstance._pendingCallbacks) {
      internalInstance._pendingCallbacks.push(callback);
    } else {
      internalInstance._pendingCallbacks = [callback];
    }
    enqueueUpdate(internalInstance);
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'forceUpdate');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingForceUpdate = true;

    enqueueUpdate(internalInstance);
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState, callback) {
    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'replaceState');

    if (!internalInstance) {
      return;
    }

    internalInstance._pendingStateQueue = [completeState];
    internalInstance._pendingReplaceState = true;

    // Future-proof 15.5
    if (callback !== undefined && callback !== null) {
      ReactUpdateQueue.validateCallback(callback, 'replaceState');
      if (internalInstance._pendingCallbacks) {
        internalInstance._pendingCallbacks.push(callback);
      } else {
        internalInstance._pendingCallbacks = [callback];
      }
    }

    enqueueUpdate(internalInstance);
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState) {
    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onSetState();
      process.env.NODE_ENV !== 'production' ? warning(partialState != null, 'setState(...): You passed an undefined or null state object; ' + 'instead, use forceUpdate().') : void 0;
    }

    var internalInstance = getInternalInstanceReadyForUpdate(publicInstance, 'setState');

    if (!internalInstance) {
      return;
    }

    var queue = internalInstance._pendingStateQueue || (internalInstance._pendingStateQueue = []);
    queue.push(partialState);

    enqueueUpdate(internalInstance);
  },

  enqueueElementInternal: function (internalInstance, nextElement, nextContext) {
    internalInstance._pendingElement = nextElement;
    // TODO: introduce _pendingContext instead of setting it directly.
    internalInstance._context = nextContext;
    enqueueUpdate(internalInstance);
  },

  validateCallback: function (callback, callerName) {
    !(!callback || typeof callback === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.', callerName, formatUnexpectedArgument(callback)) : _prodInvariant('122', callerName, formatUnexpectedArgument(callback)) : void 0;
  }
};

module.exports = ReactUpdateQueue;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/* globals MSApp */



/**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */

var createMicrosoftUnsafeLocalFunction = function (func) {
  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
    return function (arg0, arg1, arg2, arg3) {
      MSApp.execUnsafeLocalFunction(function () {
        return func(arg0, arg1, arg2, arg3);
      });
    };
  } else {
    return func;
  }
};

module.exports = createMicrosoftUnsafeLocalFunction;

/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */

function getEventCharCode(nativeEvent) {
  var charCode;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode;

    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  }

  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.
  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

module.exports = getEventCharCode;

/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */

var modifierKeyToProp = {
  Alt: 'altKey',
  Control: 'ctrlKey',
  Meta: 'metaKey',
  Shift: 'shiftKey'
};

// IE8 does not implement getModifierState so we simply map it to the only
// modifier keys exposed by the event itself, does not support Lock-keys.
// Currently, all major browsers except Chrome seems to support Lock-keys.
function modifierStateGetter(keyArg) {
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;
  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }
  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}

module.exports = getEventModifierState;

/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */

function getEventTarget(nativeEvent) {
  var target = nativeEvent.target || nativeEvent.srcElement || window;

  // Normalize SVG <use> element events #4963
  if (target.correspondingUseElement) {
    target = target.correspondingUseElement;
  }

  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html
  return target.nodeType === 3 ? target.parentNode : target;
}

module.exports = getEventTarget;

/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ExecutionEnvironment = __webpack_require__(5);

var useHasFeature;
if (ExecutionEnvironment.canUseDOM) {
  useHasFeature = document.implementation && document.implementation.hasFeature &&
  // always returns true in newer browsers as per the standard.
  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature
  document.implementation.hasFeature('', '') !== true;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @param {?boolean} capture Check if the capture phase is supported.
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix, capture) {
  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in document;

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {
    // This is the only way to test support for the `wheel` event in IE9+.
    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');
  }

  return isSupported;
}

module.exports = isEventSupported;

/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * Given a `prevElement` and `nextElement`, determines if the existing
 * instance should be updated as opposed to being destroyed or replaced by a new
 * instance. Both arguments are elements. This ensures that this logic can
 * operate on stateless trees without any backing instance.
 *
 * @param {?object} prevElement
 * @param {?object} nextElement
 * @return {boolean} True if the existing instance should be updated.
 * @protected
 */

function shouldUpdateReactComponent(prevElement, nextElement) {
  var prevEmpty = prevElement === null || prevElement === false;
  var nextEmpty = nextElement === null || nextElement === false;
  if (prevEmpty || nextEmpty) {
    return prevEmpty === nextEmpty;
  }

  var prevType = typeof prevElement;
  var nextType = typeof nextElement;
  if (prevType === 'string' || prevType === 'number') {
    return nextType === 'string' || nextType === 'number';
  } else {
    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;
  }
}

module.exports = shouldUpdateReactComponent;

/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(4);

var emptyFunction = __webpack_require__(12);
var warning = __webpack_require__(2);

var validateDOMNesting = emptyFunction;

if (process.env.NODE_ENV !== 'production') {
  // This validation code was written based on the HTML5 parsing spec:
  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  //
  // Note: this does not catch all invalid nesting, nor does it try to (as it's
  // not clear what practical benefit doing so provides); instead, we warn only
  // for cases where the parser will give a parse tree differing from what React
  // intended. For example, <b><div></div></b> is invalid but we don't warn
  // because it still parses correctly; we do warn for other cases like nested
  // <p> tags where the beginning of the second element implicitly closes the
  // first, causing a confusing mess.

  // https://html.spec.whatwg.org/multipage/syntax.html#special
  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
  // TODO: Distinguish by namespace here -- for <title>, including it here
  // errs on the side of fewer warnings
  'foreignObject', 'desc', 'title'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
  var buttonScopeTags = inScopeTags.concat(['button']);

  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

  var emptyAncestorInfo = {
    current: null,

    formTag: null,
    aTagInScope: null,
    buttonTagInScope: null,
    nobrTagInScope: null,
    pTagInButtonScope: null,

    listItemTagAutoclosing: null,
    dlItemTagAutoclosing: null
  };

  var updatedAncestorInfo = function (oldInfo, tag, instance) {
    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
    var info = { tag: tag, instance: instance };

    if (inScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.aTagInScope = null;
      ancestorInfo.buttonTagInScope = null;
      ancestorInfo.nobrTagInScope = null;
    }
    if (buttonScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.pTagInButtonScope = null;
    }

    // See rules for 'li', 'dd', 'dt' start tags in
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
      ancestorInfo.listItemTagAutoclosing = null;
      ancestorInfo.dlItemTagAutoclosing = null;
    }

    ancestorInfo.current = info;

    if (tag === 'form') {
      ancestorInfo.formTag = info;
    }
    if (tag === 'a') {
      ancestorInfo.aTagInScope = info;
    }
    if (tag === 'button') {
      ancestorInfo.buttonTagInScope = info;
    }
    if (tag === 'nobr') {
      ancestorInfo.nobrTagInScope = info;
    }
    if (tag === 'p') {
      ancestorInfo.pTagInButtonScope = info;
    }
    if (tag === 'li') {
      ancestorInfo.listItemTagAutoclosing = info;
    }
    if (tag === 'dd' || tag === 'dt') {
      ancestorInfo.dlItemTagAutoclosing = info;
    }

    return ancestorInfo;
  };

  /**
   * Returns whether
   */
  var isTagValidWithParent = function (tag, parentTag) {
    // First, let's check if we're in an unusual parsing mode...
    switch (parentTag) {
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
      case 'select':
        return tag === 'option' || tag === 'optgroup' || tag === '#text';
      case 'optgroup':
        return tag === 'option' || tag === '#text';
      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
      // but
      case 'option':
        return tag === '#text';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
      // No special behavior since these rules fall back to "in body" mode for
      // all except special table nodes which cause bad parsing behavior anyway.

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
      case 'tr':
        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
      case 'tbody':
      case 'thead':
      case 'tfoot':
        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
      case 'colgroup':
        return tag === 'col' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
      case 'table':
        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
      case 'head':
        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
      case 'html':
        return tag === 'head' || tag === 'body';
      case '#document':
        return tag === 'html';
    }

    // Probably in the "in body" parsing mode, so we outlaw only tag combos
    // where the parsing rules cause implicit opens or closes to be added.
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    switch (tag) {
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

      case 'rp':
      case 'rt':
        return impliedEndTags.indexOf(parentTag) === -1;

      case 'body':
      case 'caption':
      case 'col':
      case 'colgroup':
      case 'frame':
      case 'head':
      case 'html':
      case 'tbody':
      case 'td':
      case 'tfoot':
      case 'th':
      case 'thead':
      case 'tr':
        // These tags are only valid with a few parents that have special child
        // parsing rules -- if we're down here, then none of those matched and
        // so we allow it only if we don't know what the parent is, as all other
        // cases are invalid.
        return parentTag == null;
    }

    return true;
  };

  /**
   * Returns whether
   */
  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
    switch (tag) {
      case 'address':
      case 'article':
      case 'aside':
      case 'blockquote':
      case 'center':
      case 'details':
      case 'dialog':
      case 'dir':
      case 'div':
      case 'dl':
      case 'fieldset':
      case 'figcaption':
      case 'figure':
      case 'footer':
      case 'header':
      case 'hgroup':
      case 'main':
      case 'menu':
      case 'nav':
      case 'ol':
      case 'p':
      case 'section':
      case 'summary':
      case 'ul':
      case 'pre':
      case 'listing':
      case 'table':
      case 'hr':
      case 'xmp':
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return ancestorInfo.pTagInButtonScope;

      case 'form':
        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

      case 'li':
        return ancestorInfo.listItemTagAutoclosing;

      case 'dd':
      case 'dt':
        return ancestorInfo.dlItemTagAutoclosing;

      case 'button':
        return ancestorInfo.buttonTagInScope;

      case 'a':
        // Spec says something about storing a list of markers, but it sounds
        // equivalent to this check.
        return ancestorInfo.aTagInScope;

      case 'nobr':
        return ancestorInfo.nobrTagInScope;
    }

    return null;
  };

  /**
   * Given a ReactCompositeComponent instance, return a list of its recursive
   * owners, starting at the root and ending with the instance itself.
   */
  var findOwnerStack = function (instance) {
    if (!instance) {
      return [];
    }

    var stack = [];
    do {
      stack.push(instance);
    } while (instance = instance._currentElement._owner);
    stack.reverse();
    return stack;
  };

  var didWarn = {};

  validateDOMNesting = function (childTag, childText, childInstance, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;

    if (childText != null) {
      process.env.NODE_ENV !== 'production' ? warning(childTag == null, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
      childTag = '#text';
    }

    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
    var problematic = invalidParent || invalidAncestor;

    if (problematic) {
      var ancestorTag = problematic.tag;
      var ancestorInstance = problematic.instance;

      var childOwner = childInstance && childInstance._currentElement._owner;
      var ancestorOwner = ancestorInstance && ancestorInstance._currentElement._owner;

      var childOwners = findOwnerStack(childOwner);
      var ancestorOwners = findOwnerStack(ancestorOwner);

      var minStackLen = Math.min(childOwners.length, ancestorOwners.length);
      var i;

      var deepestCommon = -1;
      for (i = 0; i < minStackLen; i++) {
        if (childOwners[i] === ancestorOwners[i]) {
          deepestCommon = i;
        } else {
          break;
        }
      }

      var UNKNOWN = '(unknown)';
      var childOwnerNames = childOwners.slice(deepestCommon + 1).map(function (inst) {
        return inst.getName() || UNKNOWN;
      });
      var ancestorOwnerNames = ancestorOwners.slice(deepestCommon + 1).map(function (inst) {
        return inst.getName() || UNKNOWN;
      });
      var ownerInfo = [].concat(
      // If the parent and child instances have a common owner ancestor, start
      // with that -- otherwise we just start with the parent's owners.
      deepestCommon !== -1 ? childOwners[deepestCommon].getName() || UNKNOWN : [], ancestorOwnerNames, ancestorTag,
      // If we're warning about an invalid (non-parent) ancestry, add '...'
      invalidAncestor ? ['...'] : [], childOwnerNames, childTag).join(' > ');

      var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + ownerInfo;
      if (didWarn[warnKey]) {
        return;
      }
      didWarn[warnKey] = true;

      var tagDisplayName = childTag;
      var whitespaceInfo = '';
      if (childTag === '#text') {
        if (/\S/.test(childText)) {
          tagDisplayName = 'Text nodes';
        } else {
          tagDisplayName = 'Whitespace text nodes';
          whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
        }
      } else {
        tagDisplayName = '<' + childTag + '>';
      }

      if (invalidParent) {
        var info = '';
        if (ancestorTag === 'table' && childTag === 'tr') {
          info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
        }
        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s ' + 'See %s.%s', tagDisplayName, ancestorTag, whitespaceInfo, ownerInfo, info) : void 0;
      } else {
        process.env.NODE_ENV !== 'production' ? warning(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>. See %s.', tagDisplayName, ancestorTag, ownerInfo) : void 0;
      }
    }
  };

  validateDOMNesting.updatedAncestorInfo = updatedAncestorInfo;

  // For testing
  validateDOMNesting.isTagValidInContext = function (tag, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;
    return isTagValidWithParent(tag, parentTag) && !findInvalidAncestorForTag(tag, ancestorInfo);
  };
}

module.exports = validateDOMNesting;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var lowPriorityWarning = function () {};

if (process.env.NODE_ENV !== 'production') {
  var printWarning = function (format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.warn(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarning = function (condition, format) {
    if (format === undefined) {
      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

module.exports = lowPriorityWarning;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 141 */,
/* 142 */,
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
var onix_ui_1 = __webpack_require__(52);
var PieceSelector = (function (_super) {
    __extends(PieceSelector, _super);
    /**
     * constructor
     */
    function PieceSelector(props) {
        var _this = _super.call(this, props) || this;
        _this.onChange = function (e) {
            var onChangePiece = _this.props.onChangePiece;
            var piece = e.target.value;
            if (onChangePiece) {
                onChangePiece(piece);
            }
        };
        return _this;
    }
    PieceSelector.prototype.render = function () {
        var defaultPiece = this.props.defaultPiece;
        return (React.createElement(onix_ui_1.FormControl, { componentClass: "select", scale: "small", onChange: this.onChange, defaultValue: defaultPiece },
            React.createElement("option", { value: "alpha" }, "Alpha"),
            React.createElement("option", { value: "beholder" }, "Beholder"),
            React.createElement("option", { value: "cases" }, "Cases"),
            React.createElement("option", { value: "cats" }, "Cats"),
            React.createElement("option", { value: "condal" }, "Condal"),
            React.createElement("option", { value: "gk" }, "Gk"),
            React.createElement("option", { value: "leipzig" }, "Leipzig"),
            React.createElement("option", { value: "magnetic" }, "Magnetic"),
            React.createElement("option", { value: "maya" }, "Maya"),
            React.createElement("option", { value: "merida" }, "Merida"),
            React.createElement("option", { value: "modern" }, "Modern"),
            React.createElement("option", { value: "smart" }, "Smart"),
            React.createElement("option", { value: "wooden" }, "Wooden")));
    };
    PieceSelector.defaultProps = {
        defaultPiece: 'merida',
    };
    return PieceSelector;
}(React.Component));
exports.PieceSelector = PieceSelector;


/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
var onix_ui_1 = __webpack_require__(52);
var SquareSelector = (function (_super) {
    __extends(SquareSelector, _super);
    /**
     * constructor
     */
    function SquareSelector(props) {
        var _this = _super.call(this, props) || this;
        _this.onChange = function (e) {
            var onChangeSquare = _this.props.onChangeSquare;
            var square = e.target.value;
            if (onChangeSquare) {
                onChangeSquare(square);
            }
        };
        return _this;
    }
    SquareSelector.prototype.render = function () {
        var defaultSquare = this.props.defaultSquare;
        return (React.createElement(onix_ui_1.FormControl, { componentClass: "select", scale: "small", onChange: this.onChange, defaultValue: defaultSquare },
            React.createElement("option", { value: "blue-marble" }, "Blue-marble"),
            React.createElement("option", { value: "cedar" }, "Cedar"),
            React.createElement("option", { value: "color-blue" }, "Color blue"),
            React.createElement("option", { value: "color-brown" }, "Color brown"),
            React.createElement("option", { value: "color-gray" }, "Color gray"),
            React.createElement("option", { value: "color-green" }, "Color green"),
            React.createElement("option", { value: "elm" }, "Elm"),
            React.createElement("option", { value: "granite" }, "Granite"),
            React.createElement("option", { value: "green-marble" }, "Green-marble"),
            React.createElement("option", { value: "red-marble" }, "Red-marble"),
            React.createElement("option", { value: "red-wood" }, "Red-wood"),
            React.createElement("option", { value: "rust-metal" }, "Rust-metal"),
            React.createElement("option", { value: "tan-marble" }, "Tan-marble"),
            React.createElement("option", { value: "walnut" }, "Walnut")));
    };
    SquareSelector.defaultProps = {
        defaultValue: 'color-blue',
    };
    return SquareSelector;
}(React.Component));
exports.SquareSelector = SquareSelector;


/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
var onix_core_1 = __webpack_require__(21);
var onix_chess_1 = __webpack_require__(38);
var onix_ui_1 = __webpack_require__(52);
var Intl_1 = __webpack_require__(254);
var StartPosSelector = (function (_super) {
    __extends(StartPosSelector, _super);
    /**
     * constructor
     */
    function StartPosSelector(props) {
        var _this = _super.call(this, props) || this;
        _this.onChange = function (e) {
            var fen = e.target.value;
            if (fen === "---") {
                fen = window.prompt(onix_core_1.Intl.t("builder", "paste_fen_prompt"), "");
            }
            if (_this.props.onChange) {
                _this.props.onChange(fen);
            }
        };
        _this.getOpenings = function (openingsPos) {
            if (openingsPos && openingsPos.length) {
                var openings = [];
                for (var i = 0; i < openingsPos.length; i++) {
                    var option = openingsPos[i];
                    openings.push(React.createElement("option", { key: i, value: option.fen }, option.name));
                }
                return (React.createElement("optgroup", { label: onix_core_1.Intl.t("builder", "popular_opening") }, openings));
            }
            else {
                return null;
            }
        };
        Intl_1.registerStrings();
        return _this;
    }
    StartPosSelector.prototype.render = function () {
        var _a = this.props, fen = _a.fen, openingsPos = _a.openingsPos;
        fen = fen || "";
        return (React.createElement(onix_ui_1.FormControl, { componentClass: "select", scale: "small", onChange: this.onChange, value: fen },
            React.createElement("optgroup", { label: onix_core_1.Intl.t("chess-ctrls", "set_board") },
                React.createElement("option", { value: "" }, onix_core_1.Intl.t("chess-ctrls", "position_label")),
                React.createElement("option", { value: onix_chess_1.FenStandartStart }, onix_core_1.Intl.t("chess-ctrls", "std_fen")),
                React.createElement("option", { value: onix_chess_1.FenEmptyBoard }, onix_core_1.Intl.t("chess-ctrls", "empty_fen")),
                React.createElement("option", { value: "---" }, onix_core_1.Intl.t("chess-ctrls", "get_fen"))),
            this.getOpenings(openingsPos)));
    };
    return StartPosSelector;
}(React.Component));
exports.StartPosSelector = StartPosSelector;


/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
var onix_core_1 = __webpack_require__(21);
var onix_ui_1 = __webpack_require__(52);
var WhoMoveSelector = (function (_super) {
    __extends(WhoMoveSelector, _super);
    /**
     * constructor
     */
    function WhoMoveSelector(props) {
        var _this = _super.call(this, props) || this;
        _this.onChange = function (e) {
            var onChangeTurn = _this.props.onChangeTurn;
            var color = e.target.value;
            if (onChangeTurn) {
                onChangeTurn(color);
            }
        };
        return _this;
    }
    WhoMoveSelector.prototype.render = function () {
        var defaultTurn = this.props.defaultTurn;
        return (React.createElement(onix_ui_1.FormControl, { componentClass: "select", scale: "small", onChange: this.onChange, defaultValue: defaultTurn.toString() },
            React.createElement("option", { value: "0" }, onix_core_1.Intl.t("chess", "white_move")),
            React.createElement("option", { value: "1" }, onix_core_1.Intl.t("chess", "black_move"))));
    };
    WhoMoveSelector.defaultProps = {
        defaultTurn: 0,
    };
    return WhoMoveSelector;
}(React.Component));
exports.WhoMoveSelector = WhoMoveSelector;


/***/ }),
/* 147 */,
/* 148 */,
/* 149 */,
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */



var camelize = __webpack_require__(279);

var msPattern = /^-ms-/;

/**
 * Camelcases a hyphenated CSS property name, for example:
 *
 *   > camelizeStyleName('background-color')
 *   < "backgroundColor"
 *   > camelizeStyleName('-moz-transition')
 *   < "MozTransition"
 *   > camelizeStyleName('-ms-transition')
 *   < "msTransition"
 *
 * As Andi Smith suggests
 * (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
 * is converted to lowercase `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function camelizeStyleName(string) {
  return camelize(string.replace(msPattern, 'ms-'));
}

module.exports = camelizeStyleName;

/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */

var isTextNode = __webpack_require__(284);

/*eslint-disable no-bitwise */

/**
 * Checks if a given DOM node contains or is another DOM node.
 */
function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if ('contains' in outerNode) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

module.exports = containsNode;

/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/*eslint-disable fb-www/unsafe-html*/

var ExecutionEnvironment = __webpack_require__(5);

var createArrayFromMixed = __webpack_require__(280);
var getMarkupWrap = __webpack_require__(281);
var invariant = __webpack_require__(1);

/**
 * Dummy container used to render all markup.
 */
var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Pattern used by `getNodeName`.
 */
var nodeNamePattern = /^\s*<(\w+)/;

/**
 * Extracts the `nodeName` of the first element in a string of markup.
 *
 * @param {string} markup String of markup.
 * @return {?string} Node name of the supplied markup.
 */
function getNodeName(markup) {
  var nodeNameMatch = markup.match(nodeNamePattern);
  return nodeNameMatch && nodeNameMatch[1].toLowerCase();
}

/**
 * Creates an array containing the nodes rendered from the supplied markup. The
 * optionally supplied `handleScript` function will be invoked once for each
 * <script> element that is rendered. If no `handleScript` function is supplied,
 * an exception is thrown if any <script> elements are rendered.
 *
 * @param {string} markup A string of valid HTML markup.
 * @param {?function} handleScript Invoked once for each rendered <script>.
 * @return {array<DOMElement|DOMTextNode>} An array of rendered nodes.
 */
function createNodesFromMarkup(markup, handleScript) {
  var node = dummyNode;
  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup dummy not initialized') : invariant(false) : void 0;
  var nodeName = getNodeName(markup);

  var wrap = nodeName && getMarkupWrap(nodeName);
  if (wrap) {
    node.innerHTML = wrap[1] + markup + wrap[2];

    var wrapDepth = wrap[0];
    while (wrapDepth--) {
      node = node.lastChild;
    }
  } else {
    node.innerHTML = markup;
  }

  var scripts = node.getElementsByTagName('script');
  if (scripts.length) {
    !handleScript ? process.env.NODE_ENV !== 'production' ? invariant(false, 'createNodesFromMarkup(...): Unexpected <script> element rendered.') : invariant(false) : void 0;
    createArrayFromMixed(scripts).forEach(handleScript);
  }

  var nodes = Array.from(node.childNodes);
  while (node.lastChild) {
    node.removeChild(node.lastChild);
  }
  return nodes;
}

module.exports = createNodesFromMarkup;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */



/**
 * Gets the scroll position of the supplied element or window.
 *
 * The return values are unbounded, unlike `getScrollPosition`. This means they
 * may be negative or exceed the element boundaries (which is possible using
 * inertial scrolling).
 *
 * @param {DOMWindow|DOMElement} scrollable
 * @return {object} Map with `x` and `y` keys.
 */

function getUnboundedScrollPosition(scrollable) {
  if (scrollable.Window && scrollable instanceof scrollable.Window) {
    return {
      x: scrollable.pageXOffset || scrollable.document.documentElement.scrollLeft,
      y: scrollable.pageYOffset || scrollable.document.documentElement.scrollTop
    };
  }
  return {
    x: scrollable.scrollLeft,
    y: scrollable.scrollTop
  };
}

module.exports = getUnboundedScrollPosition;

/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */



var hyphenate = __webpack_require__(282);

var msPattern = /^ms-/;

/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenateStyleName(string) {
  return hyphenate(string).replace(msPattern, '-ms-');
}

module.exports = hyphenateStyleName;

/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @typechecks static-only
 */



/**
 * Memoizes the return value of a function that accepts one string argument.
 */

function memoizeStringOnly(callback) {
  var cache = {};
  return function (string) {
    if (!cache.hasOwnProperty(string)) {
      cache[string] = callback.call(this, string);
    }
    return cache[string];
  };
}

module.exports = memoizeStringOnly;

/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var performance = __webpack_require__(285);

var performanceNow;

/**
 * Detect if we can use `window.performance.now()` and gracefully fallback to
 * `Date.now()` if it doesn't exist. We need to support Firefox < 15 for now
 * because of Facebook's testing infrastructure.
 */
if (performance.now) {
  performanceNow = function performanceNow() {
    return performance.now();
  };
} else {
  performanceNow = function performanceNow() {
    return Date.now();
  };
}

module.exports = performanceNow;

/***/ }),
/* 157 */,
/* 158 */,
/* 159 */,
/* 160 */,
/* 161 */,
/* 162 */,
/* 163 */,
/* 164 */,
/* 165 */,
/* 166 */,
/* 167 */,
/* 168 */,
/* 169 */,
/* 170 */,
/* 171 */,
/* 172 */,
/* 173 */,
/* 174 */,
/* 175 */,
/* 176 */,
/* 177 */,
/* 178 */,
/* 179 */,
/* 180 */,
/* 181 */,
/* 182 */,
/* 183 */,
/* 184 */,
/* 185 */,
/* 186 */,
/* 187 */,
/* 188 */,
/* 189 */,
/* 190 */,
/* 191 */,
/* 192 */,
/* 193 */,
/* 194 */,
/* 195 */,
/* 196 */,
/* 197 */,
/* 198 */,
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Castle side
 */
var Castle = (function () {
    function Castle() {
    }
    // Queen side. Long castling.
    Castle.QSide = 0;
    Castle.Q = 'O-O-O';
    // King side. Short castling.
    Castle.KSide = 1;
    Castle.K = 'O-O';
    return Castle;
}());
exports.Castle = Castle;


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Zero (invalid) square
 */
var ns = 65;
// None
var NULL_DIR = 0;
// Up
var UP = 1;
// Down
var DOWN = 2;
// Left
var LEFT = 4;
// Right
var RIGHT = 8;
/* tslint:disable:no-bitwise */
// Up/Left
var UP_LEFT = (UP | LEFT);
// Up/Right
var UP_RIGHT = (UP | RIGHT);
// Down/Left
var DOWN_LEFT = (DOWN | LEFT);
// Down/Right
var DOWN_RIGHT = (DOWN | RIGHT);
/* tslint:enable:no-bitwise */
/**
 * Opposite move's directions.
 */
var __dirOpposite = [
    NULL_DIR,
    DOWN,
    UP,
    NULL_DIR,
    RIGHT,
    DOWN_RIGHT,
    UP_RIGHT,
    NULL_DIR,
    LEFT,
    DOWN_LEFT,
    UP_LEFT // opposite of DOWN_RIGHT (10)
];
/**
 * Slider moves flags.
 */
var __dirIsDiagonal = [
    false,
    false,
    false,
    false,
    false,
    true,
    true,
    false,
    false,
    true,
    true // 10 = for DOWN_RIGHT
];
/**
 * Movment distance
 */
var __dirDelta = [
    0,
    8,
    -8,
    0,
    -1,
    7,
    -9,
    0,
    1,
    9,
    -7 // delta for DOWN_RIGHT
];
/**
 * Allowed moves for squares.
 */
var __squareMoves = [
    [ns, 8, ns, ns, ns, ns, ns, ns, 1, 9, ns],
    [ns, 9, ns, ns, 0, 8, ns, ns, 2, 10, ns],
    [ns, 10, ns, ns, 1, 9, ns, ns, 3, 11, ns],
    [ns, 11, ns, ns, 2, 10, ns, ns, 4, 12, ns],
    [ns, 12, ns, ns, 3, 11, ns, ns, 5, 13, ns],
    [ns, 13, ns, ns, 4, 12, ns, ns, 6, 14, ns],
    [ns, 14, ns, ns, 5, 13, ns, ns, 7, 15, ns],
    [ns, 15, ns, ns, 6, 14, ns, ns, ns, ns, ns],
    [ns, 16, 0, ns, ns, ns, ns, ns, 9, 17, 1],
    [ns, 17, 1, ns, 8, 16, 0, ns, 10, 18, 2],
    [ns, 18, 2, ns, 9, 17, 1, ns, 11, 19, 3],
    [ns, 19, 3, ns, 10, 18, 2, ns, 12, 20, 4],
    [ns, 20, 4, ns, 11, 19, 3, ns, 13, 21, 5],
    [ns, 21, 5, ns, 12, 20, 4, ns, 14, 22, 6],
    [ns, 22, 6, ns, 13, 21, 5, ns, 15, 23, 7],
    [ns, 23, 7, ns, 14, 22, 6, ns, ns, ns, ns],
    [ns, 24, 8, ns, ns, ns, ns, ns, 17, 25, 9],
    [ns, 25, 9, ns, 16, 24, 8, ns, 18, 26, 10],
    [ns, 26, 10, ns, 17, 25, 9, ns, 19, 27, 11],
    [ns, 27, 11, ns, 18, 26, 10, ns, 20, 28, 12],
    [ns, 28, 12, ns, 19, 27, 11, ns, 21, 29, 13],
    [ns, 29, 13, ns, 20, 28, 12, ns, 22, 30, 14],
    [ns, 30, 14, ns, 21, 29, 13, ns, 23, 31, 15],
    [ns, 31, 15, ns, 22, 30, 14, ns, ns, ns, ns],
    [ns, 32, 16, ns, ns, ns, ns, ns, 25, 33, 17],
    [ns, 33, 17, ns, 24, 32, 16, ns, 26, 34, 18],
    [ns, 34, 18, ns, 25, 33, 17, ns, 27, 35, 19],
    [ns, 35, 19, ns, 26, 34, 18, ns, 28, 36, 20],
    [ns, 36, 20, ns, 27, 35, 19, ns, 29, 37, 21],
    [ns, 37, 21, ns, 28, 36, 20, ns, 30, 38, 22],
    [ns, 38, 22, ns, 29, 37, 21, ns, 31, 39, 23],
    [ns, 39, 23, ns, 30, 38, 22, ns, ns, ns, ns],
    [ns, 40, 24, ns, ns, ns, ns, ns, 33, 41, 25],
    [ns, 41, 25, ns, 32, 40, 24, ns, 34, 42, 26],
    [ns, 42, 26, ns, 33, 41, 25, ns, 35, 43, 27],
    [ns, 43, 27, ns, 34, 42, 26, ns, 36, 44, 28],
    [ns, 44, 28, ns, 35, 43, 27, ns, 37, 45, 29],
    [ns, 45, 29, ns, 36, 44, 28, ns, 38, 46, 30],
    [ns, 46, 30, ns, 37, 45, 29, ns, 39, 47, 31],
    [ns, 47, 31, ns, 38, 46, 30, ns, ns, ns, ns],
    [ns, 48, 32, ns, ns, ns, ns, ns, 41, 49, 33],
    [ns, 49, 33, ns, 40, 48, 32, ns, 42, 50, 34],
    [ns, 50, 34, ns, 41, 49, 33, ns, 43, 51, 35],
    [ns, 51, 35, ns, 42, 50, 34, ns, 44, 52, 36],
    [ns, 52, 36, ns, 43, 51, 35, ns, 45, 53, 37],
    [ns, 53, 37, ns, 44, 52, 36, ns, 46, 54, 38],
    [ns, 54, 38, ns, 45, 53, 37, ns, 47, 55, 39],
    [ns, 55, 39, ns, 46, 54, 38, ns, ns, ns, ns],
    [ns, 56, 40, ns, ns, ns, ns, ns, 49, 57, 41],
    [ns, 57, 41, ns, 48, 56, 40, ns, 50, 58, 42],
    [ns, 58, 42, ns, 49, 57, 41, ns, 51, 59, 43],
    [ns, 59, 43, ns, 50, 58, 42, ns, 52, 60, 44],
    [ns, 60, 44, ns, 51, 59, 43, ns, 53, 61, 45],
    [ns, 61, 45, ns, 52, 60, 44, ns, 54, 62, 46],
    [ns, 62, 46, ns, 53, 61, 45, ns, 55, 63, 47],
    [ns, 63, 47, ns, 54, 62, 46, ns, ns, ns, ns],
    [ns, ns, 48, ns, ns, ns, ns, ns, 57, ns, 49],
    [ns, ns, 49, ns, 56, ns, 48, ns, 58, ns, 50],
    [ns, ns, 50, ns, 57, ns, 49, ns, 59, ns, 51],
    [ns, ns, 51, ns, 58, ns, 50, ns, 60, ns, 52],
    [ns, ns, 52, ns, 59, ns, 51, ns, 61, ns, 53],
    [ns, ns, 53, ns, 60, ns, 52, ns, 62, ns, 54],
    [ns, ns, 54, ns, 61, ns, 53, ns, 63, ns, 55],
    [ns, ns, 55, ns, 62, ns, 54, ns, ns, ns, ns],
    [ns, ns, ns, ns, ns, ns, ns, ns, ns, ns, ns],
    [ns, ns, ns, ns, ns, ns, ns, ns, ns, ns, ns]
]; // H8
var squareMove = function (sq, dir) {
    return __squareMoves[sq][dir];
};
/**
 * Matrix for movment.
 */
var __sqDir;
/**
 * Initialize matrix.
 */
function initializeDirections() {
    __sqDir = [];
    var i, j, __dirArray = [
        UP,
        DOWN,
        LEFT,
        RIGHT,
        UP_LEFT,
        UP_RIGHT,
        DOWN_LEFT,
        DOWN_RIGHT,
        NULL_DIR
    ];
    // Fill matrix with null direction
    for (i = 0; i <= ns; i++) {
        __sqDir[i] = [];
        for (j = 0; j <= ns; j++) {
            __sqDir[i][j] = NULL_DIR;
        }
    }
    // Make allowed movment now
    for (i = 0; i <= 63; i++) {
        var x = 0;
        while (__dirArray[x] !== NULL_DIR) {
            j = squareMove(i, __dirArray[x]);
            while (j !== ns) {
                __sqDir[i][j] = __dirArray[x];
                j = squareMove(j, __dirArray[x]);
            }
            x++;
        }
    }
}
// Call initialization script.
(function () {
    initializeDirections();
})();
/**
 * Piece movment
 */
var Direction = (function () {
    function Direction() {
    }
    /**
     * Return opposite movment
     */
    Direction.opposite = function (d) {
        return __dirOpposite[d];
    };
    /**
     * Return true, if movment is diagonal
     */
    Direction.isDiagonal = function (d) {
        return __dirIsDiagonal[d];
    };
    /**
     * Return distance for movment.
     */
    Direction.delta = function (d) {
        return __dirDelta[d];
    };
    Direction.squareDirection = function (fr, to) {
        return __sqDir[fr][to];
    };
    Direction.squareMove = function (sq, dir) {
        return squareMove(sq, dir);
    };
    // None
    Direction.Null = NULL_DIR;
    // Up
    Direction.Up = UP;
    // Down
    Direction.Down = DOWN;
    // Left
    Direction.Left = LEFT;
    // Right
    Direction.Right = RIGHT;
    // Up/Left
    Direction.UpLeft = UP_LEFT;
    // Up/Right
    Direction.UpRight = UP_RIGHT;
    // Down/Left
    Direction.DownLeft = DOWN_LEFT;
    // Down/Right
    Direction.DownRight = DOWN_RIGHT;
    return Direction;
}());
exports.Direction = Direction;


/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var shortid = __webpack_require__(589);
var Color_1 = __webpack_require__(29);
var Piece_1 = __webpack_require__(50);
var Square_1 = __webpack_require__(51);
/**
 * Move in position
 */
var Move = (function () {
    /**
     * @constructor
     */
    function Move() {
        this.vars = [];
        this.varNo = 0;
        this.parent = null;
        this.moveData = null;
        this.uid = shortid.generate();
        this.Name = "";
        this.moveData = null;
        this.from = Square_1.Square.NullSquare;
        this.to = Square_1.Square.NullSquare;
        this.color = Color_1.Color.NoColor;
        this.capturedSquare = Square_1.Square.NullSquare;
        this.capturedPiece = Piece_1.Piece.NoPiece;
        this.promote = Piece_1.Piece.NoPiece;
        this.piece_num = 0;
        this.WhoMove = Color_1.Color.White;
        this.ply = 0;
        this.Comments = "";
        this.permanent = true;
        this.START_MARKER = false;
        this.END_MARKER = false;
        this.prev_move = null;
        this.next_move = null;
        this.legal_moves = [];
    }
    Move.init = function (fen, parent) {
        var firstMove = new Move();
        firstMove.Name = "FirstMove";
        firstMove.Fen = fen;
        firstMove.ply = 0;
        firstMove.START_MARKER = true;
        firstMove.END_MARKER = false;
        firstMove.next_move = new Move();
        firstMove.next_move.Name = "LastMove";
        firstMove.next_move.ply = 0;
        firstMove.next_move.START_MARKER = false;
        firstMove.next_move.END_MARKER = true;
        firstMove.next_move.prev_move = firstMove;
        if (parent) {
            firstMove.parent = parent;
            firstMove.ply = parent.ply;
            firstMove.varNo = parent.numVars + 1;
            firstMove.next_move.parent = parent;
            firstMove.next_move.ply = parent.ply;
            firstMove.next_move.varNo = parent.numVars + 1;
        }
        return firstMove.next_move;
    };
    Move.prototype.isFirst = function () {
        return this.START_MARKER || this.prev_move.START_MARKER;
    };
    Move.prototype.isBegin = function () {
        return this.START_MARKER;
    };
    Object.defineProperty(Move.prototype, "First", {
        get: function () {
            var move = this;
            while (move.prev_move) {
                move = move.prev_move;
            }
            return move;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Move.prototype, "Prev", {
        get: function () {
            return this.prev_move;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Move.prototype, "Next", {
        get: function () {
            return this.next_move;
        },
        enumerable: true,
        configurable: true
    });
    Move.prototype.isLast = function () {
        return this.END_MARKER || this.next_move.END_MARKER;
    };
    Move.prototype.isEnd = function () {
        return this.END_MARKER;
    };
    Object.defineProperty(Move.prototype, "Last", {
        get: function () {
            var move = this;
            while (move.next_move) {
                move = move.next_move;
            }
            return move;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Move.prototype, "PlyCount", {
        get: function () {
            return this.ply;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Move.prototype, "numVars", {
        get: function () {
            return this.vars.length;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Add and enter variation
     */
    Move.prototype.addVariation = function () {
        var varRoot = null;
        if (!this.START_MARKER) {
            var prev = this.Prev;
            varRoot = Move.init(prev.Fen, prev);
            prev.vars.push(varRoot);
        }
        return varRoot;
    };
    /**
     * Enter variation
     */
    Move.prototype.moveIntoVariation = function (no) {
        var varRoot = null;
        if ((no > 0) && (no <= this.numVars)) {
            varRoot = this.vars[no].Next;
        }
        return varRoot;
    };
    /**
     * Exit variation
     */
    Move.prototype.exitVariation = function () {
        if (this.parent) {
            return parent;
        }
        return this;
    };
    Move.prototype.truncate = function () {
        this.vars = [];
        this.END_MARKER = true;
    };
    Move.prototype.append = function (sm) {
        var newMove = new Move();
        newMove.parent = this.parent;
        newMove.varNo = this.varNo;
        newMove.moveData = sm;
        newMove.Name = sm.San ? sm.San : sm.PlyCount.toString();
        newMove.ply = sm.PlyCount;
        newMove.next_move = this;
        newMove.prev_move = this.prev_move;
        this.prev_move.next_move = newMove;
        this.prev_move = newMove;
        newMove.next_move.ply = newMove.ply;
        return newMove;
    };
    Object.defineProperty(Move.prototype, "moveKey", {
        get: function () {
            var pmk = this.parentMoveKey;
            if (pmk) {
                return pmk + "!" + this.varNo.toString() + "-" + this.ply.toString();
            }
            else {
                return this.ply.toString();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Move.prototype, "parentMoveKey", {
        get: function () {
            return (this.parent) ? this.parent.moveKey : "";
        },
        enumerable: true,
        configurable: true
    });
    return Move;
}());
exports.Move = Move;


/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Types_1 = __webpack_require__(39);
var InArray_1 = __webpack_require__(115);
var StrRepeat_1 = __webpack_require__(209);
var Color_1 = __webpack_require__(29);
var Castle_1 = __webpack_require__(199);
var Direction_1 = __webpack_require__(200);
var Piece_1 = __webpack_require__(50);
var Square_1 = __webpack_require__(51);
var SimpleMove_1 = __webpack_require__(114);
/** Short aliases */
var ns = Square_1.Square.NullSquare;
var noPiece = Piece_1.Piece.NoPiece;
var NULL_DIR = Direction_1.Direction.Null, UP = Direction_1.Direction.Up, DOWN = Direction_1.Direction.Down, LEFT = Direction_1.Direction.Left, RIGHT = Direction_1.Direction.Right, UP_LEFT = Direction_1.Direction.UpLeft, UP_RIGHT = Direction_1.Direction.UpRight, DOWN_LEFT = Direction_1.Direction.DownLeft, DOWN_RIGHT = Direction_1.Direction.DownRight;
function safeClone(obj) {
    if (obj !== undefined) {
        if (Types_1.isFunction(obj.clone)) {
            return obj.clone();
        }
        else if (Types_1.isArray(obj)) {
            return [].concat(obj);
        }
        else {
            var result = {};
            for (var name in obj) {
                if (result.hasOwnProperty(name)) {
                    result[name] = obj[name];
                }
            }
            return result;
        }
    }
    else {
        return undefined;
    }
}
function is_valid_dest(dest, sqset) {
    return ((sqset === undefined) || InArray_1.inArray(dest, sqset));
}
exports.FenStandartStart = "rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1";
exports.FenEmptyBoard = "8/8/8/8/8/8/8/8 w KQkq - 0 1";
var fenEmptyBoardRaw = "1111111111111111111111111111111111111111111111111111111111111111 w KQkq - 0 1";
// Forsite to piece map
var fen2Piece = {
    "1": noPiece,
    "P": Piece_1.Piece.WPawn,
    "K": Piece_1.Piece.WKing,
    "Q": Piece_1.Piece.WQueen,
    "R": Piece_1.Piece.WRook,
    "N": Piece_1.Piece.WKnight,
    "B": Piece_1.Piece.WBishop,
    "p": Piece_1.Piece.BPawn,
    "k": Piece_1.Piece.BKing,
    "q": Piece_1.Piece.BQueen,
    "r": Piece_1.Piece.BRook,
    "n": Piece_1.Piece.BKnight,
    "b": Piece_1.Piece.BBishop
};
// Piece to Forsite map
var FP_p2f = [];
FP_p2f[noPiece] = "1";
FP_p2f[Piece_1.Piece.WPawn] = "P";
FP_p2f[Piece_1.Piece.WKing] = "K";
FP_p2f[Piece_1.Piece.WQueen] = "Q";
FP_p2f[Piece_1.Piece.WRook] = "R";
FP_p2f[Piece_1.Piece.WKnight] = "N";
FP_p2f[Piece_1.Piece.WBishop] = "B";
FP_p2f[Piece_1.Piece.BPawn] = "p";
FP_p2f[Piece_1.Piece.BKing] = "k";
FP_p2f[Piece_1.Piece.BQueen] = "q";
FP_p2f[Piece_1.Piece.BRook] = "r";
FP_p2f[Piece_1.Piece.BKnight] = "n";
FP_p2f[Piece_1.Piece.BBishop] = "b";
var SanCheckLevel;
(function (SanCheckLevel) {
    SanCheckLevel[SanCheckLevel["NoCheckTest"] = 0] = "NoCheckTest";
    SanCheckLevel[SanCheckLevel["CheckText"] = 1] = "CheckText";
    SanCheckLevel[SanCheckLevel["MateTest"] = 2] = "MateTest";
})(SanCheckLevel = exports.SanCheckLevel || (exports.SanCheckLevel = {}));
var GenerateMode;
(function (GenerateMode) {
    GenerateMode[GenerateMode["Captures"] = 1] = "Captures";
    GenerateMode[GenerateMode["NonCaptures"] = 2] = "NonCaptures";
    GenerateMode[GenerateMode["All"] = 3] = "All";
})(GenerateMode = exports.GenerateMode || (exports.GenerateMode = {}));
/**
 * Chess position
 */
var Position = (function () {
    /**
     * @constructor
     */
    function Position(fen) {
        var _this = this;
        this.board = [];
        this.captured = [];
        this.plyCount = 0;
        this.strictCastling = false;
        this.pinned = [];
        this.list = [];
        this.listPos = [];
        this.pieceCount = [];
        this.material = [];
        this.numOnRank = [];
        this.numOnFyle = [];
        this.numOnLeftDiag = [];
        this.numOnRightDiag = [];
        this.numOnSquareColor = [];
        this.whoMove = Color_1.Color.White;
        this.Castling = 0;
        this.HalfMoveCount = 0;
        /**
         * Get piece on square
         */
        this.getPiece = function (sq) {
            return _this.board[sq];
        };
        /**
         *
         */
        this.getPieceNum = function (sq) {
            return _this.listPos[sq];
        };
        this.clear();
        if (fen) {
            this.readFromFEN(fen);
        }
    }
    Position.prototype.clear = function () {
        this.whoMove = Color_1.Color.White;
        this.captured = [];
        this.EpTarget = ns;
        this.Castling = 0;
        this.HalfMoveCount = 0;
        this.plyCount = 0;
        this.pieceCount[Color_1.Color.White] = 0;
        this.pieceCount[Color_1.Color.Black] = 0;
        this.list[Color_1.Color.White] = [];
        this.list[Color_1.Color.Black] = [];
        this.listPos = [];
        var i;
        var j;
        for (i = 0; i <= 64; i++) {
            this.board[i] = noPiece;
        }
        this.board[ns] = 0;
        for (i = Piece_1.Piece.WKing; i <= Piece_1.Piece.BPawn; i++) {
            this.material[i] = 0;
            this.numOnRank[i] = [];
            this.numOnFyle[i] = [];
            this.numOnLeftDiag[i] = [];
            this.numOnRightDiag[i] = [];
            this.numOnSquareColor[i] = [];
            for (j = 0; j < 8; j++) {
                this.numOnRank[i][j] = 0;
                this.numOnFyle[i][j] = 0;
            }
            for (j = 0; j < 15; j++) {
                this.numOnLeftDiag[i][j] = 0;
                this.numOnRightDiag[i][j] = 0;
            }
            this.numOnSquareColor[i][Color_1.Color.White] = 0;
            this.numOnSquareColor[i][Color_1.Color.Black] = 0;
        }
    };
    /**
     * Copy position
     * @param source {Position}
     */
    Position.prototype.copyFrom = function (source) {
        this.board = safeClone(source.board);
        this.pieceCount = safeClone(source.pieceCount);
        this.listPos = safeClone(source.listPos);
        this.list = safeClone(source.list);
        this.material = safeClone(source.material);
        this.numOnFyle = safeClone(source.numOnFyle);
        this.numOnRank = safeClone(source.numOnRank);
        this.numOnLeftDiag = safeClone(source.numOnLeftDiag);
        this.numOnRightDiag = safeClone(source.numOnRightDiag);
        this.numOnSquareColor = safeClone(source.numOnSquareColor);
        this.numOnSquareColor = safeClone(source.numOnSquareColor);
        this.EpTarget = source.EpTarget;
        this.whoMove = source.whoMove;
        this.plyCount = source.plyCount;
        this.HalfMoveCount = source.HalfMoveCount;
        this.Castling = source.Castling;
    };
    /**
     * Clone position object
     * @returns {ChessPosition}
     */
    Position.prototype.clone = function () {
        var sp = new Position();
        sp.copyFrom(this);
        return sp;
    };
    Object.defineProperty(Position.prototype, "WhoMove", {
        get: function () {
            return this.whoMove;
        },
        set: function (value) {
            this.whoMove = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Position.prototype, "Board", {
        /**
         * Byte board
         */
        get: function () {
            return this.board;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Position.prototype, "Captured", {
        get: function () {
            return this.captured;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Return true if count of specified piece great than zero.
     */
    Position.prototype.hasPiece = function (p) {
        return this.material[p] > 0;
    };
    /**
     * Return count of specified piece.
     */
    Position.prototype.getPieceCount = function (p) {
        return this.material[p];
    };
    /**
     * Add piece to square
     * @param p
     * @param sq
     * @returns {Boolean}
     */
    Position.prototype.addPiece = function (p, sq) {
        var c = Piece_1.Piece.color(p);
        if (this.pieceCount[c] === 16) {
            return false;
        }
        if (Piece_1.Piece.type(p) === Piece_1.Piece.King) {
            // check there is not already a King:
            if (this.material[p] > 0) {
                return false;
            }
            // king is always at the start of the piece list, so move the piece
            // already at location 0 if there is one:
            if (this.pieceCount[c] > 0) {
                var oldsq = this.list[c][0];
                this.list[c][this.pieceCount[c]] = oldsq;
                this.listPos[oldsq] = this.pieceCount[c];
            }
            this.list[c][0] = sq;
            this.listPos[sq] = 0;
        }
        else {
            this.listPos[sq] = this.pieceCount[c];
            this.list[c][this.pieceCount[c]] = sq;
        }
        this.pieceCount[c]++;
        this.material[p]++;
        this.addToBoard(p, sq);
        return true;
    };
    /**
     * Remove piece from square
     * @param p
     * @param sq
     * @returns {Boolean}
     */
    Position.prototype.removePiece = function (p, sq) {
        // TODO: check method
        var c = Piece_1.Piece.color(p);
        if (this.pieceCount[c] === 0) {
            return false;
        }
        if (this.material[p] === 0) {
            return false;
        }
        this.removeFromBoard(p, sq);
        this.material[p]--;
        this.pieceCount[c]--;
        if (Piece_1.Piece.type(p) === Piece_1.Piece.King) {
            this.list[c][0] = 0;
            this.listPos[sq] = 0;
        }
        else {
            this.listPos[sq] = this.pieceCount[c];
            this.list[c][this.pieceCount[c]] = sq;
        }
        return true;
    };
    /**
     * Return castling is enabled.
     */
    Position.prototype.getCastling = function (c, dir) {
        /* tslint:disable:no-bitwise */
        var b = (c === Color_1.Color.White ? 1 : 4);
        if (dir === Castle_1.Castle.KSide) {
            b += b;
        }
        // now b == 1 or 2 (white flags), or 4 or 8 (black flags)
        if (this.Castling & b) {
            return true;
        }
        else {
            return false;
        }
    };
    /**
     * Set castling flag.
     */
    Position.prototype.setCastling = function (c, dir, flag) {
        /* tslint:disable:no-bitwise */
        var b = (c === Color_1.Color.White) ? 1 : 4;
        if (dir === Castle_1.Castle.KSide) {
            b += b;
        }
        // now b = 1 or 2 (white flags), or 4 or 8 (black flags)
        if (flag) {
            this.Castling |= b;
        }
        else {
            this.Castling &= (255 - b);
        }
    };
    Object.defineProperty(Position.prototype, "PlyCount", {
        /**
         * Return current halfmove humber
         */
        get: function () {
            return this.plyCount;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Get move number
     */
    Position.prototype.getMoveNo = function () {
        return ((this.plyCount + 2) >> 1);
    };
    /**
     * Set move number
     */
    Position.prototype.setMoveNo = function (no) {
        this.plyCount = (no - 1) * 2;
        if (this.whoMove === Color_1.Color.Black) {
            this.plyCount++;
        }
    };
    /**
     * Set position from fen
     * @param fen {String}
     */
    Position.prototype.readFromFEN = function (fen) {
        if (!fen) {
            fen = fenEmptyBoardRaw;
        }
        while (fen.indexOf("  ") >= 0) {
            fen = fen.replace("  ", " ");
        }
        try {
            this.clear();
            var i = 0, sq = 0;
            var tok = fen.split(/\s+/);
            var board_text = String(tok[0]);
            // replace NOPIECE square with repeated "1" string
            for (i = 2; i <= 8; i++) {
                var re = new RegExp(String(i), "g");
                board_text = board_text.replace(re, StrRepeat_1.strRepeat("1", i));
            }
            // remove slashes
            board_text = board_text.replace(/\//g, "");
            if (board_text.length !== 64) {
                return undefined;
            }
            var fs2rs = new Array(64);
            // fenSqToRealSquare[] converts a fen square (0 to 63) to its real
            // square. E.g: [0] -> A8, [1] -> B8, .... [63] -> H1.
            for (sq = 0; sq < 64; sq++) {
                fs2rs[sq] = ((7 - Math.floor(sq / 8)) * 8 + (sq % 8));
            }
            for (sq = 0; sq < 64; sq++) {
                var p = fen2Piece[board_text.charAt(sq)];
                if (p !== noPiece) {
                    this.addPiece(p, fs2rs[sq]);
                }
            }
            // now the side to move:
            this.whoMove = (tok[1] === "b") ? Color_1.Color.Black : Color_1.Color.White;
            // now the castling flags:
            this.Castling = 0;
            if (tok[2] === "-") {
                // do nothing
            }
            else if (!tok[2] || (tok[2] === " ")) {
                // the FEN has no castling field, so just guess that
                // castling is possible whenever a king and rook are
                // still on their starting squares:
                if (this.board[4] === Piece_1.Piece.WKing) {
                    if (this.board[0] === Piece_1.Piece.WRook) {
                        this.setCastling(Color_1.Color.White, Castle_1.Castle.QSide, true);
                    }
                    if (this.board[7] === Piece_1.Piece.WRook) {
                        this.setCastling(Color_1.Color.White, Castle_1.Castle.KSide, true);
                    }
                }
                if (this.board[60] === Piece_1.Piece.BKing) {
                    if (this.board[56] === Piece_1.Piece.BRook) {
                        this.setCastling(Color_1.Color.Black, Castle_1.Castle.QSide, true);
                    }
                    if (this.board[63] === Piece_1.Piece.BRook) {
                        this.setCastling(Color_1.Color.Black, Castle_1.Castle.KSide, true);
                    }
                }
            }
            else {
                for (i = 0; i < tok[2].length; i++) {
                    if (tok[2].charAt(i) === "K") {
                        this.setCastling(Color_1.Color.White, Castle_1.Castle.KSide, true);
                    }
                    if (tok[2].charAt(i) === "Q") {
                        this.setCastling(Color_1.Color.White, Castle_1.Castle.QSide, true);
                    }
                    if (tok[2].charAt(i) === "k") {
                        this.setCastling(Color_1.Color.Black, Castle_1.Castle.KSide, true);
                    }
                    if (tok[2].charAt(i) === "q") {
                        this.setCastling(Color_1.Color.Black, Castle_1.Castle.QSide, true);
                    }
                }
            }
            // now the EP target:
            if (tok.length > 3) {
                if (tok[3].charAt(0) === "-") {
                    this.EpTarget = ns;
                }
                else {
                    var fylec = tok[3].charAt(0);
                    if (fylec < "a" || fylec > "h") {
                        return undefined;
                    }
                    var rankc = tok[3].charAt(1);
                    if (rankc !== "3" && rankc !== "6") {
                        return undefined;
                    }
                    this.EpTarget = Square_1.Square.create(Square_1.Square.fyleFromChar(fylec), Square_1.Square.rankFromChar(rankc));
                }
            }
            /* tslint:disable:no-eval */
            this.HalfMoveCount = (tok.length > 4) ? eval(tok[4]) : 0;
            if (tok.length > 5) {
                i = eval(tok[5]);
                if (i >= 1) {
                    this.setMoveNo(i);
                }
            }
        }
        catch (e) {
            this.clear();
        }
    };
    /**
     * Write FEN for position
     */
    Position.prototype.writeFEN = function () {
        var str = "";
        var pB;
        for (var rank = 7; rank >= 0; rank--) {
            var NOPIECERun = 0;
            if (rank !== 7) {
                str += "/";
            }
            for (var fyle = 0; fyle <= 7; fyle++) {
                pB = this.board[Square_1.Square.create(fyle, rank)];
                if (pB !== noPiece) {
                    if (NOPIECERun) {
                        str += NOPIECERun.toString();
                    }
                    NOPIECERun = 0;
                    str += FP_p2f[pB];
                }
                else {
                    NOPIECERun++;
                }
            }
            if (NOPIECERun) {
                str += NOPIECERun.toString();
            }
        }
        str += (this.whoMove === Color_1.Color.White ? " w" : " b");
        if (this.Castling === 0) {
            str += " -";
        }
        else {
            str += " ";
            if (this.getCastling(Color_1.Color.White, Castle_1.Castle.KSide)) {
                str += "K";
            }
            if (this.getCastling(Color_1.Color.White, Castle_1.Castle.QSide)) {
                str += "Q";
            }
            if (this.getCastling(Color_1.Color.Black, Castle_1.Castle.KSide)) {
                str += "k";
            }
            if (this.getCastling(Color_1.Color.Black, Castle_1.Castle.QSide)) {
                str += "q";
            }
        }
        if (this.EpTarget === ns) {
            str += " -";
        }
        else {
            str += " ";
            str += Square_1.Square.squareName(this.EpTarget);
        }
        str += " " + this.HalfMoveCount.toString();
        str += " " + (Math.floor(this.plyCount / 2) + 1).toString();
        return str;
    };
    /**
     * Make the move on the board and update all the necessary
     * fields in the simpleMove structure so it can be undone.
     * @param sm {SimpleMove}
     */
    Position.prototype.doSimpleMove = function (sm) {
        var from = sm.From;
        var to = sm.To;
        var p = this.board[from];
        var ptype = Piece_1.Piece.type(p);
        var enemy = Color_1.Color.flip(this.whoMove);
        sm.PieceNum = this.listPos[from];
        sm.CapturedPiece = this.board[to];
        sm.CapturedSquare = to;
        sm.CastleFlags = this.Castling;
        sm.EpSquare = this.EpTarget;
        sm.OldHalfMoveClock = this.HalfMoveCount;
        this.HalfMoveCount++;
        this.plyCount++;
        // handle enpassant capture:
        if ((ptype === Piece_1.Piece.Pawn) &&
            (sm.CapturedPiece === noPiece) &&
            (Square_1.Square.fyle(from) !== Square_1.Square.fyle(to))) {
            // this was an EP capture. We do not need to check it was a capture
            // since if a pawn lands on EPTarget it must capture to get there.
            var enemyPawn = Piece_1.Piece.create(enemy, Piece_1.Piece.Pawn);
            sm.CapturedSquare = (this.whoMove === Color_1.Color.White ? (to - 8) : (to + 8));
            sm.CapturedPiece = enemyPawn;
        }
        // handle captures:
        if (sm.CapturedPiece !== noPiece) {
            sm.CapturedNum = this.listPos[sm.CapturedSquare];
            // update opponents List of pieces
            this.pieceCount[enemy]--;
            this.listPos[this.list[enemy][this.pieceCount[enemy]]] = sm.CapturedNum;
            this.list[enemy][sm.CapturedNum] = this.list[enemy][this.pieceCount[enemy]];
            this.material[sm.CapturedPiece]--;
            this.HalfMoveCount = 0;
            this.removeFromBoard(sm.CapturedPiece, sm.CapturedSquare);
            this.captured[this.plyCount] = sm.CapturedPiece;
        }
        // handle promotion:
        if (sm.Promote !== noPiece) {
            this.material[p]--;
            this.removeFromBoard(p, from);
            p = Piece_1.Piece.create(this.whoMove, sm.Promote);
            this.material[p]++;
            this.addToBoard(p, from);
        }
        // now make the move:
        this.list[this.whoMove][sm.PieceNum] = to;
        this.listPos[to] = sm.PieceNum;
        this.removeFromBoard(p, from);
        this.addToBoard(p, to);
        var rookfrom = 0;
        var rookto = 0;
        // handle Castling:
        if ((ptype === Piece_1.Piece.King) &&
            (Square_1.Square.fyle(from) === 4) &&
            (Square_1.Square.fyle(to) === 2 || Square_1.Square.fyle(to) === 6)) {
            var rook = Piece_1.Piece.create(this.whoMove, Piece_1.Piece.Rook);
            if (Square_1.Square.fyle(to) === 2) {
                rookfrom = to - 2;
                rookto = to + 1;
            }
            else {
                rookfrom = to + 1;
                rookto = to - 1;
            }
            this.listPos[rookto] = this.listPos[rookfrom];
            this.list[this.whoMove][this.listPos[rookto]] = rookto;
            this.removeFromBoard(rook, rookfrom);
            this.addToBoard(rook, rookto);
        }
        // handle clearing of castling flags:
        if (this.Castling) {
            if (ptype === Piece_1.Piece.King) {
                this.setCastling(this.whoMove, Castle_1.Castle.QSide, false);
                this.setCastling(this.whoMove, Castle_1.Castle.KSide, false);
            }
            // see if a rook moved or was captured:
            if (this.whoMove === Color_1.Color.White) {
                if (from === 0) {
                    this.setCastling(Color_1.Color.White, Castle_1.Castle.QSide, false);
                }
                if (from === 7) {
                    this.setCastling(Color_1.Color.White, Castle_1.Castle.KSide, false);
                }
                if (to === 56) {
                    this.setCastling(Color_1.Color.Black, Castle_1.Castle.QSide, false);
                }
                if (to === 63) {
                    this.setCastling(Color_1.Color.Black, Castle_1.Castle.KSide, false);
                }
            }
            else {
                if (from === 56) {
                    this.setCastling(Color_1.Color.Black, Castle_1.Castle.QSide, false);
                }
                if (from === 63) {
                    this.setCastling(Color_1.Color.Black, Castle_1.Castle.KSide, false);
                }
                if (to === 0) {
                    this.setCastling(Color_1.Color.White, Castle_1.Castle.QSide, false);
                }
                if (to === 7) {
                    this.setCastling(Color_1.Color.White, Castle_1.Castle.KSide, false);
                }
            }
        }
        // set the EPTarget square, if a pawn advanced two squares and an
        // enemy pawn is on a square where enpassant may be possible.
        this.EpTarget = ns;
        if (ptype === Piece_1.Piece.Pawn) {
            var fromRank = Square_1.Square.rank(from);
            var toRank = Square_1.Square.rank(to);
            if ((fromRank === 1) &&
                (toRank === 3) &&
                ((this.board[Square_1.Square.move(to, LEFT)] === Piece_1.Piece.BPawn) ||
                    (this.board[Square_1.Square.move(to, RIGHT)] === Piece_1.Piece.BPawn))) {
                this.EpTarget = Square_1.Square.move(from, UP);
            }
            if ((fromRank === 6) &&
                (toRank === 4) &&
                ((this.board[Square_1.Square.move(to, LEFT)] === Piece_1.Piece.WPawn) ||
                    (this.board[Square_1.Square.move(to, RIGHT)] === Piece_1.Piece.WPawn))) {
                this.EpTarget = Square_1.Square.move(from, DOWN);
            }
            this.HalfMoveCount = 0; // 50-move clock resets on pawn moves.
        }
        this.whoMove = enemy;
        return;
    };
    /**
     * Take back a simple move that has been made with DoSimpleMove().
     * @param sm {SimpleMove}
     */
    Position.prototype.undoSimpleMove = function (sm) {
        var from = sm.From;
        var to = sm.To;
        var p = this.board[to];
        this.EpTarget = sm.EpSquare;
        this.Castling = sm.CastleFlags;
        this.HalfMoveCount = sm.OldHalfMoveClock;
        this.plyCount--;
        this.whoMove = Color_1.Color.flip(this.whoMove);
        sm.PieceNum = this.listPos[to];
        // handle a capture: insert piece back into piece list.
        // this works for EP captures too, since the square of the captured
        // piece is in the "capturedSquare" field rather than assuming the
        // value of the "to" field. The only time these two fields are
        // different is for an enpassant move.
        if (sm.CapturedPiece !== noPiece) {
            var c = Color_1.Color.flip(this.whoMove);
            this.listPos[this.list[c][sm.CapturedNum]] = this.pieceCount[c];
            this.listPos[sm.CapturedSquare] = sm.CapturedNum;
            this.list[c][this.pieceCount[c]] = this.list[c][sm.CapturedNum];
            this.list[c][sm.CapturedNum] = sm.CapturedSquare;
            this.material[sm.CapturedPiece]++;
            this.pieceCount[c]++;
        }
        // handle promotion:
        if (sm.Promote !== noPiece) {
            this.material[p]--;
            this.removeFromBoard(p, to);
            p = Piece_1.Piece.create(this.whoMove, Piece_1.Piece.Pawn);
            this.material[p]++;
            this.addToBoard(p, to);
        }
        // now make the move:
        this.list[this.whoMove][sm.PieceNum] = from;
        this.listPos[from] = sm.PieceNum;
        this.removeFromBoard(p, to);
        this.addToBoard(p, from);
        if (sm.CapturedPiece !== noPiece) {
            this.addToBoard(sm.CapturedPiece, sm.CapturedSquare);
            delete this.captured[this.plyCount + 1];
        }
        // handle Castling:
        if ((Piece_1.Piece.type(p) === Piece_1.Piece.King) && Square_1.Square.fyle(from) === 4
            && (Square_1.Square.fyle(to) === 2 || Square_1.Square.fyle(to) === 6)) {
            var rook = (this.whoMove === Color_1.Color.White ? Piece_1.Piece.WRook : Piece_1.Piece.BRook);
            var rookfrom;
            var rookto;
            if (Square_1.Square.fyle(to) === 2) {
                rookfrom = to - 2;
                rookto = to + 1;
            }
            else {
                rookfrom = to + 1;
                rookto = to - 1;
            }
            this.listPos[rookfrom] = this.listPos[rookto];
            this.list[this.whoMove][this.listPos[rookto]] = rookfrom;
            this.removeFromBoard(rook, rookto);
            this.addToBoard(rook, rookfrom);
        }
    };
    Position.prototype.makeSanString = function (sm, flag) {
        var san = "";
        sm.PieceNum = this.listPos[sm.From];
        var from = this.list[this.whoMove][sm.PieceNum];
        var p = Piece_1.Piece.type(this.board[from]);
        var to = sm.To;
        var mlist;
        if (p === Piece_1.Piece.Pawn) {
            var capture = false;
            if (Square_1.Square.fyle(from) !== Square_1.Square.fyle(to)) {
                san += Square_1.Square.fyleChar(from);
                san += "x";
                capture = true;
            }
            san += Square_1.Square.fyleChar(to);
            san += Square_1.Square.rankChar(to);
            if ((Square_1.Square.rank(to) === 0) || (Square_1.Square.rank(to) === 7)) {
                san += "=";
                san += Piece_1.Piece.toChar(sm.Promote);
            }
            if (capture && (to !== sm.CapturedSquare)) {
                san += " e.p.";
            }
        }
        else if (p === Piece_1.Piece.King) {
            if (sm.From === ns) {
                san += "--";
            }
            else if ((Square_1.Square.fyle(from) === 4) && (Square_1.Square.fyle(to) === 6)) {
                san += Castle_1.Castle.K;
            }
            else if ((Square_1.Square.fyle(from) === 4) && (Square_1.Square.fyle(to) === 2)) {
                san += Castle_1.Castle.Q;
            }
            else {
                san += "K";
                if (this.board[to] !== noPiece) {
                    san += "x";
                }
                san += Square_1.Square.fyleChar(to);
                san += Square_1.Square.rankChar(to);
            }
        }
        else {
            san += Piece_1.Piece.toChar(p);
            // we only need to calculate legal moves to disambiguate if there
            // are more than one of this type of piece.
            if (this.material[this.board[sm.From]] < 2) {
                if (this.board[to] !== noPiece) {
                    san += "x";
                }
                san += Square_1.Square.fyleChar(to);
                san += Square_1.Square.rankChar(to);
            }
            else {
                // disambiguate moves here:
                // sHOULD handle 3-way ambiguity!  Looks like it does OK.
                var ambiguous_fyle = false;
                var ambiguous_rank = false;
                var f = Square_1.Square.fyleChar(from);
                var r = Square_1.Square.rankChar(from);
                mlist = [];
                this.matchLegalMove(mlist, p, to);
                for (var i = 0; i < mlist.length; i++) {
                    var m2 = mlist[i];
                    var from2 = m2.From;
                    var p2 = Piece_1.Piece.type(this.board[from2]);
                    if ((to === m2.To) && (from !== from2) && (p2 === p)) {
                        /* we have an ambiguity */
                        var f2 = Square_1.Square.fyleChar(from2);
                        // var r2 = Square.Square_RankChar(from2);
                        if (f === f2) {
                            ambiguous_fyle = true;
                        }
                        else {
                            ambiguous_rank = true;
                        }
                    }
                }
                if (ambiguous_rank) {
                    san += f;
                }
                if (ambiguous_fyle) {
                    san += r;
                }
                if (this.board[to] !== noPiece) {
                    san += "x";
                }
                san += Square_1.Square.fyleChar(to);
                san += Square_1.Square.rankChar(to);
            }
        }
        // now do the check or mate symbol:
        if (flag > 0) {
            // now we make the move to test for check:
            this.doSimpleMove(sm);
            if (this.isKingInCheck()) {
                var ch = "+";
                if (flag > 1) {
                    mlist = this.generateMoves(noPiece, GenerateMode.All, true);
                    if (mlist.length === 0) {
                        ch = "#";
                    }
                }
                san += ch;
            }
            this.undoSimpleMove(sm);
        }
        return san;
    };
    /**
     * Generate the legal moves list.
     * If the specified pieceType is not NOPIECE, then only legal moves for that type of piece
     * are generated.
     */
    Position.prototype.generateMoves = function (pieceType, genType, maybeInCheck) {
        var genNonCaptures = (genType & GenerateMode.NonCaptures) !== 0;
        var capturesOnly = !genNonCaptures;
        var mask = 0;
        if (pieceType !== noPiece) {
            mask = 1 << pieceType;
        }
        else {
            mask = (1 << Piece_1.Piece.King) |
                (1 << Piece_1.Piece.Queen) |
                (1 << Piece_1.Piece.Rook) |
                (1 << Piece_1.Piece.Bishop) |
                (1 << Piece_1.Piece.Knight) |
                (1 << Piece_1.Piece.Pawn);
        }
        // use the objects own move list if none was provided:
        var mlist = [];
        // compute which pieces of the side to move are this.pinned to the king:
        this.calcPins();
        // determine if the side to move is in check and find where the
        // checking pieces are, unless the caller has passed maybeInCheck=false
        // indicating it is CERTAIN the side to move is not in check here.
        var numChecks = 0;
        if (maybeInCheck) {
            var checkSquares = [];
            numChecks = this.calcNumChecks(this.getKingSquare(this.whoMove), checkSquares);
            if (numChecks > 0) {
                // the side to move IS in check:
                this.genCheckEvasions(mlist, pieceType, genType, checkSquares);
                return mlist;
            }
        }
        // the side to move is NOT in check. Iterate over each non-king
        // piece, and then generate King moves last of all:
        var npieces = this.pieceCount[this.whoMove];
        for (var x = 1; x < npieces; x++) {
            var sq = this.list[this.whoMove][x];
            var p = this.board[sq];
            var ptype = Piece_1.Piece.type(p);
            if (!(mask & (1 << ptype))) {
                continue;
            }
            var _pinned = this.pinned[x];
            // if this.pinned[x] == dir (not NULL_DIR), x can ONLY move along
            // that direction or its opposite.
            if (_pinned !== NULL_DIR) {
                if (ptype === Piece_1.Piece.Pawn) {
                    this.genPawnMoves(mlist, sq, _pinned, genType);
                }
                else if (ptype === Piece_1.Piece.Knight) {
                    // do nothing -- this.pinned knights cannot move
                }
                else {
                    // piece is a this.pinned Queen/Rook/Bishop. Only generate
                    // moves along the this.pinned direction and its opposite:
                    if ((ptype === Piece_1.Piece.Queen) ||
                        ((ptype === Piece_1.Piece.Rook) && !Direction_1.Direction.isDiagonal(_pinned)) ||
                        ((ptype === Piece_1.Piece.Bishop) && Direction_1.Direction.isDiagonal(_pinned))) {
                        this.genSliderMoves(mlist, this.whoMove, sq, _pinned, capturesOnly);
                        this.genSliderMoves(mlist, this.whoMove, sq, Direction_1.Direction.opposite(_pinned), capturesOnly);
                    }
                }
            }
            else {
                // this piece is free to move anywhere
                if (ptype === Piece_1.Piece.Pawn) {
                    this.genPawnMoves(mlist, sq, NULL_DIR, genType);
                }
                else {
                    // is Knight/Queen/Bishop/Rook:
                    this.genPieceMoves(mlist, sq, capturesOnly);
                }
            }
        }
        // lastly, king moves...
        if (mask & (1 << Piece_1.Piece.King)) {
            var castling = !numChecks;
            this.genKingMoves(mlist, genType, castling);
        }
        return mlist;
    };
    Position.prototype.isLegalMove = function (sm) {
        var from = sm.From;
        var to = sm.To;
        if (from > 63 || to > 63) {
            return false;
        }
        if (from === to) {
            return false;
        }
        var mover = this.board[from];
        var captured = this.board[to];
        if (Piece_1.Piece.color(mover) !== this.whoMove) {
            return false;
        }
        if (Piece_1.Piece.color(captured) === this.whoMove) {
            return false;
        }
        if (sm.MovingPiece !== mover) {
            return false;
        }
        mover = Piece_1.Piece.type(mover);
        if (sm.Promote !== noPiece && mover !== Piece_1.Piece.Pawn) {
            return false;
        }
        var enemy = Color_1.Color.flip(this.whoMove);
        if (mover === Piece_1.Piece.Pawn) {
            var rfrom = Square_1.Square.rank(from);
            var rto = Square_1.Square.rank(to);
            if (this.whoMove === Color_1.Color.Black) {
                rfrom = 7 - rfrom;
                rto = 7 - rto;
            }
            var rdiff = rto - rfrom;
            var fdiff = Square_1.Square.fyle(to) - Square_1.Square.fyle(from);
            if (rdiff < 1 || rdiff > 2) {
                return false;
            }
            if (fdiff < -1 || fdiff > 1) {
                return false;
            }
            if (fdiff === 0) {
                if (captured !== noPiece) {
                    return false;
                }
                if (rdiff === 2) {
                    if (rfrom !== 1) {
                        return false;
                    }
                    // make sure the square in between is NOPIECE:
                    var midsquare = from + ((to - from) / 2);
                    if (this.board[midsquare] !== noPiece) {
                        return false;
                    }
                }
            }
            else {
                if (rdiff !== 1) {
                    return false;
                }
                if (captured === noPiece) {
                    // it must be enpassant, or illegal
                    if (to !== this.EpTarget) {
                        return false;
                    }
                }
            }
            // check the promotion piece:
            if (rto === 7) {
                var p = sm.Promote;
                if (p !== Piece_1.Piece.Queen && p !== Piece_1.Piece.Rook && p !== Piece_1.Piece.Bishop && p !== Piece_1.Piece.Knight) {
                    return false;
                }
            }
            else {
                if (sm.Promote !== noPiece) {
                    return false;
                }
            }
        }
        else if (Piece_1.Piece.isSlider(mover)) {
            // make sure the direction is valid:
            var dir = Square_1.Square.direction(from, to);
            if (dir === NULL_DIR) {
                return false;
            }
            if (mover === Piece_1.Piece.Rook && Direction_1.Direction.isDiagonal(dir)) {
                return false;
            }
            if (mover === Piece_1.Piece.Bishop && !Direction_1.Direction.isDiagonal(dir)) {
                return false;
            }
            var delta = Direction_1.Direction.delta(dir);
            // make sure all the in-between squares are NOPIECE:
            var dest = from + delta;
            while (dest !== to) {
                if (this.board[dest] !== noPiece) {
                    return false;
                }
                dest += delta;
            }
        }
        else if (mover === Piece_1.Piece.Knight) {
            if (!Square_1.Square.isKnightHop(from, to)) {
                return false;
            }
        }
        else {
            if (Square_1.Square.adjacent(to, this.getKingSquare(enemy))) {
                return false;
            }
            if (!Square_1.Square.adjacent(from, to)) {
                // the move must be castling, or illegal.
                if (this.isKingInCheck()) {
                    return false;
                }
                var mlist = [];
                this.genCastling(mlist);
                for (var i = 0; i < mlist.length; i++) {
                    if ((mlist[i].From === from) && (mlist[i].To === to)) {
                        return false;
                    }
                }
                return false;
            }
        }
        // the move looks good, but does it leave the king in check?
        var kingSq = (mover === Piece_1.Piece.King) ? to : this.getKingSquare(this.whoMove);
        this.doSimpleMove(sm);
        var nchecks = this.calcAttacks(enemy, kingSq);
        this.undoSimpleMove(sm);
        return (nchecks === 0);
    };
    /**
     * Добавить фигуру на доску
     * @param p
     * @param sq
     */
    Position.prototype.addToBoard = function (p, sq) {
        this.board[sq] = p;
        this.numOnRank[p][Square_1.Square.rank(sq)]++;
        this.numOnFyle[p][Square_1.Square.fyle(sq)]++;
        this.numOnLeftDiag[p][Square_1.Square.leftDiag(sq)]++;
        this.numOnRightDiag[p][Square_1.Square.rightDiag(sq)]++;
        this.numOnSquareColor[p][Square_1.Square.color(sq)]++;
    };
    /**
     * Убрать фигуру с доски
     * @param p
     * @param sq
     */
    Position.prototype.removeFromBoard = function (p, sq) {
        this.board[sq] = noPiece;
        this.numOnRank[p][Square_1.Square.rank(sq)]--;
        this.numOnFyle[p][Square_1.Square.fyle(sq)]--;
        this.numOnLeftDiag[p][Square_1.Square.leftDiag(sq)]--;
        this.numOnRightDiag[p][Square_1.Square.rightDiag(sq)]--;
        this.numOnSquareColor[p][Square_1.Square.color(sq)]--;
    };
    Position.prototype.fyleCount = function (p, f) {
        return this.numOnFyle[p][f];
    };
    Position.prototype.rankCount = function (p, r) {
        return this.numOnRank[p][r];
    };
    Position.prototype.leftDiagCount = function (p, diag) {
        return this.numOnLeftDiag[p][diag];
    };
    Position.prototype.rightDiagCount = function (p, diag) {
        return this.numOnRightDiag[p][diag];
    };
    Position.prototype.squareColorCount = function (p, sqColor) {
        return this.numOnSquareColor[p][sqColor];
    };
    /**
     * Клетка на которой находится король
     * @param c
     * @returns {Number}
     */
    Position.prototype.getKingSquare = function (c) {
        if (c === void 0) { c = this.whoMove; }
        return this.list[c][0];
    };
    /**
     * Клетка на которой находится король противника
     * @param c
     * @returns {Number}
     */
    Position.prototype.getEnemyKingSquare = function (c) {
        if (c === void 0) { c = this.whoMove; }
        return this.list[1 - c][0];
    };
    /**
     * Посчитать количество шахов
     */
    Position.prototype.calcNumChecks = function (kingSq, checkSquares) {
        kingSq = (kingSq) ? kingSq : this.getKingSquare();
        return this.calcAttacks(1 - this.whoMove, kingSq, checkSquares);
    };
    /**
     * Король под шахом
     */
    Position.prototype.isKingInCheck = function () {
        return (this.calcNumChecks(this.getKingSquare(), undefined) > 0);
    };
    /**
     * Рассчитать количество атак для указанной стороны.
     * Эта функция также добавляет список атакующих клеток в параметре fromSqs, если он не undefined.
     */
    Position.prototype.calcAttacks = function (side, target, fromSqs) {
        var fromSquares = (fromSqs !== undefined) ? fromSqs : [];
        var queen;
        var rook;
        var bishop;
        var knight;
        var delta;
        var dest;
        var dirs = [];
        var dir;
        var last;
        var p;
        var sq;
        var i;
        // attacks Bishop/Queen/Rook: look at each of the 8 directions
        if (side === Color_1.Color.White) {
            queen = Piece_1.Piece.WQueen;
            rook = Piece_1.Piece.WRook;
            bishop = Piece_1.Piece.WBishop;
            knight = Piece_1.Piece.WKnight;
        }
        else {
            queen = Piece_1.Piece.BQueen;
            rook = Piece_1.Piece.BRook;
            bishop = Piece_1.Piece.BBishop;
            knight = Piece_1.Piece.BKnight;
        }
        var numQueensRooks = this.material[queen] + this.material[rook];
        var numQueensBishops = this.material[queen] + this.material[bishop];
        // we only bother if there are any sliding pieces of each type:
        if (numQueensRooks > 0) {
            var fyle = Square_1.Square.fyle(target);
            var rank = Square_1.Square.rank(target);
            dirs = [];
            if (this.fyleCount(queen, fyle) + this.fyleCount(rook, fyle) > 0) {
                dirs.push(UP);
                dirs.push(DOWN);
            }
            if (this.rankCount(queen, rank) + this.rankCount(rook, rank) > 0) {
                dirs.push(LEFT);
                dirs.push(RIGHT);
            }
            for (i = 0; i < dirs.length; i++) {
                dir = dirs[i];
                delta = Direction_1.Direction.delta(dir);
                dest = target;
                last = Square_1.Square.last(target, dir);
                while (dest !== last) {
                    dest += delta;
                    p = this.board[dest];
                    if (p === noPiece) {
                        // square NOPIECE: keep searching
                        continue;
                    }
                    else if (p === queen || p === rook) {
                        // found an attacking piece
                        fromSquares.push(dest);
                        break;
                    }
                    else {
                        // found a piece, but not a queen or rook
                        break;
                    }
                }
            }
        }
        // now diagonal sliders: Queens/Bishops:
        if (numQueensBishops > 0) {
            var left = Square_1.Square.leftDiag(target);
            var right = Square_1.Square.rightDiag(target);
            dirs = [];
            if (this.leftDiagCount(queen, left) + this.leftDiagCount(bishop, left) > 0) {
                dirs.push(UP_LEFT);
                dirs.push(DOWN_RIGHT);
            }
            if (this.rightDiagCount(queen, right) + this.rightDiagCount(bishop, right) > 0) {
                dirs.push(UP_RIGHT);
                dirs.push(DOWN_LEFT);
            }
            for (i = 0; i < dirs.length; i++) {
                dir = dirs[i];
                delta = Direction_1.Direction.delta(dir);
                dest = target;
                last = Square_1.Square.last(target, dir);
                while (dest !== last) {
                    dest += delta;
                    p = this.board[dest];
                    if (p === noPiece) {
                        // square NOPIECE: keep searching
                        continue;
                    }
                    else if (p === queen || p === bishop) {
                        // found an attacking piece
                        fromSquares.push(dest);
                        break;
                    }
                    else {
                        // found a piece, but not an enemy queen or bishop
                        break;
                    }
                }
            }
        }
        // now knight checks: we only bother if there is a knight on the
        // opposite square color of the target square color.
        if ((this.material[knight] > 0) && (this.squareColorCount(knight, Color_1.Color.flip(Square_1.Square.color(target)))) > 0) {
            var dests = Square_1.Square.knightAttacks(target);
            i = 0;
            while (i < 20) {
                dest = dests[i++];
                if (dest === ns) {
                    break;
                }
                if (this.board[dest] === knight) {
                    fromSquares.push(dest);
                }
            }
        }
        // now pawn attacks:
        if (side === Color_1.Color.White) {
            if (Square_1.Square.rank(target) !== 0) {
                sq = Square_1.Square.move(target, DOWN_LEFT);
                if (this.board[sq] === Piece_1.Piece.WPawn) {
                    fromSquares.push(sq);
                }
                sq = Square_1.Square.move(target, DOWN_RIGHT);
                if (this.board[sq] === Piece_1.Piece.WPawn) {
                    fromSquares.push(sq);
                }
            }
        }
        else {
            if (Square_1.Square.rank(target) !== 7) {
                sq = Square_1.Square.move(target, UP_LEFT);
                if (this.board[sq] === Piece_1.Piece.BPawn) {
                    fromSquares.push(sq);
                }
                sq = Square_1.Square.move(target, UP_RIGHT);
                if (this.board[sq] === Piece_1.Piece.BPawn) {
                    fromSquares.push(sq);
                }
            }
        }
        return fromSquares.length;
    };
    Position.prototype.calcPins = function () {
        for (var i = 0; i < 16; i++) {
            this.pinned[i] = NULL_DIR;
        }
        var kingSq = this.getKingSquare(this.whoMove);
        var enemy = Color_1.Color.flip(this.whoMove);
        var enemyQueen = Piece_1.Piece.create(enemy, Piece_1.Piece.Queen);
        var enemyRook = Piece_1.Piece.create(enemy, Piece_1.Piece.Rook);
        var enemyBishop = Piece_1.Piece.create(enemy, Piece_1.Piece.Bishop);
        // pins and checks from Bishops/Queens/Rooks:
        var fyle = Square_1.Square.fyle(kingSq);
        if (this.fyleCount(enemyQueen, fyle) + this.fyleCount(enemyRook, fyle) > 0) {
            this.calcPinsDir(UP, Piece_1.Piece.Rook);
            this.calcPinsDir(DOWN, Piece_1.Piece.Rook);
        }
        var rank = Square_1.Square.rank(kingSq);
        if (this.rankCount(enemyQueen, rank) + this.rankCount(enemyRook, rank) > 0) {
            this.calcPinsDir(LEFT, Piece_1.Piece.Rook);
            this.calcPinsDir(RIGHT, Piece_1.Piece.Rook);
        }
        var ld = Square_1.Square.leftDiag(kingSq);
        if (this.leftDiagCount(enemyQueen, ld) + this.leftDiagCount(enemyBishop, ld) > 0) {
            this.calcPinsDir(UP_LEFT, Piece_1.Piece.Bishop);
            this.calcPinsDir(DOWN_RIGHT, Piece_1.Piece.Bishop);
        }
        var rd = Square_1.Square.rightDiag(kingSq);
        if (this.rightDiagCount(enemyQueen, rd) + this.rightDiagCount(enemyBishop, rd) > 0) {
            this.calcPinsDir(UP_RIGHT, Piece_1.Piece.Bishop);
            this.calcPinsDir(DOWN_LEFT, Piece_1.Piece.Bishop);
        }
    };
    Position.prototype.calcPinsDir = function (dir, attacker) {
        // two pieces can pin along any path. A queen is always one,
        // the other is a bishop or rook. To save calculating it here, the
        // appropriate piece (BISHOP) or (ROOK) is passed along with the
        // direction.
        var king = this.getKingSquare(this.whoMove);
        var friendly = ns;
        var x = king;
        var last = Square_1.Square.last(king, dir);
        var delta = Direction_1.Direction.delta(dir);
        while (x !== last) {
            x += delta;
            var p = this.board[x];
            if (p === noPiece) {
                // square NOPIECE, so keep searching.
                continue;
            }
            else if (Piece_1.Piece.colorNotEmpty(p) === this.whoMove) {
                // found a friendly piece.
                if (friendly === ns) {
                    // found first friendly in this direction
                    friendly = x;
                }
                else {
                    // found second friendly in this direction, so stop.
                    return;
                }
            }
            else {
                // found an enemy piece
                if (friendly !== ns) {
                    // potential pin:
                    var ptype = Piece_1.Piece.type(p);
                    if (ptype === Piece_1.Piece.Queen || ptype === attacker) {
                        this.pinned[this.listPos[friendly]] = dir;
                    }
                }
                return; // found an enemy piece, so end search
            }
        }
    };
    /**
     * Add legal move
     *
     * @param mlist
     * @param from
     * @param to
     * @param promo
     * @returns
     */
    Position.prototype.addLegalMove = function (mlist, from, to, promo) {
        var sm = new SimpleMove_1.SimpleMove();
        // we do NOT set the pre-move castling/ep flags, or the captured
        // piece info, here since that is ONLY needed if the move is
        // going to be executed with DoSimpleMove() and then undone.
        sm.From = from;
        sm.To = to;
        sm.Promote = promo;
        sm.MovingPiece = this.board[from];
        sm.CapturedPiece = this.board[to];
        mlist.push(sm);
    };
    /**
     * Generate slider moves along a direction, for a sliding
     * piece of the specified color from the specified square.
     * If sqset != undefined, moves must be to a square in sqset.
     *
     * @param mlist
     * @param color
     * @param fromSq
     * @param dir
     * @param sqset
     * @param capturesOnly
     * @returns
     */
    Position.prototype.genSliderMoves = function (mlist, color, fromSq, dir, capturesOnly, sqset) {
        capturesOnly = !!capturesOnly;
        var dest = fromSq;
        var last = Square_1.Square.last(fromSq, dir);
        var delta = Direction_1.Direction.delta(dir);
        while (dest !== last) {
            dest += delta;
            var p = this.board[dest];
            if (p === noPiece) {
                if (!capturesOnly) {
                    if (is_valid_dest(dest, sqset)) {
                        this.addLegalMove(mlist, fromSq, dest, noPiece);
                    }
                }
                continue;
            }
            // we have reached a piece. Add the capture if it is an enemy.
            if (Piece_1.Piece.colorNotEmpty(p) !== color) {
                if (is_valid_dest(dest, sqset)) {
                    this.addLegalMove(mlist, fromSq, dest, noPiece);
                }
            }
            break;
        }
    };
    /**
     * Generate knight moves.
     * If sqset != undefined, moves must be to a square in sqset.
     *
     * @param mlist
     * @param color
     * @param fromSq
     * @param sqset
     * @param capturesOnly
     * @returns
     */
    Position.prototype.genKnightMoves = function (mlist, color, fromSq, sqset, capturesOnly) {
        capturesOnly = !!capturesOnly;
        var destArr = Square_1.Square.knightAttacks(fromSq);
        var i = 0;
        while (true) {
            var dest = destArr[i++];
            if (dest === ns) {
                break;
            }
            var p = this.board[dest];
            if (capturesOnly && (p === noPiece)) {
                continue;
            }
            if (Piece_1.Piece.color(p) !== color) {
                if (is_valid_dest(dest, sqset)) {
                    this.addLegalMove(mlist, fromSq, dest, noPiece);
                }
            }
        }
    };
    /**
     * Generate the legal castling moves.
     * Assumes the side to move is NOT in check, so the caller
     * should verify this first.
     *
     * @param mlist
     * @returns
     */
    Position.prototype.genCastling = function (mlist) {
        var from = this.getKingSquare(this.whoMove);
        if (from !== (this.whoMove === Color_1.Color.White ? 4 : 60)) {
            return;
        }
        var enemyKingSq = this.getEnemyKingSquare();
        var target;
        var skip;
        var rookSq;
        var rookPiece;
        // queen side Castling:
        if (!this.strictCastling || this.getCastling(this.whoMove, Castle_1.Castle.QSide)) {
            if (this.whoMove === Color_1.Color.White) {
                target = 2;
                skip = 3;
                rookSq = 0;
                rookPiece = Piece_1.Piece.WRook;
            }
            else {
                target = 58;
                skip = 59;
                rookSq = 56;
                rookPiece = Piece_1.Piece.BRook;
            }
            if ((this.board[target] === noPiece) && (this.board[skip] === noPiece)
                && (this.board[rookSq] === rookPiece)
                && (this.board[target - 1] === noPiece) // squares B1 or B8 must be NOPIECE too!
                && (this.calcNumChecks(target) === 0)
                && (this.calcNumChecks(skip) === 0)
                && (!Square_1.Square.adjacent(target, enemyKingSq))) {
                this.addLegalMove(mlist, from, target, noPiece);
            }
        }
        // king side Castling:
        if (!this.strictCastling || this.getCastling(this.whoMove, Castle_1.Castle.KSide)) {
            if (this.whoMove === Color_1.Color.White) {
                target = 6;
                skip = 5;
                rookSq = 7;
                rookPiece = Piece_1.Piece.WRook;
            }
            else {
                target = 62;
                skip = 61;
                rookSq = 63;
                rookPiece = Piece_1.Piece.BRook;
            }
            if (this.board[target] === noPiece && this.board[skip] === noPiece
                && (this.board[rookSq] === rookPiece)
                && (this.calcNumChecks(target) === 0)
                && (this.calcNumChecks(skip) === 0)
                && (!Square_1.Square.adjacent(target, enemyKingSq))) {
                this.addLegalMove(mlist, from, target, noPiece);
            }
        }
    };
    /**
     * Generate the legal King moves. Castling is generated as well, if
     * the specified flag is true.
     *
     * @param mlist
     * @param genType
     * @param castling
     * @returns
     */
    Position.prototype.genKingMoves = function (mlist, genType, castling) {
        var kingSq = this.getKingSquare();
        var enemyKingSq = this.getEnemyKingSquare();
        var enemy = Color_1.Color.flip(this.whoMove);
        var king = Piece_1.Piece.create(this.whoMove, Piece_1.Piece.King);
        var genNonCaptures = ((genType & GenerateMode.NonCaptures) !== 0);
        var destArr = Square_1.Square.kingAttacks(kingSq);
        var i = 0;
        var destSq;
        while ((destSq = destArr[i++]) !== ns) {
            // try this move and see if it legal:
            var addThisMove = false;
            // only try this move if the target square has an enemy piece,
            // or if it is NOPIECE and non captures are to be generated:
            if ((genNonCaptures && this.board[destSq] === noPiece) ||
                (Piece_1.Piece.color(this.board[destSq]) === enemy)) {
                // enemy piece or NOPIECE there, so try the move:
                var captured = this.board[destSq];
                this.board[destSq] = king;
                this.board[kingSq] = noPiece;
                // it is legal if the two kings will not be adjacent and the
                // moving king will not be in check on its new square:
                if (!Square_1.Square.adjacent(destSq, enemyKingSq)) {
                    if (this.calcNumChecks(destSq) === 0) {
                        addThisMove = true;
                    }
                }
                this.board[kingSq] = king;
                this.board[destSq] = captured;
            }
            if (addThisMove) {
                this.addLegalMove(mlist, kingSq, destSq, noPiece);
            }
        }
        // now generate castling moves, if possible:
        if (genNonCaptures && castling) {
            this.genCastling(mlist);
        }
    };
    /**
     * Add promotion moves.
     * Called by GenPawnMoves() when a pawn can be promoted.
     *
     * @param mlist
     * @param from
     * @param dest
     * @returns
     */
    Position.prototype.addPromotions = function (mlist, from, dest) {
        this.addLegalMove(mlist, from, dest, Piece_1.Piece.Queen);
        this.addLegalMove(mlist, from, dest, Piece_1.Piece.Rook);
        this.addLegalMove(mlist, from, dest, Piece_1.Piece.Bishop);
        this.addLegalMove(mlist, from, dest, Piece_1.Piece.Knight);
    };
    /**
     * Used to verify that an enpassant pawn capture is valid.
     * This is needed because illegal enpassant captures can appear legal
     * according to calculations of pinned pieces.
     * For example, consider WK d5, WP e5, BP f5 (just moved there),
     * BR h5 and the enpassant capture exf6 would be illegal.
     *
     * @param from
     * @param to
     * @returns
     */
    Position.prototype.isValidEnPassant = function (from, to) {
        // check that this enpassant capture is legal:
        var ownPawn = Piece_1.Piece.create(this.whoMove, Piece_1.Piece.Pawn);
        var enemyPawn = Piece_1.Piece.create(Color_1.Color.flip(this.whoMove), Piece_1.Piece.Pawn);
        var enemyPawnSq = (this.whoMove === Color_1.Color.White) ? to - 8 : to + 8;
        var toSqPiece = this.board[to];
        this.board[from] = noPiece;
        this.board[to] = ownPawn;
        this.board[enemyPawnSq] = noPiece;
        var isValid = this.isKingInCheck();
        this.board[from] = ownPawn;
        this.board[to] = toSqPiece;
        this.board[enemyPawnSq] = enemyPawn;
        return isValid;
    };
    Position.prototype._POSSIBLE_CAPTURE = function (d, from) {
        return ((d !== ns) &&
            ((Piece_1.Piece.color(this.board[d]) === (Color_1.Color.flip(this.whoMove))) ||
                (d === this.EpTarget && this.isValidEnPassant(from, d))));
    };
    /**
     * Generate legal pawn moves.
     * If dir != NULL_DIR, pawn MUST move in direction dir or its opposite.
     * If sqset != undefined, pawn MUST move to a square in sqset.
     * The dir and sq parameters are for pinned pawns and check evasions.
     *
     * @param mlist
     * @param from
     * @param dir
     * @param sqset
     * @param genType
     * @returns
     */
    Position.prototype.genPawnMoves = function (mlist, from, dir, genType, sqset) {
        var genNonCaptures = ((genType & GenerateMode.NonCaptures) !== 0);
        var oppdir = Direction_1.Direction.opposite(dir);
        var forward, promoRank, secondRank, dest;
        if (this.whoMove === Color_1.Color.White) {
            forward = Direction_1.Direction.Up;
            promoRank = 7;
            secondRank = 1;
        }
        else {
            forward = DOWN;
            promoRank = 0;
            secondRank = 6;
        }
        if (genNonCaptures && (dir === NULL_DIR || dir === forward || oppdir === forward)) {
            dest = Square_1.Square.move(from, forward);
            if (this.board[dest] === noPiece && (is_valid_dest(dest, sqset))) {
                if (Square_1.Square.rank(dest) === promoRank) {
                    this.addPromotions(mlist, from, dest);
                }
                else {
                    this.addLegalMove(mlist, from, dest, noPiece);
                }
            }
            if (Square_1.Square.rank(from) === secondRank && this.board[dest] === noPiece) {
                dest = Square_1.Square.move(dest, forward);
                if (this.board[dest] === noPiece && (is_valid_dest(dest, sqset))) {
                    this.addLegalMove(mlist, from, dest, noPiece);
                }
            }
        }
        // now do captures: left, then right
        // to be a possible capture, dest square must be EPTarget or hold
        // an enemy piece.
        var capdir = forward | LEFT;
        if (dir === NULL_DIR || dir === capdir || oppdir === capdir) {
            dest = Square_1.Square.move(from, capdir);
            if (this._POSSIBLE_CAPTURE(dest, from) && (is_valid_dest(dest, sqset))) {
                if (Square_1.Square.rank(dest) === promoRank) {
                    this.addPromotions(mlist, from, dest);
                }
                else {
                    this.addLegalMove(mlist, from, dest, noPiece);
                }
            }
        }
        capdir = forward | RIGHT;
        if (dir === NULL_DIR || dir === capdir || oppdir === capdir) {
            dest = Square_1.Square.move(from, capdir);
            if (this._POSSIBLE_CAPTURE(dest, from) && (is_valid_dest(dest, sqset))) {
                if (Square_1.Square.rank(dest) === promoRank) {
                    this.addPromotions(mlist, from, dest);
                }
                else {
                    this.addLegalMove(mlist, from, dest, noPiece);
                }
            }
        }
    };
    /**
     * Generate legal moves for the side to move when the King is in check.
     *
     * @param mlist
     * @param mask
     * @param genType
     * @param checkSquares
     * @returns
     */
    Position.prototype.genCheckEvasions = function (mlist, mask, genType, checkSquares) {
        var numChecks = checkSquares.length;
        var genNonCaptures = ((genType & GenerateMode.NonCaptures) !== 0);
        var capturesOnly = !genNonCaptures;
        var king = this.getKingSquare(this.whoMove);
        // if it's double check, we can ONLY move the king
        if (numChecks === 1) {
            // oк, it is NOT a double check
            // try to block piece/capture piece. Remember enpassant!
            // first, generate a list of targets: squares between the king
            // and attacker to block, and the attacker's square.
            var attackSq = checkSquares[0];
            var dir = Square_1.Square.direction(king, attackSq);
            var targets = []; // set of blocking/capturing squares.
            targets.push(attackSq);
            // now add squares we can might be able to block on.
            if (dir !== NULL_DIR) {
                var sq = Square_1.Square.move(king, dir);
                while (sq !== attackSq) {
                    if (this.board[sq] === noPiece) {
                        targets.push(sq);
                    }
                    sq = Square_1.Square.move(sq, dir);
                }
            }
            // try each non-King piece in turn. If a piece is pinned to
            // the king, don't bother since it cannot possibly block or
            // capture the piece that is giving check!
            var numPieces = this.pieceCount[this.whoMove];
            for (var p2 = 1; p2 < numPieces; p2++) {
                var from = this.list[this.whoMove][p2];
                var p2piece = this.board[from];
                if (this.pinned[p2] !== NULL_DIR) {
                    continue;
                }
                if (mask === noPiece || mask === Piece_1.Piece.type(p2piece)) {
                    if (Piece_1.Piece.type(p2piece) === Piece_1.Piece.Pawn) {
                        this.genPawnMoves(mlist, from, NULL_DIR, genType, targets);
                        // capturing a pawn enpassant will only get out
                        // of check if the pawn that moved two squares
                        // is doing the checking. If it is not, that means
                        // a discovered check with the last pawn move so
                        // taking enpassant cannot get out of check.
                        if (this.EpTarget !== ns) {
                            var pawnSq = (this.whoMove === Color_1.Color.White ? this.EpTarget - 8 : this.EpTarget + 8);
                            if (pawnSq === attackSq) {
                                var epset = [];
                                epset.push(this.EpTarget);
                                this.genPawnMoves(mlist, from, NULL_DIR, genType, epset);
                            }
                        }
                    }
                    else {
                        this.genPieceMoves(mlist, from, capturesOnly, targets);
                    }
                }
            } // end of search for captures/blocks
        }
        // now king moves -- just compute them normally:
        if (mask === noPiece || mask === Piece_1.Piece.King) {
            this.genKingMoves(mlist, genType, false);
        }
    };
    /**
     * Generates moves for a non pawn, non king piece.
     * If sqset != undefined, moves must be to a square in sqset.
     */
    Position.prototype.genPieceMoves = function (mlist, fromSq, capturesOnly, sqset) {
        var c = this.whoMove;
        var p = this.board[fromSq];
        var ptype = Piece_1.Piece.type(p);
        if (ptype === Piece_1.Piece.Knight) {
            this.genKnightMoves(mlist, c, fromSq, sqset, capturesOnly);
            return;
        }
        if (ptype !== Piece_1.Piece.Bishop) {
            this.genSliderMoves(mlist, c, fromSq, UP, capturesOnly, sqset);
            this.genSliderMoves(mlist, c, fromSq, DOWN, capturesOnly, sqset);
            this.genSliderMoves(mlist, c, fromSq, LEFT, capturesOnly, sqset);
            this.genSliderMoves(mlist, c, fromSq, RIGHT, capturesOnly, sqset);
        }
        if (ptype !== Piece_1.Piece.Rook) {
            this.genSliderMoves(mlist, c, fromSq, UP_LEFT, capturesOnly, sqset);
            this.genSliderMoves(mlist, c, fromSq, DOWN_LEFT, capturesOnly, sqset);
            this.genSliderMoves(mlist, c, fromSq, UP_RIGHT, capturesOnly, sqset);
            this.genSliderMoves(mlist, c, fromSq, DOWN_RIGHT, capturesOnly, sqset);
        }
    };
    Position.prototype.matchLegalMove = function (mlist, mask, target) {
        var total = this.material[Piece_1.Piece.create(this.whoMove, mask)];
        var _cnt = 0;
        var dir;
        var sq;
        var kingSq = this.getKingSquare(this.whoMove);
        var tryMove = 0;
        // first, verify that the target square is NOPIECE or contains
        // an enemy piece:
        var p = this.board[target];
        if (p !== noPiece && Piece_1.Piece.color(p) === this.whoMove) {
            return;
        }
        // loop through looking for pieces of type "mask". We start at 1
        // since the King is always the piece at position 0 in the list.
        for (var x = 1; x < this.pieceCount[this.whoMove] && _cnt < total; x++) {
            var sqPtr = this.list[this.whoMove][x];
            p = this.board[sqPtr];
            var pt = Piece_1.Piece.type(p);
            if (pt === mask) {
                // increment count so we stop when we've seen all the Material[p] pieces of this type.
                tryMove = 0;
                _cnt++;
                switch (pt) {
                    case Piece_1.Piece.Knight:
                        if (Square_1.Square.isKnightHop(sqPtr, target)) {
                            tryMove = 1;
                        }
                        break;
                    case Piece_1.Piece.Rook:
                        dir = Square_1.Square.direction(sqPtr, target);
                        if (dir !== NULL_DIR && !Direction_1.Direction.isDiagonal(dir)) {
                            sq = Square_1.Square.move(sqPtr, dir);
                            tryMove = 1;
                            while (sq !== target) {
                                if (this.board[sq] !== noPiece) {
                                    tryMove = 0;
                                    break;
                                }
                                sq = Square_1.Square.move(sq, dir);
                            }
                        }
                        break;
                    case Piece_1.Piece.Bishop:
                        dir = Square_1.Square.direction(sqPtr, target);
                        if (Direction_1.Direction.isDiagonal(dir)) {
                            sq = Square_1.Square.move(sqPtr, dir);
                            tryMove = 1;
                            while (sq !== target) {
                                if (this.board[sq] !== noPiece) {
                                    tryMove = 0;
                                    break;
                                }
                                sq = Square_1.Square.move(sq, dir);
                            }
                        }
                        break;
                    case Piece_1.Piece.Queen:
                        dir = Square_1.Square.direction(sqPtr, target);
                        if (dir !== NULL_DIR) {
                            sq = Square_1.Square.move(sqPtr, dir);
                            tryMove = 1;
                            while (sq !== target) {
                                if (this.board[sq] !== noPiece) {
                                    tryMove = 0;
                                    break;
                                }
                                sq = Square_1.Square.move(sq, dir);
                            }
                        }
                        break;
                    default:// should never happen
                        break;
                }
                // now, if tryMove is 1, the piece can get to target. We need
                // to see if the move is legal or leaves the king in check.
                if (tryMove === 1) {
                    var captured = this.board[target];
                    this.board[target] = p;
                    this.board[sqPtr] = noPiece;
                    if (this.calcNumChecks(kingSq) > 0) {
                        tryMove = 0;
                    }
                    this.board[sqPtr] = p;
                    this.board[target] = captured;
                    if (tryMove === 1) {
                        this.addLegalMove(mlist, sqPtr, target, noPiece);
                    }
                }
            }
        }
    };
    Position.prototype.matchKingMove = function (mlist, target) {
        mlist = [];
        var kingSq = this.getKingSquare(this.whoMove);
        var diff = target - kingSq;
        // valid diffs are: -9, -8, -7, -2, -1, 1, 2, 7, 8, 9. (-2,2: Castling)
        if (diff < -9 || diff > 9) {
            return false;
        }
        if (diff > -7 && diff < -2) {
            return false;
        }
        if (diff > 2 && diff < 7) {
            return false;
        }
        if (diff === 0) {
            return false;
        }
        if (diff === 2) {
            if (kingSq !== (this.whoMove === Color_1.Color.White ? 4 : 60)) {
                return false;
            }
            if (this.strictCastling && !this.getCastling(this.whoMove, Castle_1.Castle.QSide)) {
                return false;
            }
            // we also need to verify that the target square does not
            // lie adjacent to the location of the enemy king!
            if (this.board[kingSq + 1] !== noPiece || this.board[kingSq + 2] !== noPiece
                || this.calcNumChecks(kingSq) > 0
                || this.calcNumChecks(kingSq + 1) > 0
                || this.calcNumChecks(kingSq + 2) > 0) {
                return false;
            }
            this.addLegalMove(mlist, kingSq, target, noPiece);
            return true;
        }
        if (diff === -2) {
            if (kingSq !== (this.whoMove === Color_1.Color.White ? 4 : 60)) {
                return false;
            }
            if (this.strictCastling && !this.getCastling(this.whoMove, Castle_1.Castle.QSide)) {
                return false;
            }
            if (this.board[kingSq - 1] !== noPiece || this.board[kingSq - 2] !== noPiece
                || this.board[kingSq - 3] !== noPiece
                || this.calcNumChecks(kingSq) > 0
                || this.calcNumChecks(kingSq - 1) > 0
                || this.calcNumChecks(kingSq - 2) > 0) {
                return false;
            }
            this.addLegalMove(mlist, kingSq, target, noPiece);
            return true;
        }
        var captured = this.board[target];
        if (Piece_1.Piece.color(captured) === this.whoMove) {
            // capturing a friendly piece!
            return false;
        }
        // now make the move on the Board and Material lists, and see if it
        // leaves the King in check:
        // мы должны также проверить для смежности со вражеским Королем!!
        this.board[target] = Piece_1.Piece.create(this.whoMove, Piece_1.Piece.King);
        this.board[kingSq] = noPiece;
        if (captured !== noPiece) {
            this.material[captured]--;
        }
        var legal = 0;
        if (this.calcNumChecks(target) === 0) {
            legal = 1;
        }
        if (captured !== noPiece) {
            this.material[captured]++;
        }
        this.board[target] = captured;
        this.board[kingSq] = Piece_1.Piece.create(this.whoMove, Piece_1.Piece.King);
        if (legal === 1) {
            this.addLegalMove(mlist, kingSq, target, noPiece);
            return true;
        }
        return false;
    };
    return Position;
}());
exports.Position = Position;
exports.ChessPositionStd = new Position(exports.FenStandartStart);


/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var EventArgs = (function () {
    /**
     * constructor
     */
    function EventArgs(Sender) {
        this.Sender = Sender;
    }
    return EventArgs;
}());
exports.EventArgs = EventArgs;
var EventArgs1 = (function (_super) {
    __extends(EventArgs1, _super);
    /**
     * constructor
     */
    function EventArgs1(Sender, EventData) {
        var _this = _super.call(this, Sender) || this;
        _this.EventData = EventData;
        return _this;
    }
    return EventArgs1;
}(EventArgs));
exports.EventArgs1 = EventArgs1;


/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var EventHandler = (function () {
    /**
     * constructor
     */
    function EventHandler(Callback, Context) {
        this.Callback = Callback;
        this.Context = Context;
    }
    /**
     * Calls the method for handling events in the context of the called object.
     */
    EventHandler.prototype.invoke = function (args) {
        this.Callback.call(this.Context, args);
    };
    return EventHandler;
}());
exports.EventHandler = EventHandler;
var EventHandler1 = (function (_super) {
    __extends(EventHandler1, _super);
    /**
     * constructor
     */
    function EventHandler1(Callback, Context) {
        return _super.call(this, Callback, Context) || this;
    }
    /**
     * Calls the method for handling events in the context of the called object.
     */
    EventHandler1.prototype.invoke = function (args) {
        _super.prototype.invoke.call(this, args);
    };
    return EventHandler1;
}(EventHandler));
exports.EventHandler1 = EventHandler1;


/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.grep = function (elems, callback, invert) {
    var callbackInverse, matches = [];
    var i = 0;
    var length = elems.length;
    var callbackExpect = !invert;
    // Go through the array, only saving the items
    // that pass the validator function
    for (; i < length; i++) {
        callbackInverse = !callback(elems[i], i);
        if (callbackInverse !== callbackExpect) {
            matches.push(elems[i]);
        }
    }
    return matches;
};


/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Types_1 = __webpack_require__(39);
exports.indexOf = function (searchElement, arr, fromIndex) {
    return ((!Types_1.isArray(arr)) || (arr == null)) ? -1 : arr.indexOf(searchElement, fromIndex);
};


/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.average = function (arr) {
    var sum = 0;
    for (var i = 0; i < arr.length; i++) {
        sum += arr[i];
    }
    return sum / arr.length;
};


/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Pad_1 = __webpack_require__(117);
exports.justify = function (value, prefix, leftJustify, minWidth, zeroPad) {
    var diff = minWidth - value.length;
    if (diff > 0) {
        if (leftJustify || !zeroPad) {
            value = Pad_1.pad(value, minWidth, ' ', leftJustify);
        }
        else {
            value = value.slice(0, prefix.length) + Pad_1.pad('', diff, '0', true) + value.slice(prefix.length);
        }
    }
    return value;
};


/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.strRepeat = function (str, n) {
    var result = "", t = str.toString();
    while (--n >= 0) {
        result += t;
    }
    return result;
};


/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
var prop_types_1 = __webpack_require__(24);
var classNames = __webpack_require__(9);
var warning = __webpack_require__(88);
var StyleConfig_1 = __webpack_require__(78);
var FormControlStatic_1 = __webpack_require__(467);
var FormControlFeedback_1 = __webpack_require__(466);
var FormControl = (function (_super) {
    __extends(FormControl, _super);
    function FormControl(props, context) {
        return _super.call(this, props, context) || this;
    }
    FormControl.prototype.render = function () {
        var formGroup = this.context.$bs_formGroup;
        var controlId = formGroup && formGroup.controlId;
        var _a = this.props, Component = _a.componentClass, type = _a.type, _b = _a.id, id = _b === void 0 ? controlId : _b, inputRef = _a.inputRef, className = _a.className, scale = _a.scale, elementProps = __rest(_a, ["componentClass", "type", "id", "inputRef", "className", "scale"]);
        warning(controlId == null || id === controlId, '`controlId` is ignored on `<FormControl>` when `id` is specified.');
        // input[type="file"] should not have .form-control.
        var classes = {};
        var atype = type;
        if (type !== 'file') {
            classes['form-control'] = true;
            if ((Component == "input") && !atype) {
                atype = 'text';
            }
        }
        // If user provides a size, make sure to append it to classes as input-
        // e.g. if bsSize is small, it will append input-sm
        if (scale) {
            var s = StyleConfig_1.SIZE_MAP[scale] || scale;
            classes["input-" + s] = true;
        }
        return (React.createElement(Component, __assign({}, elementProps, { type: atype, id: id, ref: inputRef, className: classNames(className, classes) })));
    };
    FormControl.defaultProps = {
        componentClass: 'input',
    };
    FormControl.contextTypes = {
        $bs_formGroup: prop_types_1.PropTypes.object,
    };
    FormControl.Static = FormControlStatic_1.FormControlStatic;
    FormControl.Feedback = FormControlFeedback_1.FormControlFeedback;
    return FormControl;
}(React.Component));
exports.FormControl = FormControl;


/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
var classNames = __webpack_require__(9);
var StyleConfig_1 = __webpack_require__(78);
var InputGroup = (function (_super) {
    __extends(InputGroup, _super);
    function InputGroup(props) {
        return _super.call(this, props) || this;
    }
    InputGroup.prototype.render = function () {
        var _a = this.props, className = _a.className, scale = _a.scale, elementProps = __rest(_a, ["className", "scale"]);
        var s = StyleConfig_1.SIZE_MAP[scale] || scale;
        var classes = (_b = {},
            _b['input-group'] = true,
            _b["input-group-" + s] = !!scale,
            _b);
        return (React.createElement("span", __assign({}, elementProps, { className: classNames(className, classes) })));
        var _b;
    };
    return InputGroup;
}(React.Component));
exports.InputGroup = InputGroup;


/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
var classNames = __webpack_require__(9);
var Icon_1 = __webpack_require__(119);
var InputGroupAddon = (function (_super) {
    __extends(InputGroupAddon, _super);
    function InputGroupAddon(props) {
        return _super.call(this, props) || this;
    }
    InputGroupAddon.prototype.render = function () {
        var _a = this.props, className = _a.className, state = _a.state, arrow = _a.arrow, glyph = _a.glyph, children = _a.children, elementProps = __rest(_a, ["className", "state", "arrow", "glyph", "children"]);
        var classes = (_b = {},
            _b["" + state] = !!state,
            _b);
        var getArrow = function () {
            return arrow ? (React.createElement("span", { className: "arrow" })) : null;
        };
        var getIcon = function () {
            return glyph ? (React.createElement(Icon_1.Icon, { glyph: glyph })) : null;
        };
        return (React.createElement("span", __assign({}, elementProps, { className: classNames(className, 'input-group-addon', classes) }),
            getArrow(),
            getIcon()));
        var _b;
    };
    InputGroupAddon.defaultProps = {
        arrow: false,
        glyph: null,
    };
    return InputGroupAddon;
}(React.Component));
exports.InputGroupAddon = InputGroupAddon;


/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
var classNames = __webpack_require__(9);
var warning = __webpack_require__(88);
var addEventListener_1 = __webpack_require__(481);
var Steps_1 = __webpack_require__(478);
var Marks_1 = __webpack_require__(475);
var Handle_1 = __webpack_require__(474);
var EventUtils_1 = __webpack_require__(118);
function noop() { }
var SliderBase = (function (_super) {
    __extends(SliderBase, _super);
    function SliderBase(props) {
        var _this = _super.call(this, props) || this;
        _this.dragOffset = 0;
        _this.onMouseDown = function (e) {
            if (e.button !== 0) {
                return;
            }
            var isVertical = _this.props.vertical;
            var position = EventUtils_1.getMousePosition(isVertical, e);
            if (!EventUtils_1.isEventFromHandle(e, _this.handlesRefs)) {
                _this.dragOffset = 0;
            }
            else {
                var handlePosition = EventUtils_1.getHandleCenterPosition(isVertical, e.target);
                _this.dragOffset = position - handlePosition;
                position = handlePosition;
            }
            _this.onStart(position);
            _this.addDocumentMouseEvents();
            EventUtils_1.pauseEvent(e);
        };
        _this.onTouchStart = function (e) {
            if (EventUtils_1.isNotTouchEvent(e))
                return;
            var isVertical = _this.props.vertical;
            var position = EventUtils_1.getTouchPosition(isVertical, e);
            if (!EventUtils_1.isEventFromHandle(e, _this.handlesRefs)) {
                _this.dragOffset = 0;
            }
            else {
                var handlePosition = EventUtils_1.getHandleCenterPosition(isVertical, e.target);
                _this.dragOffset = position - handlePosition;
                position = handlePosition;
            }
            _this.onStart(position);
            _this.addDocumentTouchEvents();
            EventUtils_1.pauseEvent(e);
        };
        _this.onStart = function (position) { };
        _this.onEnd = function () { };
        _this.onMove = function (e, position) { };
        _this.onMouseMove = function (e) {
            var position = EventUtils_1.getMousePosition(_this.props.vertical, e);
            _this.onMove(e, position - _this.dragOffset);
        };
        _this.onTouchMove = function (e) {
            if (EventUtils_1.isNotTouchEvent(e)) {
                _this.onEnd();
                return;
            }
            var position = EventUtils_1.getTouchPosition(_this.props.vertical, e);
            _this.onMove(e, position - _this.dragOffset);
        };
        _this.saveSlider = function (slider) {
            _this.sliderRef = slider;
        };
        if (process.env.NODE_ENV !== 'production') {
            var step = props.step, max = props.max, min = props.min;
            warning(step && Math.floor(step) === step ? (max - min) % step === 0 : true, 'Slider[max] - Slider[min] (%s) should be a multiple of Slider[step] (%s)', max - min, step);
        }
        return _this;
    }
    SliderBase.prototype.addDocumentTouchEvents = function () {
        // just work for Chrome iOS Safari and Android Browser
        this.onTouchMoveListener = addEventListener_1.addEventListener(document, 'touchmove', this.onTouchMove);
        this.onTouchUpListener = addEventListener_1.addEventListener(document, 'touchend', this.onEnd);
    };
    SliderBase.prototype.addDocumentMouseEvents = function () {
        this.onMouseMoveListener = addEventListener_1.addEventListener(document, 'mousemove', this.onMouseMove);
        this.onMouseUpListener = addEventListener_1.addEventListener(document, 'mouseup', this.onEnd);
    };
    SliderBase.prototype.removeDocumentEvents = function () {
        /* eslint-disable no-unused-expressions */
        this.onTouchMoveListener && this.onTouchMoveListener.remove();
        this.onTouchUpListener && this.onTouchUpListener.remove();
        this.onMouseMoveListener && this.onMouseMoveListener.remove();
        this.onMouseUpListener && this.onMouseUpListener.remove();
        /* eslint-enable no-unused-expressions */
    };
    SliderBase.prototype.getSliderStart = function () {
        var slider = this.sliderRef;
        var rect = slider.getBoundingClientRect();
        return this.props.vertical ? rect.top : rect.left;
    };
    SliderBase.prototype.getSliderLength = function () {
        var slider = this.sliderRef;
        if (!slider) {
            return 0;
        }
        return this.props.vertical ? slider.clientHeight : slider.clientWidth;
    };
    SliderBase.prototype.getClosestPoint = function (val, marks, step, min) {
        var points = Object.keys(marks).map(parseFloat);
        if (step !== null) {
            var closestStep = Math.round((val - min) / step) * step + min;
            points.push(closestStep);
        }
        var diffs = points.map(function (point) { return Math.abs(val - point); });
        return points[diffs.indexOf(Math.min.apply(Math, diffs))];
    };
    SliderBase.prototype.ensureValuePrecision = function (val, props) {
        var marks = props.marks, step = props.step, min = props.min;
        var closestPoint = this.getClosestPoint(val, marks, step, min);
        return step === null ? closestPoint : parseFloat(closestPoint.toFixed(this.getPrecision(step)));
    };
    SliderBase.prototype.getPrecision = function (step) {
        var stepString = step.toString();
        var precision = 0;
        if (stepString.indexOf('.') >= 0) {
            precision = stepString.length - stepString.indexOf('.') - 1;
        }
        return precision;
    };
    SliderBase.prototype.calcValue = function (offset) {
        var _a = this.props, vertical = _a.vertical, min = _a.min, max = _a.max;
        var ratio = Math.abs(Math.max(offset, 0) / this.getSliderLength());
        var value = vertical ? (1 - ratio) * (max - min) + min : ratio * (max - min) + min;
        return value;
    };
    SliderBase.prototype.calcValueByPos = function (position) {
        var pixelOffset = position - this.getSliderStart();
        var nextValue = this.trimAlignValue(this.calcValue(pixelOffset));
        return nextValue;
    };
    SliderBase.prototype.calcOffset = function (value) {
        var _a = this.props, min = _a.min, max = _a.max;
        var ratio = (value - min) / (max - min);
        return ratio * 100;
    };
    SliderBase.prototype.saveHandle = function (index, handle) {
        if (!this.handlesRefs) {
            this.handlesRefs = {};
        }
        this.handlesRefs[index] = handle;
    };
    SliderBase.prototype.render = function () {
        var _a = this.props, prefixCls = _a.prefixCls, className = _a.className, marks = _a.marks, dots = _a.dots, step = _a.step, included = _a.included, disabled = _a.disabled, vertical = _a.vertical, min = _a.min, max = _a.max, style = _a.style;
        var children = this.props.children;
        var _b = this.renderInternal(), tracks = _b.tracks, handles = _b.handles;
        var sliderClassName = classNames((_c = {},
            _c[prefixCls] = true,
            _c[prefixCls + "-with-marks"] = Object.keys(marks).length,
            _c[prefixCls + "-disabled"] = disabled,
            _c[prefixCls + "-vertical"] = vertical,
            _c[className] = className,
            _c));
        return (React.createElement("div", { ref: this.saveSlider, className: sliderClassName, onTouchStart: disabled ? noop : this.onTouchStart, onMouseDown: disabled ? noop : this.onMouseDown, style: style },
            React.createElement("div", { className: prefixCls + "-rail" }),
            tracks,
            React.createElement(Steps_1.Steps, { prefixCls: prefixCls, vertical: vertical, marks: marks, dots: dots, step: step, included: included, lowerBound: this.getLowerBound(), upperBound: this.getUpperBound(), max: max, min: min }),
            handles,
            React.createElement(Marks_1.Marks, { className: prefixCls + "-mark", vertical: vertical, marks: marks, included: included, lowerBound: this.getLowerBound(), upperBound: this.getUpperBound(), max: max, min: min }),
            children));
        var _c;
    };
    SliderBase.defaultProps = {
        prefixCls: 'rc-slider',
        className: '',
        min: 0,
        max: 100,
        step: 1,
        marks: {},
        handle: function (_a) {
            var index = _a.index, restProps = __rest(_a, ["index"]);
            return React.createElement(Handle_1.Handle, __assign({}, restProps, { key: index }));
        },
        onBeforeChange: noop,
        onChange: noop,
        onAfterChange: noop,
        included: true,
        disabled: false,
        dots: false,
        vertical: false,
    };
    return SliderBase;
}(React.Component));
exports.SliderBase = SliderBase;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
exports.Track = function (_a) {
    var className = _a.className, included = _a.included, vertical = _a.vertical, offset = _a.offset, length = _a.length;
    var style = {
        visibility: included ? 'visible' : 'hidden',
    };
    if (vertical) {
        style.bottom = offset + "%";
        style.height = length + "%";
    }
    else {
        style.left = offset + "%";
        style.width = length + "%";
    }
    return React.createElement("div", { className: className, style: style });
};


/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



var emptyFunction = __webpack_require__(12);
var invariant = __webpack_require__(1);
var warning = __webpack_require__(2);

var ReactPropTypesSecret = __webpack_require__(121);
var checkPropTypes = __webpack_require__(483);

module.exports = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (process.env.NODE_ENV !== 'production') {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          invariant(
            false,
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            warning(
              false,
              'You are manually calling a React.PropTypes validation ' +
              'function for the `%s` prop on `%s`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.',
              propFullName,
              componentName
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunction.thatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues);
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (propValue.hasOwnProperty(key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
      return emptyFunction.thatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        warning(
          false,
          'Invalid argument supplid to oneOfType. Expected an array of check functions, but ' +
          'received %s at index %s.',
          getPostfixForTypeWarning(checker),
          i
        );
        return emptyFunction.thatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 216 */,
/* 217 */,
/* 218 */,
/* 219 */,
/* 220 */,
/* 221 */,
/* 222 */,
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * CSS properties which accept numbers but are not in units of "px".
 */

var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,

  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};

/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */
function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}

/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */
var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.
Object.keys(isUnitlessNumber).forEach(function (prop) {
  prefixes.forEach(function (prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Most style properties can be unset by doing .style[prop] = '' but IE8
 * doesn't like doing that with shorthand properties so for the properties that
 * IE8 breaks on, which are listed here, we instead unset each of the
 * individual properties. See http://bugs.jquery.com/ticket/12385.
 * The 4-value 'clock' properties like margin, padding, border-width seem to
 * behave without any problems. Curiously, list-style works too without any
 * special prodding.
 */
var shorthandPropertyExpansions = {
  background: {
    backgroundAttachment: true,
    backgroundColor: true,
    backgroundImage: true,
    backgroundPositionX: true,
    backgroundPositionY: true,
    backgroundRepeat: true
  },
  backgroundPosition: {
    backgroundPositionX: true,
    backgroundPositionY: true
  },
  border: {
    borderWidth: true,
    borderStyle: true,
    borderColor: true
  },
  borderBottom: {
    borderBottomWidth: true,
    borderBottomStyle: true,
    borderBottomColor: true
  },
  borderLeft: {
    borderLeftWidth: true,
    borderLeftStyle: true,
    borderLeftColor: true
  },
  borderRight: {
    borderRightWidth: true,
    borderRightStyle: true,
    borderRightColor: true
  },
  borderTop: {
    borderTopWidth: true,
    borderTopStyle: true,
    borderTopColor: true
  },
  font: {
    fontStyle: true,
    fontVariant: true,
    fontWeight: true,
    fontSize: true,
    lineHeight: true,
    fontFamily: true
  },
  outline: {
    outlineWidth: true,
    outlineStyle: true,
    outlineColor: true
  }
};

var CSSProperty = {
  isUnitlessNumber: isUnitlessNumber,
  shorthandPropertyExpansions: shorthandPropertyExpansions
};

module.exports = CSSProperty;

/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(7);

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var PooledClass = __webpack_require__(30);

var invariant = __webpack_require__(1);

/**
 * A specialized pseudo-event module to help keep track of components waiting to
 * be notified when their DOM representations are available for use.
 *
 * This implements `PooledClass`, so you should never need to instantiate this.
 * Instead, use `CallbackQueue.getPooled()`.
 *
 * @class ReactMountReady
 * @implements PooledClass
 * @internal
 */

var CallbackQueue = function () {
  function CallbackQueue(arg) {
    _classCallCheck(this, CallbackQueue);

    this._callbacks = null;
    this._contexts = null;
    this._arg = arg;
  }

  /**
   * Enqueues a callback to be invoked when `notifyAll` is invoked.
   *
   * @param {function} callback Invoked when `notifyAll` is invoked.
   * @param {?object} context Context to call `callback` with.
   * @internal
   */


  CallbackQueue.prototype.enqueue = function enqueue(callback, context) {
    this._callbacks = this._callbacks || [];
    this._callbacks.push(callback);
    this._contexts = this._contexts || [];
    this._contexts.push(context);
  };

  /**
   * Invokes all enqueued callbacks and clears the queue. This is invoked after
   * the DOM representation of a component has been created or updated.
   *
   * @internal
   */


  CallbackQueue.prototype.notifyAll = function notifyAll() {
    var callbacks = this._callbacks;
    var contexts = this._contexts;
    var arg = this._arg;
    if (callbacks && contexts) {
      !(callbacks.length === contexts.length) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Mismatched list of contexts in callback queue') : _prodInvariant('24') : void 0;
      this._callbacks = null;
      this._contexts = null;
      for (var i = 0; i < callbacks.length; i++) {
        callbacks[i].call(contexts[i], arg);
      }
      callbacks.length = 0;
      contexts.length = 0;
    }
  };

  CallbackQueue.prototype.checkpoint = function checkpoint() {
    return this._callbacks ? this._callbacks.length : 0;
  };

  CallbackQueue.prototype.rollback = function rollback(len) {
    if (this._callbacks && this._contexts) {
      this._callbacks.length = len;
      this._contexts.length = len;
    }
  };

  /**
   * Resets the internal queue.
   *
   * @internal
   */


  CallbackQueue.prototype.reset = function reset() {
    this._callbacks = null;
    this._contexts = null;
  };

  /**
   * `PooledClass` looks for this.
   */


  CallbackQueue.prototype.destructor = function destructor() {
    this.reset();
  };

  return CallbackQueue;
}();

module.exports = PooledClass.addPoolingTo(CallbackQueue);
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMProperty = __webpack_require__(25);
var ReactDOMComponentTree = __webpack_require__(11);
var ReactInstrumentation = __webpack_require__(16);

var quoteAttributeValueForBrowser = __webpack_require__(574);
var warning = __webpack_require__(2);

var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + DOMProperty.ATTRIBUTE_NAME_START_CHAR + '][' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');
var illegalAttributeNameCache = {};
var validatedAttributeNameCache = {};

function isAttributeNameSafe(attributeName) {
  if (validatedAttributeNameCache.hasOwnProperty(attributeName)) {
    return true;
  }
  if (illegalAttributeNameCache.hasOwnProperty(attributeName)) {
    return false;
  }
  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
    validatedAttributeNameCache[attributeName] = true;
    return true;
  }
  illegalAttributeNameCache[attributeName] = true;
  process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid attribute name: `%s`', attributeName) : void 0;
  return false;
}

function shouldIgnoreValue(propertyInfo, value) {
  return value == null || propertyInfo.hasBooleanValue && !value || propertyInfo.hasNumericValue && isNaN(value) || propertyInfo.hasPositiveNumericValue && value < 1 || propertyInfo.hasOverloadedBooleanValue && value === false;
}

/**
 * Operations for dealing with DOM properties.
 */
var DOMPropertyOperations = {
  /**
   * Creates markup for the ID property.
   *
   * @param {string} id Unescaped ID.
   * @return {string} Markup string.
   */
  createMarkupForID: function (id) {
    return DOMProperty.ID_ATTRIBUTE_NAME + '=' + quoteAttributeValueForBrowser(id);
  },

  setAttributeForID: function (node, id) {
    node.setAttribute(DOMProperty.ID_ATTRIBUTE_NAME, id);
  },

  createMarkupForRoot: function () {
    return DOMProperty.ROOT_ATTRIBUTE_NAME + '=""';
  },

  setAttributeForRoot: function (node) {
    node.setAttribute(DOMProperty.ROOT_ATTRIBUTE_NAME, '');
  },

  /**
   * Creates markup for a property.
   *
   * @param {string} name
   * @param {*} value
   * @return {?string} Markup string, or null if the property was invalid.
   */
  createMarkupForProperty: function (name, value) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      if (shouldIgnoreValue(propertyInfo, value)) {
        return '';
      }
      var attributeName = propertyInfo.attributeName;
      if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
        return attributeName + '=""';
      }
      return attributeName + '=' + quoteAttributeValueForBrowser(value);
    } else if (DOMProperty.isCustomAttribute(name)) {
      if (value == null) {
        return '';
      }
      return name + '=' + quoteAttributeValueForBrowser(value);
    }
    return null;
  },

  /**
   * Creates markup for a custom property.
   *
   * @param {string} name
   * @param {*} value
   * @return {string} Markup string, or empty string if the property was invalid.
   */
  createMarkupForCustomAttribute: function (name, value) {
    if (!isAttributeNameSafe(name) || value == null) {
      return '';
    }
    return name + '=' + quoteAttributeValueForBrowser(value);
  },

  /**
   * Sets the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   * @param {*} value
   */
  setValueForProperty: function (node, name, value) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod) {
        mutationMethod(node, value);
      } else if (shouldIgnoreValue(propertyInfo, value)) {
        this.deleteValueForProperty(node, name);
        return;
      } else if (propertyInfo.mustUseProperty) {
        // Contrary to `setAttribute`, object properties are properly
        // `toString`ed by IE8/9.
        node[propertyInfo.propertyName] = value;
      } else {
        var attributeName = propertyInfo.attributeName;
        var namespace = propertyInfo.attributeNamespace;
        // `setAttribute` with objects becomes only `[object]` in IE8/9,
        // ('' + value) makes it output the correct toString()-value.
        if (namespace) {
          node.setAttributeNS(namespace, attributeName, '' + value);
        } else if (propertyInfo.hasBooleanValue || propertyInfo.hasOverloadedBooleanValue && value === true) {
          node.setAttribute(attributeName, '');
        } else {
          node.setAttribute(attributeName, '' + value);
        }
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      DOMPropertyOperations.setValueForAttribute(node, name, value);
      return;
    }

    if (process.env.NODE_ENV !== 'production') {
      var payload = {};
      payload[name] = value;
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'update attribute',
        payload: payload
      });
    }
  },

  setValueForAttribute: function (node, name, value) {
    if (!isAttributeNameSafe(name)) {
      return;
    }
    if (value == null) {
      node.removeAttribute(name);
    } else {
      node.setAttribute(name, '' + value);
    }

    if (process.env.NODE_ENV !== 'production') {
      var payload = {};
      payload[name] = value;
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'update attribute',
        payload: payload
      });
    }
  },

  /**
   * Deletes an attributes from a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForAttribute: function (node, name) {
    node.removeAttribute(name);
    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'remove attribute',
        payload: name
      });
    }
  },

  /**
   * Deletes the value for a property on a node.
   *
   * @param {DOMElement} node
   * @param {string} name
   */
  deleteValueForProperty: function (node, name) {
    var propertyInfo = DOMProperty.properties.hasOwnProperty(name) ? DOMProperty.properties[name] : null;
    if (propertyInfo) {
      var mutationMethod = propertyInfo.mutationMethod;
      if (mutationMethod) {
        mutationMethod(node, undefined);
      } else if (propertyInfo.mustUseProperty) {
        var propName = propertyInfo.propertyName;
        if (propertyInfo.hasBooleanValue) {
          node[propName] = false;
        } else {
          node[propName] = '';
        }
      } else {
        node.removeAttribute(propertyInfo.attributeName);
      }
    } else if (DOMProperty.isCustomAttribute(name)) {
      node.removeAttribute(name);
    }

    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: ReactDOMComponentTree.getInstanceFromNode(node)._debugID,
        type: 'remove attribute',
        payload: name
      });
    }
  }
};

module.exports = DOMPropertyOperations;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactDOMComponentFlags = {
  hasCachedChildNodes: 1 << 0
};

module.exports = ReactDOMComponentFlags;

/***/ }),
/* 227 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(4);

var LinkedValueUtils = __webpack_require__(129);
var ReactDOMComponentTree = __webpack_require__(11);
var ReactUpdates = __webpack_require__(19);

var warning = __webpack_require__(2);

var didWarnValueLink = false;
var didWarnValueDefaultValue = false;

function updateOptionsIfPendingUpdateAndMounted() {
  if (this._rootNodeID && this._wrapperState.pendingUpdate) {
    this._wrapperState.pendingUpdate = false;

    var props = this._currentElement.props;
    var value = LinkedValueUtils.getValue(props);

    if (value != null) {
      updateOptions(this, Boolean(props.multiple), value);
    }
  }
}

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

var valuePropNames = ['value', 'defaultValue'];

/**
 * Validation function for `value` and `defaultValue`.
 * @private
 */
function checkSelectPropTypes(inst, props) {
  var owner = inst._currentElement._owner;
  LinkedValueUtils.checkPropTypes('select', props, owner);

  if (props.valueLink !== undefined && !didWarnValueLink) {
    process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `select` is deprecated; set `value` and `onChange` instead.') : void 0;
    didWarnValueLink = true;
  }

  for (var i = 0; i < valuePropNames.length; i++) {
    var propName = valuePropNames[i];
    if (props[propName] == null) {
      continue;
    }
    var isArray = Array.isArray(props[propName]);
    if (props.multiple && !isArray) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
    } else if (!props.multiple && isArray) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum(owner)) : void 0;
    }
  }
}

/**
 * @param {ReactDOMComponent} inst
 * @param {boolean} multiple
 * @param {*} propValue A stringable (with `multiple`, a list of stringables).
 * @private
 */
function updateOptions(inst, multiple, propValue) {
  var selectedValue, i;
  var options = ReactDOMComponentTree.getNodeFromInstance(inst).options;

  if (multiple) {
    selectedValue = {};
    for (i = 0; i < propValue.length; i++) {
      selectedValue['' + propValue[i]] = true;
    }
    for (i = 0; i < options.length; i++) {
      var selected = selectedValue.hasOwnProperty(options[i].value);
      if (options[i].selected !== selected) {
        options[i].selected = selected;
      }
    }
  } else {
    // Do not set `select.value` as exact behavior isn't consistent across all
    // browsers for all cases.
    selectedValue = '' + propValue;
    for (i = 0; i < options.length; i++) {
      if (options[i].value === selectedValue) {
        options[i].selected = true;
        return;
      }
    }
    if (options.length) {
      options[0].selected = true;
    }
  }
}

/**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */
var ReactDOMSelect = {
  getHostProps: function (inst, props) {
    return _assign({}, props, {
      onChange: inst._wrapperState.onChange,
      value: undefined
    });
  },

  mountWrapper: function (inst, props) {
    if (process.env.NODE_ENV !== 'production') {
      checkSelectPropTypes(inst, props);
    }

    var value = LinkedValueUtils.getValue(props);
    inst._wrapperState = {
      pendingUpdate: false,
      initialValue: value != null ? value : props.defaultValue,
      listeners: null,
      onChange: _handleChange.bind(inst),
      wasMultiple: Boolean(props.multiple)
    };

    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
      didWarnValueDefaultValue = true;
    }
  },

  getSelectValueContext: function (inst) {
    // ReactDOMOption looks at this initial value so the initial generated
    // markup has correct `selected` attributes
    return inst._wrapperState.initialValue;
  },

  postUpdateWrapper: function (inst) {
    var props = inst._currentElement.props;

    // After the initial mount, we control selected-ness manually so don't pass
    // this value down
    inst._wrapperState.initialValue = undefined;

    var wasMultiple = inst._wrapperState.wasMultiple;
    inst._wrapperState.wasMultiple = Boolean(props.multiple);

    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      inst._wrapperState.pendingUpdate = false;
      updateOptions(inst, Boolean(props.multiple), value);
    } else if (wasMultiple !== Boolean(props.multiple)) {
      // For simplicity, reapply `defaultValue` if `multiple` is toggled.
      if (props.defaultValue != null) {
        updateOptions(inst, Boolean(props.multiple), props.defaultValue);
      } else {
        // Revert the select back to its default unselected state.
        updateOptions(inst, Boolean(props.multiple), props.multiple ? [] : '');
      }
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;
  var returnValue = LinkedValueUtils.executeOnChange(props, event);

  if (this._rootNodeID) {
    this._wrapperState.pendingUpdate = true;
  }
  ReactUpdates.asap(updateOptionsIfPendingUpdateAndMounted, this);
  return returnValue;
}

module.exports = ReactDOMSelect;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var emptyComponentFactory;

var ReactEmptyComponentInjection = {
  injectEmptyComponentFactory: function (factory) {
    emptyComponentFactory = factory;
  }
};

var ReactEmptyComponent = {
  create: function (instantiate) {
    return emptyComponentFactory(instantiate);
  }
};

ReactEmptyComponent.injection = ReactEmptyComponentInjection;

module.exports = ReactEmptyComponent;

/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var ReactFeatureFlags = {
  // When true, call console.time() before and .timeEnd() after each top-level
  // render (both initial renders and updates). Useful when looking at prod-mode
  // timeline profiles in Chrome, for example.
  logTopLevelRenders: false
};

module.exports = ReactFeatureFlags;

/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(7);

var invariant = __webpack_require__(1);

var genericComponentClass = null;
var textComponentClass = null;

var ReactHostComponentInjection = {
  // This accepts a class that receives the tag string. This is a catch all
  // that can render any kind of tag.
  injectGenericComponentClass: function (componentClass) {
    genericComponentClass = componentClass;
  },
  // This accepts a text component class that takes the text string to be
  // rendered as props.
  injectTextComponentClass: function (componentClass) {
    textComponentClass = componentClass;
  }
};

/**
 * Get a host internal component class for a specific tag.
 *
 * @param {ReactElement} element The element to create.
 * @return {function} The internal class constructor function.
 */
function createInternalComponent(element) {
  !genericComponentClass ? process.env.NODE_ENV !== 'production' ? invariant(false, 'There is no registered component for the tag %s', element.type) : _prodInvariant('111', element.type) : void 0;
  return new genericComponentClass(element);
}

/**
 * @param {ReactText} text
 * @return {ReactComponent}
 */
function createInstanceForText(text) {
  return new textComponentClass(text);
}

/**
 * @param {ReactComponent} component
 * @return {boolean}
 */
function isTextComponent(component) {
  return component instanceof textComponentClass;
}

var ReactHostComponent = {
  createInternalComponent: createInternalComponent,
  createInstanceForText: createInstanceForText,
  isTextComponent: isTextComponent,
  injection: ReactHostComponentInjection
};

module.exports = ReactHostComponent;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactDOMSelection = __webpack_require__(529);

var containsNode = __webpack_require__(151);
var focusNode = __webpack_require__(60);
var getActiveElement = __webpack_require__(61);

function isInDocument(node) {
  return containsNode(document.documentElement, node);
}

/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */
var ReactInputSelection = {
  hasSelectionCapabilities: function (elem) {
    var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
    return nodeName && (nodeName === 'input' && elem.type === 'text' || nodeName === 'textarea' || elem.contentEditable === 'true');
  },

  getSelectionInformation: function () {
    var focusedElem = getActiveElement();
    return {
      focusedElem: focusedElem,
      selectionRange: ReactInputSelection.hasSelectionCapabilities(focusedElem) ? ReactInputSelection.getSelection(focusedElem) : null
    };
  },

  /**
   * @restoreSelection: If any selection information was potentially lost,
   * restore it. This is useful when performing operations that could remove dom
   * nodes and place them back in, resulting in focus being lost.
   */
  restoreSelection: function (priorSelectionInformation) {
    var curFocusedElem = getActiveElement();
    var priorFocusedElem = priorSelectionInformation.focusedElem;
    var priorSelectionRange = priorSelectionInformation.selectionRange;
    if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
      if (ReactInputSelection.hasSelectionCapabilities(priorFocusedElem)) {
        ReactInputSelection.setSelection(priorFocusedElem, priorSelectionRange);
      }
      focusNode(priorFocusedElem);
    }
  },

  /**
   * @getSelection: Gets the selection bounds of a focused textarea, input or
   * contentEditable node.
   * -@input: Look up selection bounds of this input
   * -@return {start: selectionStart, end: selectionEnd}
   */
  getSelection: function (input) {
    var selection;

    if ('selectionStart' in input) {
      // Modern browser with input or textarea.
      selection = {
        start: input.selectionStart,
        end: input.selectionEnd
      };
    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
      // IE8 input.
      var range = document.selection.createRange();
      // There can only be one selection per document in IE, so it must
      // be in our element.
      if (range.parentElement() === input) {
        selection = {
          start: -range.moveStart('character', -input.value.length),
          end: -range.moveEnd('character', -input.value.length)
        };
      }
    } else {
      // Content editable or old IE textarea.
      selection = ReactDOMSelection.getOffsets(input);
    }

    return selection || { start: 0, end: 0 };
  },

  /**
   * @setSelection: Sets the selection bounds of a textarea or input and focuses
   * the input.
   * -@input     Set selection bounds of this input or textarea
   * -@offsets   Object of same form that is returned from get*
   */
  setSelection: function (input, offsets) {
    var start = offsets.start;
    var end = offsets.end;
    if (end === undefined) {
      end = start;
    }

    if ('selectionStart' in input) {
      input.selectionStart = start;
      input.selectionEnd = Math.min(end, input.value.length);
    } else if (document.selection && input.nodeName && input.nodeName.toLowerCase() === 'input') {
      var range = input.createTextRange();
      range.collapse(true);
      range.moveStart('character', start);
      range.moveEnd('character', end - start);
      range.select();
    } else {
      ReactDOMSelection.setOffsets(input, offsets);
    }
  }
};

module.exports = ReactInputSelection;

/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(7);

var DOMLazyTree = __webpack_require__(40);
var DOMProperty = __webpack_require__(25);
var React = __webpack_require__(17);
var ReactBrowserEventEmitter = __webpack_require__(81);
var ReactCurrentOwner = __webpack_require__(13);
var ReactDOMComponentTree = __webpack_require__(11);
var ReactDOMContainerInfo = __webpack_require__(521);
var ReactDOMFeatureFlags = __webpack_require__(523);
var ReactFeatureFlags = __webpack_require__(229);
var ReactInstanceMap = __webpack_require__(55);
var ReactInstrumentation = __webpack_require__(16);
var ReactMarkupChecksum = __webpack_require__(543);
var ReactReconciler = __webpack_require__(41);
var ReactUpdateQueue = __webpack_require__(132);
var ReactUpdates = __webpack_require__(19);

var emptyObject = __webpack_require__(33);
var instantiateReactComponent = __webpack_require__(241);
var invariant = __webpack_require__(1);
var setInnerHTML = __webpack_require__(85);
var shouldUpdateReactComponent = __webpack_require__(138);
var warning = __webpack_require__(2);

var ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;
var ROOT_ATTR_NAME = DOMProperty.ROOT_ATTRIBUTE_NAME;

var ELEMENT_NODE_TYPE = 1;
var DOC_NODE_TYPE = 9;
var DOCUMENT_FRAGMENT_NODE_TYPE = 11;

var instancesByReactRootID = {};

/**
 * Finds the index of the first character
 * that's not common between the two given strings.
 *
 * @return {number} the index of the character where the strings diverge
 */
function firstDifferenceIndex(string1, string2) {
  var minLen = Math.min(string1.length, string2.length);
  for (var i = 0; i < minLen; i++) {
    if (string1.charAt(i) !== string2.charAt(i)) {
      return i;
    }
  }
  return string1.length === string2.length ? -1 : minLen;
}

/**
 * @param {DOMElement|DOMDocument} container DOM element that may contain
 * a React component
 * @return {?*} DOM element that may have the reactRoot ID, or null.
 */
function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

function internalGetID(node) {
  // If node is something like a window, document, or text node, none of
  // which support attributes or a .getAttribute method, gracefully return
  // the empty string, as if the attribute were missing.
  return node.getAttribute && node.getAttribute(ATTR_NAME) || '';
}

/**
 * Mounts this component and inserts it into the DOM.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {ReactReconcileTransaction} transaction
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function mountComponentIntoNode(wrapperInstance, container, transaction, shouldReuseMarkup, context) {
  var markerName;
  if (ReactFeatureFlags.logTopLevelRenders) {
    var wrappedElement = wrapperInstance._currentElement.props.child;
    var type = wrappedElement.type;
    markerName = 'React mount: ' + (typeof type === 'string' ? type : type.displayName || type.name);
    console.time(markerName);
  }

  var markup = ReactReconciler.mountComponent(wrapperInstance, transaction, null, ReactDOMContainerInfo(wrapperInstance, container), context, 0 /* parentDebugID */
  );

  if (markerName) {
    console.timeEnd(markerName);
  }

  wrapperInstance._renderedComponent._topLevelWrapper = wrapperInstance;
  ReactMount._mountImageIntoNode(markup, container, wrapperInstance, shouldReuseMarkup, transaction);
}

/**
 * Batched mount.
 *
 * @param {ReactComponent} componentInstance The instance to mount.
 * @param {DOMElement} container DOM element to mount into.
 * @param {boolean} shouldReuseMarkup If true, do not insert markup
 */
function batchedMountComponentIntoNode(componentInstance, container, shouldReuseMarkup, context) {
  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(
  /* useCreateElement */
  !shouldReuseMarkup && ReactDOMFeatureFlags.useCreateElement);
  transaction.perform(mountComponentIntoNode, null, componentInstance, container, transaction, shouldReuseMarkup, context);
  ReactUpdates.ReactReconcileTransaction.release(transaction);
}

/**
 * Unmounts a component and removes it from the DOM.
 *
 * @param {ReactComponent} instance React component instance.
 * @param {DOMElement} container DOM element to unmount from.
 * @final
 * @internal
 * @see {ReactMount.unmountComponentAtNode}
 */
function unmountComponentFromNode(instance, container, safely) {
  if (process.env.NODE_ENV !== 'production') {
    ReactInstrumentation.debugTool.onBeginFlush();
  }
  ReactReconciler.unmountComponent(instance, safely);
  if (process.env.NODE_ENV !== 'production') {
    ReactInstrumentation.debugTool.onEndFlush();
  }

  if (container.nodeType === DOC_NODE_TYPE) {
    container = container.documentElement;
  }

  // http://jsperf.com/emptying-a-node
  while (container.lastChild) {
    container.removeChild(container.lastChild);
  }
}

/**
 * True if the supplied DOM node has a direct React-rendered child that is
 * not a React root element. Useful for warning in `render`,
 * `unmountComponentAtNode`, etc.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM element contains a direct child that was
 * rendered by React but is not a root element.
 * @internal
 */
function hasNonRootReactChild(container) {
  var rootEl = getReactRootElementInContainer(container);
  if (rootEl) {
    var inst = ReactDOMComponentTree.getInstanceFromNode(rootEl);
    return !!(inst && inst._hostParent);
  }
}

/**
 * True if the supplied DOM node is a React DOM element and
 * it has been rendered by another copy of React.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM has been rendered by another copy of React
 * @internal
 */
function nodeIsRenderedByOtherInstance(container) {
  var rootEl = getReactRootElementInContainer(container);
  return !!(rootEl && isReactNode(rootEl) && !ReactDOMComponentTree.getInstanceFromNode(rootEl));
}

/**
 * True if the supplied DOM node is a valid node element.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM is a valid DOM node.
 * @internal
 */
function isValidContainer(node) {
  return !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));
}

/**
 * True if the supplied DOM node is a valid React node element.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM is a valid React DOM node.
 * @internal
 */
function isReactNode(node) {
  return isValidContainer(node) && (node.hasAttribute(ROOT_ATTR_NAME) || node.hasAttribute(ATTR_NAME));
}

function getHostRootInstanceInContainer(container) {
  var rootEl = getReactRootElementInContainer(container);
  var prevHostInstance = rootEl && ReactDOMComponentTree.getInstanceFromNode(rootEl);
  return prevHostInstance && !prevHostInstance._hostParent ? prevHostInstance : null;
}

function getTopLevelWrapperInContainer(container) {
  var root = getHostRootInstanceInContainer(container);
  return root ? root._hostContainerInfo._topLevelWrapper : null;
}

/**
 * Temporary (?) hack so that we can store all top-level pending updates on
 * composites instead of having to worry about different types of components
 * here.
 */
var topLevelRootCounter = 1;
var TopLevelWrapper = function () {
  this.rootID = topLevelRootCounter++;
};
TopLevelWrapper.prototype.isReactComponent = {};
if (process.env.NODE_ENV !== 'production') {
  TopLevelWrapper.displayName = 'TopLevelWrapper';
}
TopLevelWrapper.prototype.render = function () {
  return this.props.child;
};
TopLevelWrapper.isReactTopLevelWrapper = true;

/**
 * Mounting is the process of initializing a React component by creating its
 * representative DOM elements and inserting them into a supplied `container`.
 * Any prior content inside `container` is destroyed in the process.
 *
 *   ReactMount.render(
 *     component,
 *     document.getElementById('container')
 *   );
 *
 *   <div id="container">                   <-- Supplied `container`.
 *     <div data-reactid=".3">              <-- Rendered reactRoot of React
 *       // ...                                 component.
 *     </div>
 *   </div>
 *
 * Inside of `container`, the first element rendered is the "reactRoot".
 */
var ReactMount = {
  TopLevelWrapper: TopLevelWrapper,

  /**
   * Used by devtools. The keys are not important.
   */
  _instancesByReactRootID: instancesByReactRootID,

  /**
   * This is a hook provided to support rendering React components while
   * ensuring that the apparent scroll position of its `container` does not
   * change.
   *
   * @param {DOMElement} container The `container` being rendered into.
   * @param {function} renderCallback This must be called once to do the render.
   */
  scrollMonitor: function (container, renderCallback) {
    renderCallback();
  },

  /**
   * Take a component that's already mounted into the DOM and replace its props
   * @param {ReactComponent} prevComponent component instance already in the DOM
   * @param {ReactElement} nextElement component instance to render
   * @param {DOMElement} container container to render into
   * @param {?function} callback function triggered on completion
   */
  _updateRootComponent: function (prevComponent, nextElement, nextContext, container, callback) {
    ReactMount.scrollMonitor(container, function () {
      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement, nextContext);
      if (callback) {
        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);
      }
    });

    return prevComponent;
  },

  /**
   * Render a new component into the DOM. Hooked by hooks!
   *
   * @param {ReactElement} nextElement element to render
   * @param {DOMElement} container container to render into
   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion
   * @return {ReactComponent} nextComponent
   */
  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case.
    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : _prodInvariant('37') : void 0;

    ReactBrowserEventEmitter.ensureScrollValueMonitoring();
    var componentInstance = instantiateReactComponent(nextElement, false);

    // The initial render is synchronous but any updates that happen during
    // rendering, in componentWillMount or componentDidMount, will be batched
    // according to the current batching strategy.

    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, container, shouldReuseMarkup, context);

    var wrapperID = componentInstance._instance.rootID;
    instancesByReactRootID[wrapperID] = componentInstance;

    return componentInstance;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
    !(parentComponent != null && ReactInstanceMap.has(parentComponent)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : _prodInvariant('38') : void 0;
    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);
  },

  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {
    ReactUpdateQueue.validateCallback(callback, 'ReactDOM.render');
    !React.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? " Instead of passing a string like 'div', pass " + "React.createElement('div') or <div />." : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : // Check if it quacks like an element
    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : _prodInvariant('39', typeof nextElement === 'string' ? " Instead of passing a string like 'div', pass " + "React.createElement('div') or <div />." : typeof nextElement === 'function' ? ' Instead of passing a class like Foo, pass ' + 'React.createElement(Foo) or <Foo />.' : nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : void 0;

    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;

    var nextWrappedElement = React.createElement(TopLevelWrapper, {
      child: nextElement
    });

    var nextContext;
    if (parentComponent) {
      var parentInst = ReactInstanceMap.get(parentComponent);
      nextContext = parentInst._processChildContext(parentInst._context);
    } else {
      nextContext = emptyObject;
    }

    var prevComponent = getTopLevelWrapperInContainer(container);

    if (prevComponent) {
      var prevWrappedElement = prevComponent._currentElement;
      var prevElement = prevWrappedElement.props.child;
      if (shouldUpdateReactComponent(prevElement, nextElement)) {
        var publicInst = prevComponent._renderedComponent.getPublicInstance();
        var updatedCallback = callback && function () {
          callback.call(publicInst);
        };
        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, nextContext, container, updatedCallback);
        return publicInst;
      } else {
        ReactMount.unmountComponentAtNode(container);
      }
    }

    var reactRootElement = getReactRootElementInContainer(container);
    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);
    var containerHasNonRootReactChild = hasNonRootReactChild(container);

    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

      if (!containerHasReactMarkup || reactRootElement.nextSibling) {
        var rootElementSibling = reactRootElement;
        while (rootElementSibling) {
          if (internalGetID(rootElementSibling)) {
            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : void 0;
            break;
          }
          rootElementSibling = rootElementSibling.nextSibling;
        }
      }
    }

    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;
    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, nextContext)._renderedComponent.getPublicInstance();
    if (callback) {
      callback.call(component);
    }
    return component;
  },

  /**
   * Renders a React component into the DOM in the supplied `container`.
   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.render
   *
   * If the React component was previously rendered into `container`, this will
   * perform an update on it and only mutate the DOM as necessary to reflect the
   * latest React component.
   *
   * @param {ReactElement} nextElement Component element to render.
   * @param {DOMElement} container DOM element to render into.
   * @param {?function} callback function triggered on completion
   * @return {ReactComponent} Component instance rendered in `container`.
   */
  render: function (nextElement, container, callback) {
    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);
  },

  /**
   * Unmounts and destroys the React component rendered in the `container`.
   * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.unmountcomponentatnode
   *
   * @param {DOMElement} container DOM element containing a React component.
   * @return {boolean} True if a component was found in and unmounted from
   *                   `container`
   */
  unmountComponentAtNode: function (container) {
    // Various parts of our code (such as ReactCompositeComponent's
    // _renderValidatedComponent) assume that calls to render aren't nested;
    // verify that that's the case. (Strictly speaking, unmounting won't cause a
    // render but we still don't expect to be in a render call here.)
    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : void 0;

    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : _prodInvariant('40') : void 0;

    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(!nodeIsRenderedByOtherInstance(container), "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.') : void 0;
    }

    var prevComponent = getTopLevelWrapperInContainer(container);
    if (!prevComponent) {
      // Check if the node being unmounted was rendered by React, but isn't a
      // root node.
      var containerHasNonRootReactChild = hasNonRootReactChild(container);

      // Check if the container itself is a React root node.
      var isContainerReactRoot = container.nodeType === 1 && container.hasAttribute(ROOT_ATTR_NAME);

      if (process.env.NODE_ENV !== 'production') {
        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
      }

      return false;
    }
    delete instancesByReactRootID[prevComponent._instance.rootID];
    ReactUpdates.batchedUpdates(unmountComponentFromNode, prevComponent, container, false);
    return true;
  },

  _mountImageIntoNode: function (markup, container, instance, shouldReuseMarkup, transaction) {
    !isValidContainer(container) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : _prodInvariant('41') : void 0;

    if (shouldReuseMarkup) {
      var rootElement = getReactRootElementInContainer(container);
      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {
        ReactDOMComponentTree.precacheNode(instance, rootElement);
        return;
      } else {
        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);

        var rootMarkup = rootElement.outerHTML;
        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);

        var normalizedMarkup = markup;
        if (process.env.NODE_ENV !== 'production') {
          // because rootMarkup is retrieved from the DOM, various normalizations
          // will have occurred which will not be present in `markup`. Here,
          // insert markup into a <div> or <iframe> depending on the container
          // type to perform the same normalizations before comparing.
          var normalizer;
          if (container.nodeType === ELEMENT_NODE_TYPE) {
            normalizer = document.createElement('div');
            normalizer.innerHTML = markup;
            normalizedMarkup = normalizer.innerHTML;
          } else {
            normalizer = document.createElement('iframe');
            document.body.appendChild(normalizer);
            normalizer.contentDocument.write(markup);
            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;
            document.body.removeChild(normalizer);
          }
        }

        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);
        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);

        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document using server rendering but the checksum was invalid. This usually means you rendered a different component type or props on the client from the one on the server, or your render() methods are impure. React cannot handle this case due to cross-browser quirks by rendering at the document root. You should look for environment dependent code in your components and ensure the props are the same client and server side:\n%s', difference) : _prodInvariant('42', difference) : void 0;

        if (process.env.NODE_ENV !== 'production') {
          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\n%s', difference) : void 0;
        }
      }
    }

    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\'re trying to render a component to the document but you didn\'t use server rendering. We can\'t do this without using server rendering due to cross-browser quirks. See ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('43') : void 0;

    if (transaction.useCreateElement) {
      while (container.lastChild) {
        container.removeChild(container.lastChild);
      }
      DOMLazyTree.insertTreeBefore(container, markup, null);
    } else {
      setInnerHTML(container, markup);
      ReactDOMComponentTree.precacheNode(instance, container.firstChild);
    }

    if (process.env.NODE_ENV !== 'production') {
      var hostNode = ReactDOMComponentTree.getInstanceFromNode(container.firstChild);
      if (hostNode._debugID !== 0) {
        ReactInstrumentation.debugTool.onHostOperation({
          instanceID: hostNode._debugID,
          type: 'mount',
          payload: markup.toString()
        });
      }
    }
  }
};

module.exports = ReactMount;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(7);

var React = __webpack_require__(17);

var invariant = __webpack_require__(1);

var ReactNodeTypes = {
  HOST: 0,
  COMPOSITE: 1,
  EMPTY: 2,

  getType: function (node) {
    if (node === null || node === false) {
      return ReactNodeTypes.EMPTY;
    } else if (React.isValidElement(node)) {
      if (typeof node.type === 'function') {
        return ReactNodeTypes.COMPOSITE;
      } else {
        return ReactNodeTypes.HOST;
      }
    }
     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Unexpected node: %s', node) : _prodInvariant('26', node) : void 0;
  }
};

module.exports = ReactNodeTypes;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;

/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ViewportMetrics = {
  currentScrollLeft: 0,

  currentScrollTop: 0,

  refreshScrollValues: function (scrollPosition) {
    ViewportMetrics.currentScrollLeft = scrollPosition.x;
    ViewportMetrics.currentScrollTop = scrollPosition.y;
  }
};

module.exports = ViewportMetrics;

/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(7);

var invariant = __webpack_require__(1);

/**
 * Accumulates items that must not be null or undefined into the first one. This
 * is used to conserve memory by avoiding array allocations, and thus sacrifices
 * API cleanness. Since `current` can be null before being passed in and not
 * null after this function, make sure to assign it back to `current`:
 *
 * `a = accumulateInto(a, b);`
 *
 * This API should be sparingly used. Try `accumulate` for something cleaner.
 *
 * @return {*|array<*>} An accumulation of items.
 */

function accumulateInto(current, next) {
  !(next != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : _prodInvariant('30') : void 0;

  if (current == null) {
    return next;
  }

  // Both are not empty. Warning: Never call x.concat(y) when you are not
  // certain that x is an Array (x could be a string with concat method).
  if (Array.isArray(current)) {
    if (Array.isArray(next)) {
      current.push.apply(current, next);
      return current;
    }
    current.push(next);
    return current;
  }

  if (Array.isArray(next)) {
    // A bit too dangerous to mutate `next`.
    return [current].concat(next);
  }

  return [current, next];
}

module.exports = accumulateInto;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



/**
 * @param {array} arr an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 */

function forEachAccumulated(arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
}

module.exports = forEachAccumulated;

/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactNodeTypes = __webpack_require__(233);

function getHostComponentFromComposite(inst) {
  var type;

  while ((type = inst._renderedNodeType) === ReactNodeTypes.COMPOSITE) {
    inst = inst._renderedComponent;
  }

  if (type === ReactNodeTypes.HOST) {
    return inst._renderedComponent;
  } else if (type === ReactNodeTypes.EMPTY) {
    return null;
  }
}

module.exports = getHostComponentFromComposite;

/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ExecutionEnvironment = __webpack_require__(5);

var contentKey = null;

/**
 * Gets the key used to access text content on a DOM node.
 *
 * @return {?string} Key used to access text content.
 * @internal
 */
function getTextContentAccessor() {
  if (!contentKey && ExecutionEnvironment.canUseDOM) {
    // Prefer textContent to innerText because many browsers support both but
    // SVG <text> elements don't support innerText even when <div> does.
    contentKey = 'textContent' in document.documentElement ? 'textContent' : 'innerText';
  }
  return contentKey;
}

module.exports = getTextContentAccessor;

/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactDOMComponentTree = __webpack_require__(11);

function isCheckable(elem) {
  var type = elem.type;
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
}

function getTracker(inst) {
  return inst._wrapperState.valueTracker;
}

function attachTracker(inst, tracker) {
  inst._wrapperState.valueTracker = tracker;
}

function detachTracker(inst) {
  delete inst._wrapperState.valueTracker;
}

function getValueFromNode(node) {
  var value;
  if (node) {
    value = isCheckable(node) ? '' + node.checked : node.value;
  }
  return value;
}

var inputValueTracking = {
  // exposed for testing
  _getTrackerFromNode: function (node) {
    return getTracker(ReactDOMComponentTree.getInstanceFromNode(node));
  },


  track: function (inst) {
    if (getTracker(inst)) {
      return;
    }

    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var valueField = isCheckable(node) ? 'checked' : 'value';
    var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);

    var currentValue = '' + node[valueField];

    // if someone has already defined a value or Safari, then bail
    // and don't track value will cause over reporting of changes,
    // but it's better then a hard failure
    // (needed for certain tests that spyOn input values and Safari)
    if (node.hasOwnProperty(valueField) || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
      return;
    }

    Object.defineProperty(node, valueField, {
      enumerable: descriptor.enumerable,
      configurable: true,
      get: function () {
        return descriptor.get.call(this);
      },
      set: function (value) {
        currentValue = '' + value;
        descriptor.set.call(this, value);
      }
    });

    attachTracker(inst, {
      getValue: function () {
        return currentValue;
      },
      setValue: function (value) {
        currentValue = '' + value;
      },
      stopTracking: function () {
        detachTracker(inst);
        delete node[valueField];
      }
    });
  },

  updateValueIfChanged: function (inst) {
    if (!inst) {
      return false;
    }
    var tracker = getTracker(inst);

    if (!tracker) {
      inputValueTracking.track(inst);
      return true;
    }

    var lastValue = tracker.getValue();
    var nextValue = getValueFromNode(ReactDOMComponentTree.getNodeFromInstance(inst));

    if (nextValue !== lastValue) {
      tracker.setValue(nextValue);
      return true;
    }

    return false;
  },
  stopTracking: function (inst) {
    var tracker = getTracker(inst);
    if (tracker) {
      tracker.stopTracking();
    }
  }
};

module.exports = inputValueTracking;

/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(7),
    _assign = __webpack_require__(4);

var ReactCompositeComponent = __webpack_require__(518);
var ReactEmptyComponent = __webpack_require__(228);
var ReactHostComponent = __webpack_require__(230);

var getNextDebugID = __webpack_require__(250);
var invariant = __webpack_require__(1);
var warning = __webpack_require__(2);

// To avoid a cyclic dependency, we create the final class in this module
var ReactCompositeComponentWrapper = function (element) {
  this.construct(element);
};

function getDeclarationErrorAddendum(owner) {
  if (owner) {
    var name = owner.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

/**
 * Check if the type reference is a known internal type. I.e. not a user
 * provided composite type.
 *
 * @param {function} type
 * @return {boolean} Returns true if this is a valid internal type.
 */
function isInternalComponentType(type) {
  return typeof type === 'function' && typeof type.prototype !== 'undefined' && typeof type.prototype.mountComponent === 'function' && typeof type.prototype.receiveComponent === 'function';
}

/**
 * Given a ReactNode, create an instance that will actually be mounted.
 *
 * @param {ReactNode} node
 * @param {boolean} shouldHaveDebugID
 * @return {object} A new instance of the element's constructor.
 * @protected
 */
function instantiateReactComponent(node, shouldHaveDebugID) {
  var instance;

  if (node === null || node === false) {
    instance = ReactEmptyComponent.create(instantiateReactComponent);
  } else if (typeof node === 'object') {
    var element = node;
    var type = element.type;
    if (typeof type !== 'function' && typeof type !== 'string') {
      var info = '';
      if (process.env.NODE_ENV !== 'production') {
        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
          info += ' You likely forgot to export your component from the file ' + "it's defined in.";
        }
      }
      info += getDeclarationErrorAddendum(element._owner);
       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info) : _prodInvariant('130', type == null ? type : typeof type, info) : void 0;
    }

    // Special case string values
    if (typeof element.type === 'string') {
      instance = ReactHostComponent.createInternalComponent(element);
    } else if (isInternalComponentType(element.type)) {
      // This is temporarily available for custom components that are not string
      // representations. I.e. ART. Once those are updated to use the string
      // representation, we can drop this code path.
      instance = new element.type(element);

      // We renamed this. Allow the old name for compat. :(
      if (!instance.getHostNode) {
        instance.getHostNode = instance.getNativeNode;
      }
    } else {
      instance = new ReactCompositeComponentWrapper(element);
    }
  } else if (typeof node === 'string' || typeof node === 'number') {
    instance = ReactHostComponent.createInstanceForText(node);
  } else {
     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Encountered invalid React node of type %s', typeof node) : _prodInvariant('131', typeof node) : void 0;
  }

  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(typeof instance.mountComponent === 'function' && typeof instance.receiveComponent === 'function' && typeof instance.getHostNode === 'function' && typeof instance.unmountComponent === 'function', 'Only React Components can be mounted.') : void 0;
  }

  // These two fields are used by the DOM and ART diffing algorithms
  // respectively. Instead of using expandos on components, we should be
  // storing the state needed by the diffing algorithms elsewhere.
  instance._mountIndex = 0;
  instance._mountImage = null;

  if (process.env.NODE_ENV !== 'production') {
    instance._debugID = shouldHaveDebugID ? getNextDebugID() : 0;
  }

  // Internal instances should fully constructed at this point, so they should
  // not get any new fields added to them at this point.
  if (process.env.NODE_ENV !== 'production') {
    if (Object.preventExtensions) {
      Object.preventExtensions(instance);
    }
  }

  return instance;
}

_assign(ReactCompositeComponentWrapper.prototype, ReactCompositeComponent, {
  _instantiateReactComponent: instantiateReactComponent
});

module.exports = instantiateReactComponent;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */

var supportedInputTypes = {
  color: true,
  date: true,
  datetime: true,
  'datetime-local': true,
  email: true,
  month: true,
  number: true,
  password: true,
  range: true,
  search: true,
  tel: true,
  text: true,
  time: true,
  url: true,
  week: true
};

function isTextInputElement(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

  if (nodeName === 'input') {
    return !!supportedInputTypes[elem.type];
  }

  if (nodeName === 'textarea') {
    return true;
  }

  return false;
}

module.exports = isTextInputElement;

/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ExecutionEnvironment = __webpack_require__(5);
var escapeTextContentForBrowser = __webpack_require__(84);
var setInnerHTML = __webpack_require__(85);

/**
 * Set the textContent property of a node, ensuring that whitespace is preserved
 * even in IE8. innerText is a poor substitute for textContent and, among many
 * issues, inserts <br> instead of the literal newline chars. innerHTML behaves
 * as it should.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */
var setTextContent = function (node, text) {
  if (text) {
    var firstChild = node.firstChild;

    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {
      firstChild.nodeValue = text;
      return;
    }
  }
  node.textContent = text;
};

if (ExecutionEnvironment.canUseDOM) {
  if (!('textContent' in document.documentElement)) {
    setTextContent = function (node, text) {
      if (node.nodeType === 3) {
        node.nodeValue = text;
        return;
      }
      setInnerHTML(node, escapeTextContentForBrowser(text));
    };
  }
}

module.exports = setTextContent;

/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(7);

var ReactCurrentOwner = __webpack_require__(13);
var REACT_ELEMENT_TYPE = __webpack_require__(537);

var getIteratorFn = __webpack_require__(571);
var invariant = __webpack_require__(1);
var KeyEscapeUtils = __webpack_require__(128);
var warning = __webpack_require__(2);

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * This is inlined from ReactElement since this file is shared between
 * isomorphic and renderers. We could extract this to a
 *
 */

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (component && typeof component === 'object' && component.key != null) {
    // Explicit key
    return KeyEscapeUtils.escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' ||
  // The following is inlined from ReactElement. This means we can optimize
  // some checks. React Fiber also inlines this logic for similar purposes.
  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = nextNamePrefix + getComponentKey(child, ii++);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        if (process.env.NODE_ENV !== 'production') {
          var mapsAsChildrenAddendum = '';
          if (ReactCurrentOwner.current) {
            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
            if (mapsAsChildrenOwnerName) {
              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
            }
          }
          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
          didWarnAboutMaps = true;
        }
        // Iterator will provide entry [k,v] tuples rather than values.
        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        }
      }
    } else if (type === 'object') {
      var addendum = '';
      if (process.env.NODE_ENV !== 'production') {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
        if (children._isReactElement) {
          addendum = " It looks like you're using an element created by a different " + 'version of React. Make sure to use only one copy of React.';
        }
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += ' Check the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = String(children);
       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(42),
    _assign = __webpack_require__(4);

var ReactNoopUpdateQueue = __webpack_require__(248);

var canDefineProperty = __webpack_require__(86);
var emptyObject = __webpack_require__(33);
var invariant = __webpack_require__(1);
var lowPriorityWarning = __webpack_require__(140);

/**
 * Base class helpers for the updating state of a component.
 */
function ReactComponent(props, context, updater) {
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

ReactComponent.prototype.isReactComponent = {};

/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */
ReactComponent.prototype.setState = function (partialState, callback) {
  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : _prodInvariant('85') : void 0;
  this.updater.enqueueSetState(this, partialState);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'setState');
  }
};

/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */
ReactComponent.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this);
  if (callback) {
    this.updater.enqueueCallback(this, callback, 'forceUpdate');
  }
};

/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */
if (process.env.NODE_ENV !== 'production') {
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };
  var defineDeprecationWarning = function (methodName, info) {
    if (canDefineProperty) {
      Object.defineProperty(ReactComponent.prototype, methodName, {
        get: function () {
          lowPriorityWarning(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
          return undefined;
        }
      });
    }
  };
  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

/**
 * Base class helpers for the updating state of a component.
 */
function ReactPureComponent(props, context, updater) {
  // Duplicated from ReactComponent.
  this.props = props;
  this.context = context;
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

function ComponentDummy() {}
ComponentDummy.prototype = ReactComponent.prototype;
ReactPureComponent.prototype = new ComponentDummy();
ReactPureComponent.prototype.constructor = ReactPureComponent;
// Avoid an extra prototype jump for these methods.
_assign(ReactPureComponent.prototype, ReactComponent.prototype);
ReactPureComponent.prototype.isPureReactComponent = true;

module.exports = {
  Component: ReactComponent,
  PureComponent: ReactPureComponent
};
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



// The Symbol used to tag the ReactElement type. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.

var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

module.exports = REACT_ELEMENT_TYPE;

/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/**
 * ReactElementValidator provides a wrapper around a element factory
 * which validates the props passed to the element. This is intended to be
 * used only in DEV and could be replaced by a static type checker for languages
 * that support it.
 */



var ReactCurrentOwner = __webpack_require__(13);
var ReactComponentTreeHook = __webpack_require__(8);
var ReactElement = __webpack_require__(31);

var checkReactTypeSpec = __webpack_require__(584);

var canDefineProperty = __webpack_require__(86);
var getIteratorFn = __webpack_require__(249);
var warning = __webpack_require__(2);
var lowPriorityWarning = __webpack_require__(140);

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = ReactCurrentOwner.current.getName();
    if (name) {
      return ' Check the render method of `' + name + '`.';
    }
  }
  return '';
}

function getSourceInfoErrorAddendum(elementProps) {
  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
    var source = elementProps.__source;
    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
    var lineNumber = source.lineNumber;
    return ' Check your code at ' + fileName + ':' + lineNumber + '.';
  }
  return '';
}

/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */
var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
    if (parentName) {
      info = ' Check the top-level render call using <' + parentName + '>.';
    }
  }
  return info;
}

/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */
function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }
  element._store.validated = true;

  var memoizer = ownerHasKeyUseWarning.uniqueKey || (ownerHasKeyUseWarning.uniqueKey = {});

  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
  if (memoizer[currentComponentErrorInfo]) {
    return;
  }
  memoizer[currentComponentErrorInfo] = true;

  // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.
  var childOwner = '';
  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = ' It was passed a child from ' + element._owner.getName() + '.';
  }

  process.env.NODE_ENV !== 'production' ? warning(false, 'Each child in an array or iterator should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.%s', currentComponentErrorInfo, childOwner, ReactComponentTreeHook.getCurrentStackAddendum(element)) : void 0;
}

/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */
function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }
  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];
      if (ReactElement.isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (ReactElement.isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);
    // Entry iterators provide implicit keys.
    if (iteratorFn) {
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step;
        while (!(step = iterator.next()).done) {
          if (ReactElement.isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}

/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */
function validatePropTypes(element) {
  var componentClass = element.type;
  if (typeof componentClass !== 'function') {
    return;
  }
  var name = componentClass.displayName || componentClass.name;
  if (componentClass.propTypes) {
    checkReactTypeSpec(componentClass.propTypes, element.props, 'prop', name, element, null);
  }
  if (typeof componentClass.getDefaultProps === 'function') {
    process.env.NODE_ENV !== 'production' ? warning(componentClass.getDefaultProps.isReactClassApproved, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
  }
}

var ReactElementValidator = {
  createElement: function (type, props, children) {
    var validType = typeof type === 'string' || typeof type === 'function';
    // We warn in this case but don't throw. We expect the element creation to
    // succeed and there will likely be errors in render.
    if (!validType) {
      if (typeof type !== 'function' && typeof type !== 'string') {
        var info = '';
        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
          info += ' You likely forgot to export your component from the file ' + "it's defined in.";
        }

        var sourceInfo = getSourceInfoErrorAddendum(props);
        if (sourceInfo) {
          info += sourceInfo;
        } else {
          info += getDeclarationErrorAddendum();
        }

        info += ReactComponentTreeHook.getCurrentStackAddendum();

        var currentSource = props !== null && props !== undefined && props.__source !== undefined ? props.__source : null;
        ReactComponentTreeHook.pushNonStandardWarningStack(true, currentSource);
        process.env.NODE_ENV !== 'production' ? warning(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', type == null ? type : typeof type, info) : void 0;
        ReactComponentTreeHook.popNonStandardWarningStack();
      }
    }

    var element = ReactElement.createElement.apply(this, arguments);

    // The result can be nullish if a mock or a custom function is used.
    // TODO: Drop this when these are no longer allowed as the type argument.
    if (element == null) {
      return element;
    }

    // Skip key warning if the type isn't valid since our key validation logic
    // doesn't expect a non-string/function type and can throw confusing errors.
    // We don't want exception behavior to differ between dev and prod.
    // (Rendering will throw with a helpful message and as soon as the type is
    // fixed, the key warnings will appear.)
    if (validType) {
      for (var i = 2; i < arguments.length; i++) {
        validateChildKeys(arguments[i], type);
      }
    }

    validatePropTypes(element);

    return element;
  },

  createFactory: function (type) {
    var validatedFactory = ReactElementValidator.createElement.bind(null, type);
    // Legacy hook TODO: Warn if this is accessed
    validatedFactory.type = type;

    if (process.env.NODE_ENV !== 'production') {
      if (canDefineProperty) {
        Object.defineProperty(validatedFactory, 'type', {
          enumerable: false,
          get: function () {
            lowPriorityWarning(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
            Object.defineProperty(this, 'type', {
              value: type
            });
            return type;
          }
        });
      }
    }

    return validatedFactory;
  },

  cloneElement: function (element, props, children) {
    var newElement = ReactElement.cloneElement.apply(this, arguments);
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], newElement.type);
    }
    validatePropTypes(newElement);
    return newElement;
  }
};

module.exports = ReactElementValidator;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var warning = __webpack_require__(2);

function warnNoop(publicInstance, callerName) {
  if (process.env.NODE_ENV !== 'production') {
    var constructor = publicInstance.constructor;
    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounted or mounting component. ' + 'This usually means you called %s() on an unmounted component. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
  }
}

/**
 * This is the abstract API for an update queue.
 */
var ReactNoopUpdateQueue = {
  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */
  enqueueCallback: function (publicInstance, callback) {},

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState) {
    warnNoop(publicInstance, 'setState');
  }
};

module.exports = ReactNoopUpdateQueue;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



/* global Symbol */

var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

/**
 * Returns the iterator method function contained on the iterable object.
 *
 * Be sure to invoke the function with the iterable as context:
 *
 *     var iteratorFn = getIteratorFn(myIterable);
 *     if (iteratorFn) {
 *       var iterator = iteratorFn.call(myIterable);
 *       ...
 *     }
 *
 * @param {?object} maybeIterable
 * @return {?function}
 */
function getIteratorFn(maybeIterable) {
  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

module.exports = getIteratorFn;

/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var nextDebugID = 1;

function getNextDebugID() {
  return nextDebugID++;
}

module.exports = getNextDebugID;

/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var randomByte = __webpack_require__(594);

function encode(lookup, number) {
    var loopCounter = 0;
    var done;

    var str = '';

    while (!done) {
        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByte() );
        done = number < (Math.pow(16, loopCounter + 1 ) );
        loopCounter++;
    }
    return str;
}

module.exports = encode;


/***/ }),
/* 252 */,
/* 253 */,
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var onix_core_1 = __webpack_require__(21);
var intlInitialized = false;
function registerStrings() {
    if (!intlInitialized) {
        onix_core_1.Intl.registerStrings('chess-ctrls', {
            'ru-ru': {
                set_board: "Установить позицию",
                position_label: "-- Позиция --",
                std_fen: "Стартовая позиция",
                empty_fen: "Пустая доска",
                get_fen: "Загрузить FEN",
                paste_fen_prompt: "Скопируйте сюда собственный FEN",
                popular_opening: "Популярные дебюты",
            },
            'en-us': {
                set_board: "Set the board",
                position_label: "-- Position --",
                std_fen: "Standart start",
                empty_fen: "Empty board",
                get_fen: "Custom position",
                paste_fen_prompt: "Paste FEN position",
                popular_opening: "Popular openings"
            }
        });
        intlInitialized = true;
    }
}
exports.registerStrings = registerStrings;


/***/ }),
/* 255 */,
/* 256 */,
/* 257 */,
/* 258 */,
/* 259 */,
/* 260 */,
/* 261 */,
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(4);

var emptyObject = __webpack_require__(33);
var _invariant = __webpack_require__(1);

if (process.env.NODE_ENV !== 'production') {
  var warning = __webpack_require__(2);
}

var MIXINS_KEY = 'mixins';

// Helper function to allow the creation of anonymous functions which do not
// have .name set to the name of the variable being assigned to.
function identity(fn) {
  return fn;
}

var ReactPropTypeLocationNames;
if (process.env.NODE_ENV !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
} else {
  ReactPropTypeLocationNames = {};
}

function factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {
  /**
   * Policies that describe methods in `ReactClassInterface`.
   */

  var injectedMixins = [];

  /**
   * Composite components are higher-level components that compose other composite
   * or host components.
   *
   * To create a new type of `ReactClass`, pass a specification of
   * your new class to `React.createClass`. The only requirement of your class
   * specification is that you implement a `render` method.
   *
   *   var MyComponent = React.createClass({
   *     render: function() {
   *       return <div>Hello World</div>;
   *     }
   *   });
   *
   * The class specification supports a specific protocol of methods that have
   * special meaning (e.g. `render`). See `ReactClassInterface` for
   * more the comprehensive protocol. Any other properties and methods in the
   * class specification will be available on the prototype.
   *
   * @interface ReactClassInterface
   * @internal
   */
  var ReactClassInterface = {
    /**
     * An array of Mixin objects to include when defining your component.
     *
     * @type {array}
     * @optional
     */
    mixins: 'DEFINE_MANY',

    /**
     * An object containing properties and methods that should be defined on
     * the component's constructor instead of its prototype (static methods).
     *
     * @type {object}
     * @optional
     */
    statics: 'DEFINE_MANY',

    /**
     * Definition of prop types for this component.
     *
     * @type {object}
     * @optional
     */
    propTypes: 'DEFINE_MANY',

    /**
     * Definition of context types for this component.
     *
     * @type {object}
     * @optional
     */
    contextTypes: 'DEFINE_MANY',

    /**
     * Definition of context types this component sets for its children.
     *
     * @type {object}
     * @optional
     */
    childContextTypes: 'DEFINE_MANY',

    // ==== Definition methods ====

    /**
     * Invoked when the component is mounted. Values in the mapping will be set on
     * `this.props` if that prop is not specified (i.e. using an `in` check).
     *
     * This method is invoked before `getInitialState` and therefore cannot rely
     * on `this.state` or use `this.setState`.
     *
     * @return {object}
     * @optional
     */
    getDefaultProps: 'DEFINE_MANY_MERGED',

    /**
     * Invoked once before the component is mounted. The return value will be used
     * as the initial value of `this.state`.
     *
     *   getInitialState: function() {
     *     return {
     *       isOn: false,
     *       fooBaz: new BazFoo()
     *     }
     *   }
     *
     * @return {object}
     * @optional
     */
    getInitialState: 'DEFINE_MANY_MERGED',

    /**
     * @return {object}
     * @optional
     */
    getChildContext: 'DEFINE_MANY_MERGED',

    /**
     * Uses props from `this.props` and state from `this.state` to render the
     * structure of the component.
     *
     * No guarantees are made about when or how often this method is invoked, so
     * it must not have side effects.
     *
     *   render: function() {
     *     var name = this.props.name;
     *     return <div>Hello, {name}!</div>;
     *   }
     *
     * @return {ReactComponent}
     * @required
     */
    render: 'DEFINE_ONCE',

    // ==== Delegate methods ====

    /**
     * Invoked when the component is initially created and about to be mounted.
     * This may have side effects, but any external subscriptions or data created
     * by this method must be cleaned up in `componentWillUnmount`.
     *
     * @optional
     */
    componentWillMount: 'DEFINE_MANY',

    /**
     * Invoked when the component has been mounted and has a DOM representation.
     * However, there is no guarantee that the DOM node is in the document.
     *
     * Use this as an opportunity to operate on the DOM when the component has
     * been mounted (initialized and rendered) for the first time.
     *
     * @param {DOMElement} rootNode DOM element representing the component.
     * @optional
     */
    componentDidMount: 'DEFINE_MANY',

    /**
     * Invoked before the component receives new props.
     *
     * Use this as an opportunity to react to a prop transition by updating the
     * state using `this.setState`. Current props are accessed via `this.props`.
     *
     *   componentWillReceiveProps: function(nextProps, nextContext) {
     *     this.setState({
     *       likesIncreasing: nextProps.likeCount > this.props.likeCount
     *     });
     *   }
     *
     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop
     * transition may cause a state change, but the opposite is not true. If you
     * need it, you are probably looking for `componentWillUpdate`.
     *
     * @param {object} nextProps
     * @optional
     */
    componentWillReceiveProps: 'DEFINE_MANY',

    /**
     * Invoked while deciding if the component should be updated as a result of
     * receiving new props, state and/or context.
     *
     * Use this as an opportunity to `return false` when you're certain that the
     * transition to the new props/state/context will not require a component
     * update.
     *
     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {
     *     return !equal(nextProps, this.props) ||
     *       !equal(nextState, this.state) ||
     *       !equal(nextContext, this.context);
     *   }
     *
     * @param {object} nextProps
     * @param {?object} nextState
     * @param {?object} nextContext
     * @return {boolean} True if the component should update.
     * @optional
     */
    shouldComponentUpdate: 'DEFINE_ONCE',

    /**
     * Invoked when the component is about to update due to a transition from
     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`
     * and `nextContext`.
     *
     * Use this as an opportunity to perform preparation before an update occurs.
     *
     * NOTE: You **cannot** use `this.setState()` in this method.
     *
     * @param {object} nextProps
     * @param {?object} nextState
     * @param {?object} nextContext
     * @param {ReactReconcileTransaction} transaction
     * @optional
     */
    componentWillUpdate: 'DEFINE_MANY',

    /**
     * Invoked when the component's DOM representation has been updated.
     *
     * Use this as an opportunity to operate on the DOM when the component has
     * been updated.
     *
     * @param {object} prevProps
     * @param {?object} prevState
     * @param {?object} prevContext
     * @param {DOMElement} rootNode DOM element representing the component.
     * @optional
     */
    componentDidUpdate: 'DEFINE_MANY',

    /**
     * Invoked when the component is about to be removed from its parent and have
     * its DOM representation destroyed.
     *
     * Use this as an opportunity to deallocate any external resources.
     *
     * NOTE: There is no `componentDidUnmount` since your component will have been
     * destroyed by that point.
     *
     * @optional
     */
    componentWillUnmount: 'DEFINE_MANY',

    // ==== Advanced methods ====

    /**
     * Updates the component's currently mounted DOM representation.
     *
     * By default, this implements React's rendering and reconciliation algorithm.
     * Sophisticated clients may wish to override this.
     *
     * @param {ReactReconcileTransaction} transaction
     * @internal
     * @overridable
     */
    updateComponent: 'OVERRIDE_BASE'
  };

  /**
   * Mapping from class specification keys to special processing functions.
   *
   * Although these are declared like instance properties in the specification
   * when defining classes using `React.createClass`, they are actually static
   * and are accessible on the constructor instead of the prototype. Despite
   * being static, they must be defined outside of the "statics" key under
   * which all other static methods are defined.
   */
  var RESERVED_SPEC_KEYS = {
    displayName: function(Constructor, displayName) {
      Constructor.displayName = displayName;
    },
    mixins: function(Constructor, mixins) {
      if (mixins) {
        for (var i = 0; i < mixins.length; i++) {
          mixSpecIntoComponent(Constructor, mixins[i]);
        }
      }
    },
    childContextTypes: function(Constructor, childContextTypes) {
      if (process.env.NODE_ENV !== 'production') {
        validateTypeDef(Constructor, childContextTypes, 'childContext');
      }
      Constructor.childContextTypes = _assign(
        {},
        Constructor.childContextTypes,
        childContextTypes
      );
    },
    contextTypes: function(Constructor, contextTypes) {
      if (process.env.NODE_ENV !== 'production') {
        validateTypeDef(Constructor, contextTypes, 'context');
      }
      Constructor.contextTypes = _assign(
        {},
        Constructor.contextTypes,
        contextTypes
      );
    },
    /**
     * Special case getDefaultProps which should move into statics but requires
     * automatic merging.
     */
    getDefaultProps: function(Constructor, getDefaultProps) {
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps = createMergedResultFunction(
          Constructor.getDefaultProps,
          getDefaultProps
        );
      } else {
        Constructor.getDefaultProps = getDefaultProps;
      }
    },
    propTypes: function(Constructor, propTypes) {
      if (process.env.NODE_ENV !== 'production') {
        validateTypeDef(Constructor, propTypes, 'prop');
      }
      Constructor.propTypes = _assign({}, Constructor.propTypes, propTypes);
    },
    statics: function(Constructor, statics) {
      mixStaticSpecIntoComponent(Constructor, statics);
    },
    autobind: function() {}
  };

  function validateTypeDef(Constructor, typeDef, location) {
    for (var propName in typeDef) {
      if (typeDef.hasOwnProperty(propName)) {
        // use a warning instead of an _invariant so components
        // don't show up in prod but only in __DEV__
        if (process.env.NODE_ENV !== 'production') {
          warning(
            typeof typeDef[propName] === 'function',
            '%s: %s type `%s` is invalid; it must be a function, usually from ' +
              'React.PropTypes.',
            Constructor.displayName || 'ReactClass',
            ReactPropTypeLocationNames[location],
            propName
          );
        }
      }
    }
  }

  function validateMethodOverride(isAlreadyDefined, name) {
    var specPolicy = ReactClassInterface.hasOwnProperty(name)
      ? ReactClassInterface[name]
      : null;

    // Disallow overriding of base class methods unless explicitly allowed.
    if (ReactClassMixin.hasOwnProperty(name)) {
      _invariant(
        specPolicy === 'OVERRIDE_BASE',
        'ReactClassInterface: You are attempting to override ' +
          '`%s` from your class specification. Ensure that your method names ' +
          'do not overlap with React methods.',
        name
      );
    }

    // Disallow defining methods more than once unless explicitly allowed.
    if (isAlreadyDefined) {
      _invariant(
        specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED',
        'ReactClassInterface: You are attempting to define ' +
          '`%s` on your component more than once. This conflict may be due ' +
          'to a mixin.',
        name
      );
    }
  }

  /**
   * Mixin helper which handles policy validation and reserved
   * specification keys when building React classes.
   */
  function mixSpecIntoComponent(Constructor, spec) {
    if (!spec) {
      if (process.env.NODE_ENV !== 'production') {
        var typeofSpec = typeof spec;
        var isMixinValid = typeofSpec === 'object' && spec !== null;

        if (process.env.NODE_ENV !== 'production') {
          warning(
            isMixinValid,
            "%s: You're attempting to include a mixin that is either null " +
              'or not an object. Check the mixins included by the component, ' +
              'as well as any mixins they include themselves. ' +
              'Expected object but got %s.',
            Constructor.displayName || 'ReactClass',
            spec === null ? null : typeofSpec
          );
        }
      }

      return;
    }

    _invariant(
      typeof spec !== 'function',
      "ReactClass: You're attempting to " +
        'use a component class or function as a mixin. Instead, just use a ' +
        'regular object.'
    );
    _invariant(
      !isValidElement(spec),
      "ReactClass: You're attempting to " +
        'use a component as a mixin. Instead, just use a regular object.'
    );

    var proto = Constructor.prototype;
    var autoBindPairs = proto.__reactAutoBindPairs;

    // By handling mixins before any other properties, we ensure the same
    // chaining order is applied to methods with DEFINE_MANY policy, whether
    // mixins are listed before or after these methods in the spec.
    if (spec.hasOwnProperty(MIXINS_KEY)) {
      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);
    }

    for (var name in spec) {
      if (!spec.hasOwnProperty(name)) {
        continue;
      }

      if (name === MIXINS_KEY) {
        // We have already handled mixins in a special case above.
        continue;
      }

      var property = spec[name];
      var isAlreadyDefined = proto.hasOwnProperty(name);
      validateMethodOverride(isAlreadyDefined, name);

      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {
        RESERVED_SPEC_KEYS[name](Constructor, property);
      } else {
        // Setup methods on prototype:
        // The following member methods should not be automatically bound:
        // 1. Expected ReactClass methods (in the "interface").
        // 2. Overridden methods (that were mixed in).
        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);
        var isFunction = typeof property === 'function';
        var shouldAutoBind =
          isFunction &&
          !isReactClassMethod &&
          !isAlreadyDefined &&
          spec.autobind !== false;

        if (shouldAutoBind) {
          autoBindPairs.push(name, property);
          proto[name] = property;
        } else {
          if (isAlreadyDefined) {
            var specPolicy = ReactClassInterface[name];

            // These cases should already be caught by validateMethodOverride.
            _invariant(
              isReactClassMethod &&
                (specPolicy === 'DEFINE_MANY_MERGED' ||
                  specPolicy === 'DEFINE_MANY'),
              'ReactClass: Unexpected spec policy %s for key %s ' +
                'when mixing in component specs.',
              specPolicy,
              name
            );

            // For methods which are defined more than once, call the existing
            // methods before calling the new property, merging if appropriate.
            if (specPolicy === 'DEFINE_MANY_MERGED') {
              proto[name] = createMergedResultFunction(proto[name], property);
            } else if (specPolicy === 'DEFINE_MANY') {
              proto[name] = createChainedFunction(proto[name], property);
            }
          } else {
            proto[name] = property;
            if (process.env.NODE_ENV !== 'production') {
              // Add verbose displayName to the function, which helps when looking
              // at profiling tools.
              if (typeof property === 'function' && spec.displayName) {
                proto[name].displayName = spec.displayName + '_' + name;
              }
            }
          }
        }
      }
    }
  }

  function mixStaticSpecIntoComponent(Constructor, statics) {
    if (!statics) {
      return;
    }
    for (var name in statics) {
      var property = statics[name];
      if (!statics.hasOwnProperty(name)) {
        continue;
      }

      var isReserved = name in RESERVED_SPEC_KEYS;
      _invariant(
        !isReserved,
        'ReactClass: You are attempting to define a reserved ' +
          'property, `%s`, that shouldn\'t be on the "statics" key. Define it ' +
          'as an instance property instead; it will still be accessible on the ' +
          'constructor.',
        name
      );

      var isInherited = name in Constructor;
      _invariant(
        !isInherited,
        'ReactClass: You are attempting to define ' +
          '`%s` on your component more than once. This conflict may be ' +
          'due to a mixin.',
        name
      );
      Constructor[name] = property;
    }
  }

  /**
   * Merge two objects, but throw if both contain the same key.
   *
   * @param {object} one The first object, which is mutated.
   * @param {object} two The second object
   * @return {object} one after it has been mutated to contain everything in two.
   */
  function mergeIntoWithNoDuplicateKeys(one, two) {
    _invariant(
      one && two && typeof one === 'object' && typeof two === 'object',
      'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.'
    );

    for (var key in two) {
      if (two.hasOwnProperty(key)) {
        _invariant(
          one[key] === undefined,
          'mergeIntoWithNoDuplicateKeys(): ' +
            'Tried to merge two objects with the same key: `%s`. This conflict ' +
            'may be due to a mixin; in particular, this may be caused by two ' +
            'getInitialState() or getDefaultProps() methods returning objects ' +
            'with clashing keys.',
          key
        );
        one[key] = two[key];
      }
    }
    return one;
  }

  /**
   * Creates a function that invokes two functions and merges their return values.
   *
   * @param {function} one Function to invoke first.
   * @param {function} two Function to invoke second.
   * @return {function} Function that invokes the two argument functions.
   * @private
   */
  function createMergedResultFunction(one, two) {
    return function mergedResult() {
      var a = one.apply(this, arguments);
      var b = two.apply(this, arguments);
      if (a == null) {
        return b;
      } else if (b == null) {
        return a;
      }
      var c = {};
      mergeIntoWithNoDuplicateKeys(c, a);
      mergeIntoWithNoDuplicateKeys(c, b);
      return c;
    };
  }

  /**
   * Creates a function that invokes two functions and ignores their return vales.
   *
   * @param {function} one Function to invoke first.
   * @param {function} two Function to invoke second.
   * @return {function} Function that invokes the two argument functions.
   * @private
   */
  function createChainedFunction(one, two) {
    return function chainedFunction() {
      one.apply(this, arguments);
      two.apply(this, arguments);
    };
  }

  /**
   * Binds a method to the component.
   *
   * @param {object} component Component whose method is going to be bound.
   * @param {function} method Method to be bound.
   * @return {function} The bound method.
   */
  function bindAutoBindMethod(component, method) {
    var boundMethod = method.bind(component);
    if (process.env.NODE_ENV !== 'production') {
      boundMethod.__reactBoundContext = component;
      boundMethod.__reactBoundMethod = method;
      boundMethod.__reactBoundArguments = null;
      var componentName = component.constructor.displayName;
      var _bind = boundMethod.bind;
      boundMethod.bind = function(newThis) {
        for (
          var _len = arguments.length,
            args = Array(_len > 1 ? _len - 1 : 0),
            _key = 1;
          _key < _len;
          _key++
        ) {
          args[_key - 1] = arguments[_key];
        }

        // User is trying to bind() an autobound method; we effectively will
        // ignore the value of "this" that the user is trying to use, so
        // let's warn.
        if (newThis !== component && newThis !== null) {
          if (process.env.NODE_ENV !== 'production') {
            warning(
              false,
              'bind(): React component methods may only be bound to the ' +
                'component instance. See %s',
              componentName
            );
          }
        } else if (!args.length) {
          if (process.env.NODE_ENV !== 'production') {
            warning(
              false,
              'bind(): You are binding a component method to the component. ' +
                'React does this for you automatically in a high-performance ' +
                'way, so you can safely remove this call. See %s',
              componentName
            );
          }
          return boundMethod;
        }
        var reboundMethod = _bind.apply(boundMethod, arguments);
        reboundMethod.__reactBoundContext = component;
        reboundMethod.__reactBoundMethod = method;
        reboundMethod.__reactBoundArguments = args;
        return reboundMethod;
      };
    }
    return boundMethod;
  }

  /**
   * Binds all auto-bound methods in a component.
   *
   * @param {object} component Component whose method is going to be bound.
   */
  function bindAutoBindMethods(component) {
    var pairs = component.__reactAutoBindPairs;
    for (var i = 0; i < pairs.length; i += 2) {
      var autoBindKey = pairs[i];
      var method = pairs[i + 1];
      component[autoBindKey] = bindAutoBindMethod(component, method);
    }
  }

  var IsMountedPreMixin = {
    componentDidMount: function() {
      this.__isMounted = true;
    }
  };

  var IsMountedPostMixin = {
    componentWillUnmount: function() {
      this.__isMounted = false;
    }
  };

  /**
   * Add more to the ReactClass base class. These are all legacy features and
   * therefore not already part of the modern ReactComponent.
   */
  var ReactClassMixin = {
    /**
     * TODO: This will be deprecated because state should always keep a consistent
     * type signature and the only use case for this, is to avoid that.
     */
    replaceState: function(newState, callback) {
      this.updater.enqueueReplaceState(this, newState, callback);
    },

    /**
     * Checks whether or not this composite component is mounted.
     * @return {boolean} True if mounted, false otherwise.
     * @protected
     * @final
     */
    isMounted: function() {
      if (process.env.NODE_ENV !== 'production') {
        warning(
          this.__didWarnIsMounted,
          '%s: isMounted is deprecated. Instead, make sure to clean up ' +
            'subscriptions and pending requests in componentWillUnmount to ' +
            'prevent memory leaks.',
          (this.constructor && this.constructor.displayName) ||
            this.name ||
            'Component'
        );
        this.__didWarnIsMounted = true;
      }
      return !!this.__isMounted;
    }
  };

  var ReactClassComponent = function() {};
  _assign(
    ReactClassComponent.prototype,
    ReactComponent.prototype,
    ReactClassMixin
  );

  /**
   * Creates a composite component class given a class specification.
   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass
   *
   * @param {object} spec Class specification (which must define `render`).
   * @return {function} Component constructor function.
   * @public
   */
  function createClass(spec) {
    // To keep our warnings more understandable, we'll use a little hack here to
    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't
    // unnecessarily identify a class without displayName as 'Constructor'.
    var Constructor = identity(function(props, context, updater) {
      // This constructor gets overridden by mocks. The argument is used
      // by mocks to assert on what gets mounted.

      if (process.env.NODE_ENV !== 'production') {
        warning(
          this instanceof Constructor,
          'Something is calling a React component directly. Use a factory or ' +
            'JSX instead. See: https://fb.me/react-legacyfactory'
        );
      }

      // Wire up auto-binding
      if (this.__reactAutoBindPairs.length) {
        bindAutoBindMethods(this);
      }

      this.props = props;
      this.context = context;
      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;

      this.state = null;

      // ReactClasses doesn't have constructors. Instead, they use the
      // getInitialState and componentWillMount methods for initialization.

      var initialState = this.getInitialState ? this.getInitialState() : null;
      if (process.env.NODE_ENV !== 'production') {
        // We allow auto-mocks to proceed as if they're returning null.
        if (
          initialState === undefined &&
          this.getInitialState._isMockFunction
        ) {
          // This is probably bad practice. Consider warning here and
          // deprecating this convenience.
          initialState = null;
        }
      }
      _invariant(
        typeof initialState === 'object' && !Array.isArray(initialState),
        '%s.getInitialState(): must return an object or null',
        Constructor.displayName || 'ReactCompositeComponent'
      );

      this.state = initialState;
    });
    Constructor.prototype = new ReactClassComponent();
    Constructor.prototype.constructor = Constructor;
    Constructor.prototype.__reactAutoBindPairs = [];

    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));

    mixSpecIntoComponent(Constructor, IsMountedPreMixin);
    mixSpecIntoComponent(Constructor, spec);
    mixSpecIntoComponent(Constructor, IsMountedPostMixin);

    // Initialize the defaultProps property after all mixins have been merged.
    if (Constructor.getDefaultProps) {
      Constructor.defaultProps = Constructor.getDefaultProps();
    }

    if (process.env.NODE_ENV !== 'production') {
      // This is a tag to indicate that the use of these method names is ok,
      // since it's used with createClass. If it's not, then it's likely a
      // mistake so we'll warn you to use the static property, property
      // initializer or constructor respectively.
      if (Constructor.getDefaultProps) {
        Constructor.getDefaultProps.isReactClassApproved = {};
      }
      if (Constructor.prototype.getInitialState) {
        Constructor.prototype.getInitialState.isReactClassApproved = {};
      }
    }

    _invariant(
      Constructor.prototype.render,
      'createClass(...): Class specification must implement a `render` method.'
    );

    if (process.env.NODE_ENV !== 'production') {
      warning(
        !Constructor.prototype.componentShouldUpdate,
        '%s has a method called ' +
          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +
          'The name is phrased as a question because the function is ' +
          'expected to return a value.',
        spec.displayName || 'A component'
      );
      warning(
        !Constructor.prototype.componentWillRecieveProps,
        '%s has a method called ' +
          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',
        spec.displayName || 'A component'
      );
    }

    // Reduce time spent doing lookups by setting these on the prototype.
    for (var methodName in ReactClassInterface) {
      if (!Constructor.prototype[methodName]) {
        Constructor.prototype[methodName] = null;
      }
    }

    return Constructor;
  }

  return createClass;
}

module.exports = factory;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 263 */,
/* 264 */,
/* 265 */,
/* 266 */,
/* 267 */,
/* 268 */,
/* 269 */,
/* 270 */,
/* 271 */,
/* 272 */,
/* 273 */,
/* 274 */,
/* 275 */,
/* 276 */,
/* 277 */,
/* 278 */,
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var _hyphenPattern = /-(.)/g;

/**
 * Camelcases a hyphenated string, for example:
 *
 *   > camelize('background-color')
 *   < "backgroundColor"
 *
 * @param {string} string
 * @return {string}
 */
function camelize(string) {
  return string.replace(_hyphenPattern, function (_, character) {
    return character.toUpperCase();
  });
}

module.exports = camelize;

/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var invariant = __webpack_require__(1);

/**
 * Convert array-like objects to arrays.
 *
 * This API assumes the caller knows the contents of the data type. For less
 * well defined inputs use createArrayFromMixed.
 *
 * @param {object|function|filelist} obj
 * @return {array}
 */
function toArray(obj) {
  var length = obj.length;

  // Some browsers builtin objects can report typeof 'function' (e.g. NodeList
  // in old versions of Safari).
  !(!Array.isArray(obj) && (typeof obj === 'object' || typeof obj === 'function')) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Array-like object expected') : invariant(false) : void 0;

  !(typeof length === 'number') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object needs a length property') : invariant(false) : void 0;

  !(length === 0 || length - 1 in obj) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object should have keys for indices') : invariant(false) : void 0;

  !(typeof obj.callee !== 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'toArray: Object can\'t be `arguments`. Use rest params ' + '(function(...args) {}) or Array.from() instead.') : invariant(false) : void 0;

  // Old IE doesn't give collections access to hasOwnProperty. Assume inputs
  // without method will throw during the slice call and skip straight to the
  // fallback.
  if (obj.hasOwnProperty) {
    try {
      return Array.prototype.slice.call(obj);
    } catch (e) {
      // IE < 9 does not support Array#slice on collections objects
    }
  }

  // Fall back to copying key by key. This assumes all keys have a value,
  // so will not preserve sparsely populated inputs.
  var ret = Array(length);
  for (var ii = 0; ii < length; ii++) {
    ret[ii] = obj[ii];
  }
  return ret;
}

/**
 * Perform a heuristic test to determine if an object is "array-like".
 *
 *   A monk asked Joshu, a Zen master, "Has a dog Buddha nature?"
 *   Joshu replied: "Mu."
 *
 * This function determines if its argument has "array nature": it returns
 * true if the argument is an actual array, an `arguments' object, or an
 * HTMLCollection (e.g. node.childNodes or node.getElementsByTagName()).
 *
 * It will return false for other array-like objects like Filelist.
 *
 * @param {*} obj
 * @return {boolean}
 */
function hasArrayNature(obj) {
  return (
    // not null/false
    !!obj && (
    // arrays are objects, NodeLists are functions in Safari
    typeof obj == 'object' || typeof obj == 'function') &&
    // quacks like an array
    'length' in obj &&
    // not window
    !('setInterval' in obj) &&
    // no DOM node should be considered an array-like
    // a 'select' element has 'length' and 'item' properties on IE8
    typeof obj.nodeType != 'number' && (
    // a real array
    Array.isArray(obj) ||
    // arguments
    'callee' in obj ||
    // HTMLCollection/NodeList
    'item' in obj)
  );
}

/**
 * Ensure that the argument is an array by wrapping it in an array if it is not.
 * Creates a copy of the argument if it is already an array.
 *
 * This is mostly useful idiomatically:
 *
 *   var createArrayFromMixed = require('createArrayFromMixed');
 *
 *   function takesOneOrMoreThings(things) {
 *     things = createArrayFromMixed(things);
 *     ...
 *   }
 *
 * This allows you to treat `things' as an array, but accept scalars in the API.
 *
 * If you need to convert an array-like object, like `arguments`, into an array
 * use toArray instead.
 *
 * @param {*} obj
 * @return {array}
 */
function createArrayFromMixed(obj) {
  if (!hasArrayNature(obj)) {
    return [obj];
  } else if (Array.isArray(obj)) {
    return obj.slice();
  } else {
    return toArray(obj);
  }
}

module.exports = createArrayFromMixed;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/*eslint-disable fb-www/unsafe-html */

var ExecutionEnvironment = __webpack_require__(5);

var invariant = __webpack_require__(1);

/**
 * Dummy container used to detect which wraps are necessary.
 */
var dummyNode = ExecutionEnvironment.canUseDOM ? document.createElement('div') : null;

/**
 * Some browsers cannot use `innerHTML` to render certain elements standalone,
 * so we wrap them, render the wrapped nodes, then extract the desired node.
 *
 * In IE8, certain elements cannot render alone, so wrap all elements ('*').
 */

var shouldWrap = {};

var selectWrap = [1, '<select multiple="true">', '</select>'];
var tableWrap = [1, '<table>', '</table>'];
var trWrap = [3, '<table><tbody><tr>', '</tr></tbody></table>'];

var svgWrap = [1, '<svg xmlns="http://www.w3.org/2000/svg">', '</svg>'];

var markupWrap = {
  '*': [1, '?<div>', '</div>'],

  'area': [1, '<map>', '</map>'],
  'col': [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>'],
  'legend': [1, '<fieldset>', '</fieldset>'],
  'param': [1, '<object>', '</object>'],
  'tr': [2, '<table><tbody>', '</tbody></table>'],

  'optgroup': selectWrap,
  'option': selectWrap,

  'caption': tableWrap,
  'colgroup': tableWrap,
  'tbody': tableWrap,
  'tfoot': tableWrap,
  'thead': tableWrap,

  'td': trWrap,
  'th': trWrap
};

// Initialize the SVG elements since we know they'll always need to be wrapped
// consistently. If they are created inside a <div> they will be initialized in
// the wrong namespace (and will not display).
var svgElements = ['circle', 'clipPath', 'defs', 'ellipse', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'text', 'tspan'];
svgElements.forEach(function (nodeName) {
  markupWrap[nodeName] = svgWrap;
  shouldWrap[nodeName] = true;
});

/**
 * Gets the markup wrap configuration for the supplied `nodeName`.
 *
 * NOTE: This lazily detects which wraps are necessary for the current browser.
 *
 * @param {string} nodeName Lowercase `nodeName`.
 * @return {?array} Markup wrap configuration, if applicable.
 */
function getMarkupWrap(nodeName) {
  !!!dummyNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Markup wrapping node not initialized') : invariant(false) : void 0;
  if (!markupWrap.hasOwnProperty(nodeName)) {
    nodeName = '*';
  }
  if (!shouldWrap.hasOwnProperty(nodeName)) {
    if (nodeName === '*') {
      dummyNode.innerHTML = '<link />';
    } else {
      dummyNode.innerHTML = '<' + nodeName + '></' + nodeName + '>';
    }
    shouldWrap[nodeName] = !dummyNode.firstChild;
  }
  return shouldWrap[nodeName] ? markupWrap[nodeName] : null;
}

module.exports = getMarkupWrap;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var _uppercasePattern = /([A-Z])/g;

/**
 * Hyphenates a camelcased string, for example:
 *
 *   > hyphenate('backgroundColor')
 *   < "background-color"
 *
 * For CSS style names, use `hyphenateStyleName` instead which works properly
 * with all vendor prefixes, including `ms`.
 *
 * @param {string} string
 * @return {string}
 */
function hyphenate(string) {
  return string.replace(_uppercasePattern, '-$1').toLowerCase();
}

module.exports = hyphenate;

/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM node.
 */
function isNode(object) {
  var doc = object ? object.ownerDocument || object : document;
  var defaultView = doc.defaultView || window;
  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));
}

module.exports = isNode;

/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */

var isNode = __webpack_require__(283);

/**
 * @param {*} object The object to check.
 * @return {boolean} Whether or not the object is a DOM text node.
 */
function isTextNode(object) {
  return isNode(object) && object.nodeType == 3;
}

module.exports = isTextNode;

/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @typechecks
 */



var ExecutionEnvironment = __webpack_require__(5);

var performance;

if (ExecutionEnvironment.canUseDOM) {
  performance = window.performance || window.msPerformance || window.webkitPerformance;
}

module.exports = performance || {};

/***/ }),
/* 286 */,
/* 287 */,
/* 288 */,
/* 289 */,
/* 290 */,
/* 291 */,
/* 292 */,
/* 293 */,
/* 294 */,
/* 295 */,
/* 296 */,
/* 297 */,
/* 298 */,
/* 299 */,
/* 300 */,
/* 301 */,
/* 302 */,
/* 303 */,
/* 304 */,
/* 305 */,
/* 306 */,
/* 307 */,
/* 308 */,
/* 309 */,
/* 310 */,
/* 311 */,
/* 312 */,
/* 313 */,
/* 314 */,
/* 315 */,
/* 316 */,
/* 317 */,
/* 318 */,
/* 319 */,
/* 320 */,
/* 321 */,
/* 322 */,
/* 323 */,
/* 324 */,
/* 325 */,
/* 326 */,
/* 327 */,
/* 328 */,
/* 329 */,
/* 330 */,
/* 331 */,
/* 332 */,
/* 333 */,
/* 334 */,
/* 335 */,
/* 336 */,
/* 337 */,
/* 338 */,
/* 339 */,
/* 340 */,
/* 341 */,
/* 342 */,
/* 343 */,
/* 344 */,
/* 345 */,
/* 346 */,
/* 347 */,
/* 348 */,
/* 349 */,
/* 350 */,
/* 351 */,
/* 352 */,
/* 353 */,
/* 354 */,
/* 355 */,
/* 356 */,
/* 357 */,
/* 358 */,
/* 359 */,
/* 360 */,
/* 361 */,
/* 362 */,
/* 363 */,
/* 364 */,
/* 365 */,
/* 366 */,
/* 367 */,
/* 368 */,
/* 369 */,
/* 370 */,
/* 371 */,
/* 372 */,
/* 373 */,
/* 374 */,
/* 375 */,
/* 376 */,
/* 377 */,
/* 378 */,
/* 379 */,
/* 380 */,
/* 381 */,
/* 382 */,
/* 383 */,
/* 384 */,
/* 385 */,
/* 386 */,
/* 387 */,
/* 388 */,
/* 389 */,
/* 390 */,
/* 391 */,
/* 392 */,
/* 393 */,
/* 394 */,
/* 395 */,
/* 396 */,
/* 397 */,
/* 398 */,
/* 399 */,
/* 400 */,
/* 401 */,
/* 402 */,
/* 403 */,
/* 404 */,
/* 405 */,
/* 406 */,
/* 407 */,
/* 408 */,
/* 409 */,
/* 410 */,
/* 411 */,
/* 412 */,
/* 413 */,
/* 414 */,
/* 415 */,
/* 416 */,
/* 417 */,
/* 418 */,
/* 419 */,
/* 420 */,
/* 421 */,
/* 422 */,
/* 423 */,
/* 424 */,
/* 425 */,
/* 426 */,
/* 427 */,
/* 428 */,
/* 429 */,
/* 430 */,
/* 431 */,
/* 432 */,
/* 433 */,
/* 434 */,
/* 435 */,
/* 436 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var InArray_1 = __webpack_require__(115);
var IntVal_1 = __webpack_require__(77);
var Color_1 = __webpack_require__(29);
var Piece_1 = __webpack_require__(50);
var Square_1 = __webpack_require__(51);
var Position_1 = __webpack_require__(202);
var Move_1 = __webpack_require__(201);
var SimpleMove_1 = __webpack_require__(114);
var ChessRatingType;
(function (ChessRatingType) {
    ChessRatingType[ChessRatingType["None"] = 0] = "None";
    ChessRatingType[ChessRatingType["Elo"] = 1] = "Elo";
    ChessRatingType[ChessRatingType["Internal"] = 2] = "Internal";
    ChessRatingType[ChessRatingType["Rapid"] = 3] = "Rapid";
    ChessRatingType[ChessRatingType["Iccf"] = 4] = "Iccf";
})(ChessRatingType = exports.ChessRatingType || (exports.ChessRatingType = {}));
var ChessRatingNames = ["Unknown", "Elo", "Rating", "Rapid", "ICCF"];
function chessRatingParseType(value) {
    return (typeof value === "string") ? IntVal_1.intVal(value) : value;
}
function chessRatingParseValue(value) {
    return (typeof value === "string") ? IntVal_1.intVal(value) : value;
}
var stdTags = [
    "gameid",
    "gtype_id",
    "white",
    "white_id",
    "black",
    "black_id",
    "event",
    "event_id",
    "site",
    "site_id",
    "round",
    "game_date",
    "event_date",
    "result_id"
];
var addTags = [
    "whiteratingtype",
    "whiterating",
    "blackratingtype",
    "blackrating",
    "ecocode",
    "fen",
    "setup"
];
var ChessTags = (function () {
    /**
     * constructor
     */
    function ChessTags(owner) {
        this.owner = owner;
        this.tags = {};
    }
    ChessTags.prototype.clear = function () {
        this.tags = {};
    };
    ChessTags.prototype.add = function (name, value) {
        if (name) {
            name = name.toLowerCase();
            if (!InArray_1.inArray(name, stdTags)) {
                if (InArray_1.inArray(name, addTags)) {
                    switch (name) {
                        case "whiteratingtype":
                            this.owner.WhiteRatingType = chessRatingParseType(value);
                            break;
                        case "whiterating":
                            this.owner.WhiteElo = chessRatingParseValue(value);
                            break;
                        case "blackratingtype":
                            this.owner.BlackRatingType = chessRatingParseType(value);
                            break;
                        case "blackrating":
                            this.owner.BlackElo = chessRatingParseValue(value);
                            break;
                        case "ecocode":
                            this.owner.EcoCode = IntVal_1.intVal(value);
                            break;
                        case "fen":
                            this.owner.StartFen = value;
                            break;
                        case "setup":
                            break;
                    }
                }
                else {
                    this.tags[name] = value;
                }
            }
        }
    };
    return ChessTags;
}());
exports.ChessTags = ChessTags;
var ChessResultColor;
(function (ChessResultColor) {
    ChessResultColor[ChessResultColor["None"] = 0] = "None";
    ChessResultColor[ChessResultColor["White"] = 1] = "White";
    ChessResultColor[ChessResultColor["Black"] = 2] = "Black";
    ChessResultColor[ChessResultColor["Draw"] = 3] = "Draw";
})(ChessResultColor = exports.ChessResultColor || (exports.ChessResultColor = {}));
var ChessResultType;
(function (ChessResultType) {
    ChessResultType[ChessResultType["None"] = 0] = "None";
    ChessResultType[ChessResultType["Win"] = 1] = "Win";
    ChessResultType[ChessResultType["Lose"] = 2] = "Lose";
    ChessResultType[ChessResultType["Draw"] = 3] = "Draw";
})(ChessResultType || (ChessResultType = {}));
var OppositeColor = [
    ChessResultColor.None,
    ChessResultColor.Black,
    ChessResultColor.White,
    ChessResultColor.Draw
];
var OppositeType = [
    ChessResultType.None,
    ChessResultType.Lose,
    ChessResultType.Win,
    ChessResultType.Draw
];
var score = [0, 1, 0, 0.5];
var resultChar = ["*", "1", "0", "="];
var resultShortString = ["*", "1-0", "0-1", "=-="];
var resultLongStr = ["*", "1-0", "0-1", "1/2-1/2"];
var resultHtmlStr = ["*", "1&ndash;0", "0&ndash;1", "&frac12;&ndash;&frac12;"];
var ChessGameState = (function () {
    function ChessGameState() {
    }
    return ChessGameState;
}());
exports.ChessGameState = ChessGameState;
var Chess = (function () {
    /**
     * @constructor
     */
    function Chess(settings) {
        this.varDepth = 0;
        this.supressEvents = false;
        this.moveList = {};
        this.startFen = Position_1.FenStandartStart;
        this.settings = settings || {};
        this.Tags = new ChessTags(this);
        this.Altered = false;
        this.pgnLastMovePos = this.pgnNextMovePos = 0;
        if (this.settings.fen && (this.settings.fen != Position_1.FenStandartStart)) {
            this.startFen = this.settings.fen;
            this.startPos = new Position_1.Position(this.settings.fen);
        }
        else {
            this.startPos = Position_1.ChessPositionStd;
        }
        this.clear();
        this.GameId = this.settings.id || 0;
        this.positionChanged();
    }
    Object.defineProperty(Chess.prototype, "CurrentMove", {
        get: function () {
            return this.currentMove;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Chess.prototype, "CurrentPos", {
        get: function () {
            return this.currentPos;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Chess.prototype, "StartFen", {
        set: function (value) {
            this.startFen = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Chess.prototype, "NonStandardStart", {
        get: function () {
            return this.startFen !== Position_1.FenStandartStart;
        },
        enumerable: true,
        configurable: true
    });
    Chess.prototype.clear = function () {
        this.GameId = 0;
        // CommentsFlag = NagsFlag = VarsFlag = 0;
        this.InPromotion = false;
        this.NoQueenPromotion = false;
        this.clearStandardTags();
        this.clearExtraTags();
        this.clearMoves();
    };
    /// <summary>
    /// Clears all of the standard tags.
    /// </summary>
    Chess.prototype.clearStandardTags = function () {
        this.White = { id: 0, name: "?" };
        this.Black = { id: 0, name: "?" };
        this.Event = "?";
        this.Site = "?";
        this.Round = "?";
        this.GameDate = "????.??.??";
        this.EventDate = "????.??.??";
        this.EcoCode = 0;
        this.Result = ChessResultColor.None;
        this.WhiteElo = this.BlackElo = 0;
        this.WhiteRatingType = this.BlackRatingType = ChessRatingType.Elo;
    };
    /// <summary>
    /// clear any nonstandard tags.
    /// </summary>
    Chess.prototype.clearExtraTags = function () {
        this.Tags.clear();
    };
    /// <summary>
    /// clear all moves.
    /// </summary>
    Chess.prototype.clearMoves = function () {
        this.moveList = {};
        this.NumHalfMoves = 0;
        this.CurrentPlyCount = 0;
        this.InPromotion = false;
        this.NoQueenPromotion = false;
        this.savedMove = null;
        this.savedPlyCount = 0;
        this.savedPos = null;
        this.currentMove = Move_1.Move.init(this.startFen);
        // Set up start
        this.currentPos = new Position_1.Position();
        this.currentPos.copyFrom(this.startPos);
        this.StartPlyCount = this.currentPos.PlyCount;
        var moves = this.settings.moves;
        if (moves) {
            this.supressEvents = true;
            this.decodeMoves(moves);
            this.supressEvents = false;
        }
        this.ToMove = this.currentPos.WhoMove;
    };
    Chess.prototype.decodeMoves = function (moves) {
        for (var i = 0; i < moves.length; i++) {
            // 0 - from/to/color
            // 1 - san
            // 2 - captured
            // 3 - promote
            // 4 - comments
            // 5 - nag
            // 6 - variations
            var mv = moves[i];
            var sm = new SimpleMove_1.SimpleMove();
            sm.PlyCount = this.CurrentPos.PlyCount + 1;
            sm.From = mv[0] & 63;
            sm.To = (mv[0] >> 6) & 63;
            sm.Color = (mv[0] >> 12) & 63;
            sm.CapturedPiece = mv[2] & 63;
            sm.CapturedSquare = (mv[2] >> 6) & 63;
            sm.San = mv[1];
            sm.Promote = mv[3];
            sm.Comments = mv[4];
            sm.Nag = mv[5];
            sm.Permanent = true;
            var move = this.addMove(sm, sm.San);
            this.moveList[move.moveKey] = move;
        }
    };
    Chess.prototype.positionChanged = function () {
        if (!this.supressEvents) {
            if (!this.CurrentMove.Fen) {
                this.CurrentMove.Fen = this.currentPos.writeFEN();
            }
            this.Fen = this.CurrentMove.Fen;
        }
    };
    Chess.prototype.checkGameState = function () {
        var state = new ChessGameState();
        var mlist = this.currentPos.generateMoves(Piece_1.Piece.NoPiece, Position_1.GenerateMode.All, true);
        if (mlist.length === 0) {
            if (this.currentPos.isKingInCheck()) {
                state.InCheckMate = true;
            }
            else {
                state.InStaleMate = true;
            }
        }
        if ((!this.currentPos.hasPiece(Piece_1.Piece.WPawn)) &&
            (!this.currentPos.hasPiece(Piece_1.Piece.WQueen)) &&
            (!this.currentPos.hasPiece(Piece_1.Piece.WRook))) {
            if ((!this.currentPos.hasPiece(Piece_1.Piece.WKnight)) && (!this.currentPos.hasPiece(Piece_1.Piece.WBishop))) {
                // King only
                state.IsNoMaterialWhite = true;
            }
            else if ((!this.currentPos.hasPiece(Piece_1.Piece.WKnight)) && (this.currentPos.getPieceCount(Piece_1.Piece.WBishop) === 1)) {
                // King and bishop
                state.IsNoMaterialWhite = true;
            }
            else if ((this.currentPos.getPieceCount(Piece_1.Piece.WKnight) === 1) && (!this.currentPos.hasPiece(Piece_1.Piece.WBishop))) {
                // King and knight
                state.IsNoMaterialWhite = true;
            }
        }
        if ((!this.currentPos.hasPiece(Piece_1.Piece.BPawn)) &&
            (!this.currentPos.hasPiece(Piece_1.Piece.BQueen)) &&
            (!this.currentPos.hasPiece(Piece_1.Piece.BRook))) {
            if ((!this.currentPos.hasPiece(Piece_1.Piece.BKnight)) && (!this.currentPos.hasPiece(Piece_1.Piece.BBishop))) {
                // King only
                state.IsNoMaterialBlack = true;
            }
            else if ((!this.currentPos.hasPiece(Piece_1.Piece.BKnight)) && (this.currentPos.getPieceCount(Piece_1.Piece.BBishop) === 1)) {
                // King and bishop
                state.IsNoMaterialBlack = true;
            }
            else if ((this.currentPos.getPieceCount(Piece_1.Piece.BKnight) === 1) && (!this.currentPos.hasPiece(Piece_1.Piece.BBishop))) {
                // King and knight
                state.IsNoMaterialBlack = true;
            }
        }
        var move = this.CurrentMove.Prev;
        var thisFen = move.Fen;
        var rc = 1;
        while (!move.START_MARKER) {
            if (thisFen === move.Fen) {
                rc++;
            }
        }
        state.IsPosRepeation = rc >= 3;
        state.Is50MovesRule = this.currentPos.HalfMoveCount > 100;
        return state;
    };
    Chess.prototype.makeMove = function (fr, to, promote) {
        var currentPos = this.currentPos;
        var sm = new SimpleMove_1.SimpleMove();
        sm.PieceNum = currentPos.getPieceNum(fr);
        sm.MovingPiece = currentPos.getPiece(fr);
        sm.Color = Piece_1.Piece.color(sm.MovingPiece);
        sm.From = fr;
        sm.To = to;
        sm.CapturedPiece = currentPos.getPiece(to);
        sm.CapturedSquare = to;
        sm.CastleFlags = currentPos.Castling;
        sm.EpSquare = currentPos.EpTarget;
        sm.Promote = Piece_1.Piece.NoPiece;
        var piece = sm.MovingPiece;
        var ptype = Piece_1.Piece.type(piece);
        var enemy = Color_1.Color.flip(currentPos.WhoMove);
        // handle promotion:
        var promoteRank = (currentPos.WhoMove === Color_1.Color.White ? 7 : 0);
        if ((ptype == Piece_1.Piece.Pawn) && (Square_1.Square.rank(to) == promoteRank)) {
            if (!promote) {
                this.InPromotion = true;
                return sm;
            }
            else {
                sm.Promote = Piece_1.Piece.typeFromChar(promote);
            }
        }
        // Handle en passant capture:
        if (ptype == Piece_1.Piece.Pawn && (sm.CapturedPiece == Piece_1.Piece.NoPiece) && (Square_1.Square.fyle(fr) != Square_1.Square.fyle(to))) {
            var enemyPawn = Piece_1.Piece.create(enemy, Piece_1.Piece.Pawn);
            sm.CapturedSquare = (this.currentPos.WhoMove === Color_1.Color.White ? (to - 8) : (to + 8));
            sm.CapturedPiece = enemyPawn;
        }
        return sm;
    };
    /**
    * Add a move at current position and do it. The parameter 'san' can be NULL. If it is provided, it is stored with the move to speed up PGN printing.
    * @param sm SimpleMove
    * @param san String
    */
    Chess.prototype.addMove = function (sm, san) {
        var currentPos = this.currentPos;
        // We must be at the end of a game/variation to add a move:
        if (!this.currentMove.END_MARKER) {
            // truncate the game!
            this.currentMove.truncate();
        }
        if (!sm.San) {
            if (!san || (san == undefined)) {
                sm.San = this.currentPos.makeSanString(sm, Position_1.SanCheckLevel.MateTest);
            }
            else {
                sm.San = san;
            }
        }
        var newMove = this.currentMove.append(sm);
        this.currentPos.doSimpleMove(sm);
        newMove.Fen = currentPos.writeFEN();
        this.CurrentPlyCount++;
        if (!this.varDepth) {
            this.NumHalfMoves = this.CurrentPlyCount;
        }
        this.positionChanged();
        return newMove;
    };
    /**
    * Переместиться на указанную позицию в главной линии партии
    * @param hmNumber
    */
    Chess.prototype.moveToPly = function (hmNumber) {
        this.supressEvents = true;
        if (hmNumber > this.CurrentPlyCount) {
            while (!this.CurrentMove.END_MARKER && (hmNumber > this.CurrentPlyCount)) {
                if (!this.moveForward()) {
                    break;
                }
            }
            this.supressEvents = false;
            this.positionChanged();
        }
        else if (hmNumber < this.CurrentPlyCount) {
            while (!this.CurrentMove.START_MARKER && (hmNumber < this.CurrentPlyCount)) {
                if (!this.moveBackward()) {
                    break;
                }
            }
            this.supressEvents = false;
            this.positionChanged();
        }
        this.supressEvents = false;
    };
    Chess.prototype.moveToKey = function (key) {
        this.supressEvents = true;
        if (this.moveList[key]) {
            this.currentMove = this.moveList[key];
            this.currentPos = new Position_1.Position(this.currentMove.Fen);
            this.CurrentPlyCount = this.currentPos.PlyCount;
            this.currentMove = this.currentMove.Next;
        }
        this.supressEvents = false;
    };
    /**
    * Переместить текущую позицию на 1 вперед
    * @returns {Boolean}
    */
    Chess.prototype.moveForward = function () {
        if (this.currentMove.END_MARKER) {
            return false;
        }
        this.currentPos.doSimpleMove(this.currentMove.moveData);
        this.currentMove = this.currentMove.Next;
        this.CurrentPlyCount++;
        this.positionChanged();
        return true;
    };
    /**
    * Move to 1 turn back
    * @returns {Boolean}
    */
    Chess.prototype.moveBackward = function () {
        var prev = this.currentMove.Prev;
        if (prev.START_MARKER) {
            return false;
        }
        this.currentMove = prev;
        this.currentPos.undoSimpleMove(this.currentMove.moveData);
        this.CurrentPlyCount--;
        this.positionChanged();
        return true;
    };
    /**
    * Move to first move
    */
    Chess.prototype.moveFirst = function () {
        this.moveToPly(0);
    };
    /**
    * Move to last move
    */
    Chess.prototype.moveLast = function () {
        this.moveToPly(9999);
    };
    return Chess;
}());
exports.Chess = Chess;


/***/ }),
/* 437 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var defaultLocale = 'ru-ru';
var currentLocale = defaultLocale;
var categories = {};
var locale = function (value) {
    if (value == "en" || value == "en-us" || value == "en-uk") {
        currentLocale = 'en-us';
    }
    currentLocale = 'ru-ru';
    return currentLocale;
};
var register = function (category, strings) {
    if (!categories[category]) {
        categories[category] = strings;
    }
    else {
        for (var lang in strings) {
            categories[category][lang] = strings[lang];
        }
    }
};
var t = function (category, key) {
    var result = categories[category][currentLocale][key];
    if (!result) {
        result = categories[category][defaultLocale][key];
    }
    return result;
};
var ts = function (category, key) {
    var result = categories[category][currentLocale][key];
    if (!result) {
        result = categories[category][defaultLocale][key];
    }
    return result;
};
var Intl = (function () {
    function Intl() {
    }
    Intl.setLocale = locale;
    Intl.t = t;
    Intl.ts = ts;
    Intl.registerStrings = register;
    return Intl;
}());
exports.Intl = Intl;
Intl.setLocale(window.navigator.language);


/***/ }),
/* 438 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {
Object.defineProperty(exports, "__esModule", { value: true });
var wnd = window;
var FALSE = false;
// some convenient shortcuts.
var aps = Array.prototype.slice;
var con = wnd.console;
var callback_func = null;
var callback_force = FALSE;
// Set default level
var log_level = 9;
// logging methods, in "priority order". Not all console implementations
// will utilize these, but they will be used in the callback passed to
// setCallback.
var log_methods = ["error", "warn", "info", "debug", "log"];
// pass these methods through to the console if they exist, otherwise just
// fail gracefully. These methods are provided for convenience.
var pass_methods = "assert clear count dir dirxml exception group groupCollapsed groupEnd profile profileEnd table time timeEnd trace".split(" ");
// logs are stored here so that they can be recalled as necessary.
var logs = [];
// determine if the level is visible given the current log_level.
function is_level(level) {
    return log_level > 0
        ? log_level > level
        : log_methods.length + log_level <= level;
}
// execute the callback function if set.
function exec_callback(args) {
    if (callback_func && (callback_force || !con || !con.log)) {
        callback_func.apply(wnd, args);
    }
}
var LoggerClass = (function () {
    function LoggerClass() {
        var idx = pass_methods.length;
        while (--idx >= 0) {
            this.callPassThroughMethod(pass_methods[idx]);
        }
        idx = log_methods.length;
        while (--idx >= 0) {
            this.setLevelFunctions(idx, log_methods[idx]);
        }
    }
    LoggerClass.prototype.error = function (message) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
    };
    LoggerClass.prototype.warn = function (message) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
    };
    LoggerClass.prototype.info = function (message) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
    };
    LoggerClass.prototype.debug = function (message) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
    };
    LoggerClass.prototype.log = function (message) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
    };
    LoggerClass.prototype.callPassThroughMethod = function (method) {
        // generate pass-through methods. These methods will be called, if they
        // exist, as long as the logging level is non-zero.
        this[method] = function () {
            if (log_level !== 0 && con && con[method]) {
                con[method].apply(con, arguments);
            }
        };
    };
    LoggerClass.prototype.setLevelFunctions = function (idx, level) {
        this[level] = function () {
            var args = aps.call(arguments);
            var log_arr = [level].concat(args);
            logs.push(log_arr);
            exec_callback(log_arr);
            if (!con || !is_level(idx)) {
                return;
            }
            var arg_norm = (args.length === 1) ? args[0] : args;
            con.firebug ? con[level].apply(wnd, arg_norm)
                : con[level] ? con[level](arg_norm)
                    : con.log(arg_norm);
        };
    };
    LoggerClass.prototype.setCallback = function () {
        var args = aps.call(arguments), max = logs.length, i = max;
        callback_func = args.shift() || null;
        callback_force = typeof args[0] === "boolean" ? args.shift() : FALSE;
        i -= typeof args[0] === "number" ? args.shift() : max;
        while (i < max) {
            exec_callback(logs[i++]);
        }
    };
    ;
    // priority levels:
    // log (1) < debug (2) < info (3) < warn (4) < error (5)
    LoggerClass.prototype.setLevel = function (level) {
        log_level = level;
    };
    return LoggerClass;
}());
exports.LoggerClass = LoggerClass;
exports.Logger = new LoggerClass();
if (process.env.NODE_ENV === 'production') {
    exports.Logger.setLevel(1);
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 439 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var EventArgs_1 = __webpack_require__(203);
var EventHandler_1 = __webpack_require__(204);
var Event = (function () {
    /**
     * constructor
     */
    function Event() {
        this._type = "Event";
        this.OnHandlerAttached = null;
        this.OnHandlerAttachedContext = null;
        this.OnHandlerDettached = null;
        this.OnHandlerDettachedContext = null;
        this.handlers = [];
    }
    /**
     * Determines whether the specified handler is bound to the event.
     */
    Event.prototype.hasBinding = function (handler) {
        return this.handlers.indexOf(handler) > -1;
    };
    /**
     * Determines whether the Event has active bindings.
     */
    Event.prototype.hasBindings = function () {
        return this.handlers.length > 0;
    };
    /**
     * Associates the handler with the Event object.
     * @param handler Event handler.
     */
    Event.prototype.bind = function (handler) {
        if (!this.hasBinding(handler)) {
            this.handlers.push(handler);
            if (this.OnHandlerAttached !== null) {
                this.OnHandlerAttached.call(this.OnHandlerAttachedContext);
            }
        }
    };
    /**
     * Associates the event handler with the Event object to execute no more than the specified number of times.
     * After the specified number of times, the action is disconnected from the handler.
     * @param handler Event handler.
     * @param triggerCount Number of calls before the handler is disconnected.
     */
    Event.prototype.bindFor = function (handler, triggerCount) {
        var that = this;
        var triggers = 0;
        var wire = new EventHandler_1.EventHandler(function (args) {
            if (++triggers >= triggerCount) {
                that.unbind(wire);
            }
            handler.invoke(args);
        }, handler.Context);
        this.handlers.push(wire);
    };
    /**
     * Disconnects the specified handler from the Event.
     * @param handler Event handler.
     */
    Event.prototype.unbind = function (handler) {
        for (var i = 0; i < this.handlers.length; i++) {
            if (this.handlers[i] === handler) {
                this.handlers.splice(i, 1);
                return;
            }
        }
    };
    /**
     * Executes all linked handlers.
     */
    Event.prototype.trigger = function (args) {
        var handlers;
        if (this.hasBindings()) {
            handlers = this.handlers.slice(0);
            for (var i = 0; i < handlers.length; i++) {
                handlers[i].Invoke(args);
            }
        }
    };
    /**
     * Make arguments and execute
     * @param sender Event sender
     * @param data Event data
     */
    Event.prototype.fire = function (sender, data) {
        this.trigger(new EventArgs_1.EventArgs(sender));
    };
    /**
     * Deletes an event and deletes the binding of all related handlers.
     */
    Event.prototype.dispose = function () {
        this.handlers = [];
    };
    return Event;
}());
exports.Event = Event;
var Event1 = (function (_super) {
    __extends(Event1, _super);
    function Event1() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._type = "Event1";
        /**
         * Event handlers
         */
        _this.Handlers = [];
        return _this;
    }
    /**
     * Associates the handler with the Event object.
     * @param handler Event handler.
     */
    Event1.prototype.bind = function (handler) {
        _super.prototype.bind.call(this, handler);
    };
    /**
     * Disconnects the specified handler from the Event.
     * @param handler Event handler.
     */
    Event1.prototype.unbind = function (handler) {
        _super.prototype.unbind.call(this, handler);
    };
    /**
     * Determines whether the specified handler is bound to the event.
     */
    Event1.prototype.hasBinding = function (handler) {
        return _super.prototype.hasBinding.call(this, handler);
    };
    /**
     * Executes all linked handlers.
     */
    Event1.prototype.trigger = function (args) {
        _super.prototype.trigger.call(this, args);
    };
    /**
     * Make arguments and execute
     * @param sender Event sender
     * @param data Event data
     */
    Event1.prototype.fire = function (sender, data) {
        this.trigger(new EventArgs_1.EventArgs1(sender, data));
    };
    return Event1;
}(Event));
exports.Event1 = Event1;


/***/ }),
/* 440 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var EventArgs_1 = __webpack_require__(203);
exports.EventArgs = EventArgs_1.EventArgs;
exports.EventArgs1 = EventArgs_1.EventArgs1;
var EventHandler_1 = __webpack_require__(204);
exports.EventHandler = EventHandler_1.EventHandler;
exports.EventHandler1 = EventHandler_1.EventHandler1;
var Event_1 = __webpack_require__(439);
exports.Event = Event_1.Event;
exports.Event1 = Event_1.Event1;


/***/ }),
/* 441 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.pushif = function (a, cond, val) {
    if (cond) {
        a.push(val);
    }
};


/***/ }),
/* 442 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var InArray_1 = __webpack_require__(115);
exports.inArray = InArray_1.inArray;
var IndexOf_1 = __webpack_require__(206);
exports.indexOf = IndexOf_1.indexOf;
var Grep_1 = __webpack_require__(205);
exports.grep = Grep_1.grep;
var Pushif_1 = __webpack_require__(441);
exports.pushif = Pushif_1.pushif;


/***/ }),
/* 443 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Types_1 = __webpack_require__(39);
var IndexOf_1 = __webpack_require__(206);
var Grep_1 = __webpack_require__(205);
var Timezones_1 = __webpack_require__(444);
var months = { Jan: 0, Feb: 1, Mar: 2, Apr: 3, May: 4, Jun: 5, Jul: 6, Aug: 7, Sep: 8, Oct: 9, Nov: 10, Dec: 11 };
var days = { Sun: 0, Mon: 1, Tue: 2, Wed: 3, Thu: 4, Fri: 5, Sat: 6 };
function ruleToDate(year, rule) {
    var date;
    var targetDay;
    var ourDay;
    var month = rule[3];
    var on = rule[4];
    var time = rule[5];
    var cache = rule[8];
    if (!cache) {
        rule[8] = cache = {};
    }
    if (cache[year]) {
        return cache[year];
    }
    if (!isNaN(on)) {
        date = new Date(Date.UTC(year, months[month], on, time[0], time[1], time[2], 0));
    }
    else if (on.indexOf("last") === 0) {
        date = new Date(Date.UTC(year, months[month] + 1, 1, time[0] - 24, time[1], time[2], 0));
        targetDay = days[on.substr(4, 3)];
        ourDay = date.getUTCDay();
        date.setUTCDate(date.getUTCDate() + targetDay - ourDay - (targetDay > ourDay ? 7 : 0));
    }
    else if (on.indexOf(">=") >= 0) {
        date = new Date(Date.UTC(year, months[month], on.substr(5), time[0], time[1], time[2], 0));
        targetDay = days[on.substr(0, 3)];
        ourDay = date.getUTCDay();
        date.setUTCDate(date.getUTCDate() + targetDay - ourDay + (targetDay < ourDay ? 7 : 0));
    }
    return cache[year] = date;
}
function findRule(utcTime, rules, zone) {
    rules = rules[zone];
    if (!rules) {
        var time = zone.split(":");
        var offset = 0;
        if (time.length > 1) {
            offset = time[0] * 60 + Number(time[1]);
        }
        return [-1000000, 'max', '-', 'Jan', 1, [0, 0, 0], offset, '-'];
    }
    var year = new Date(utcTime).getUTCFullYear();
    rules = Grep_1.grep(rules, function (rule) {
        var from = rule[0];
        var to = rule[1];
        return from <= year && (to >= year || (from == year && to == "only") || to == "max");
    });
    rules.push(utcTime);
    rules.sort(function (a, b) {
        if (typeof a != "number") {
            a = Number(ruleToDate(year, a));
        }
        if (typeof b != "number") {
            b = Number(ruleToDate(year, b));
        }
        return a - b;
    });
    var rule = rules[IndexOf_1.indexOf(utcTime, rules) - 1] || rules[rules.length - 1];
    return isNaN(rule) ? rule : null;
}
function findZone(utcTime, zones, timezone) {
    var zoneRules = zones[timezone];
    if (typeof zoneRules === "string") {
        zoneRules = zones[zoneRules];
    }
    if (!zoneRules) {
        throw new Error('Timezone "' + timezone + '" is either incorrect, or kendo.timezones.min.js is not included.');
    }
    for (var idx = zoneRules.length - 1; idx >= 0; idx--) {
        var until = zoneRules[idx][3];
        if (until && utcTime > until) {
            break;
        }
    }
    var zone = zoneRules[idx + 1];
    if (!zone) {
        throw new Error('Timezone "' + timezone + '" not found on ' + utcTime + ".");
    }
    return zone;
}
function zoneAndRule(utcTime, zones, rules, timezone) {
    if (!Types_1.isNumber(utcTime)) {
        utcTime = Date.UTC(utcTime.getFullYear(), utcTime.getMonth(), utcTime.getDate(), utcTime.getHours(), utcTime.getMinutes(), utcTime.getSeconds(), utcTime.getMilliseconds());
    }
    var zone = findZone(utcTime, zones, timezone);
    return {
        zone: zone,
        rule: findRule(utcTime, rules, zone[1])
    };
}
var Timezone = (function () {
    function Timezone() {
        this.zones = {};
        this.rules = {};
        this.zones = Timezones_1.zones;
        this.rules = Timezones_1.rules;
    }
    Timezone.prototype.offset = function (utcTime, timezone) {
        if (timezone == "Etc/UTC" || timezone == "Etc/GMT") {
            return 0;
        }
        var info = zoneAndRule(utcTime, this.zones, this.rules, timezone);
        var zone = info.zone;
        var rule = info.rule;
        return parseFloat(rule ? zone[0] - rule[6] : zone[0]);
    };
    Timezone.prototype.convert = function (date, fromOffset, toOffset) {
        if (Types_1.isString(fromOffset)) {
            fromOffset = this.offset(date, fromOffset);
        }
        if (Types_1.isString(toOffset)) {
            toOffset = this.offset(date, toOffset);
        }
        var fromLocalOffset = date.getTimezoneOffset();
        date = new Date(date.getTime() + (fromOffset - toOffset) * 60000);
        var toLocalOffset = date.getTimezoneOffset();
        return new Date(date.getTime() + (toLocalOffset - fromLocalOffset) * 60000);
    };
    Timezone.prototype.apply = function (date, timezone) {
        return this.convert(date, date.getTimezoneOffset(), timezone);
    };
    Timezone.prototype.remove = function (date, timezone) {
        return this.convert(date, timezone, date.getTimezoneOffset());
    };
    Timezone.prototype.toLocalDate = function (time) {
        return this.apply(new Date(time), "Etc/UTC");
    };
    return Timezone;
}());
exports.Timezone = Timezone;


/***/ }),
/* 444 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.zones = {
    "Africa/Algiers": [
        ["-12.2", "-", "LMT", "-2486678340000"],
        ["-9.35", "-", "PMT", "-1855958400000"],
        ["0", "Algeria", "WE%sT", "-942012000000"],
        ["-60", "Algeria", "CE%sT", "-733276800000"],
        ["0", "-", "WET", "-439430400000"],
        ["-60", "-", "CET", "-212025600000"],
        ["0", "Algeria", "WE%sT", "246240000000"],
        ["-60", "Algeria", "CE%sT", "309744000000"],
        ["0", "Algeria", "WE%sT", "357523200000"],
        ["-60", "-", "CET"]
    ],
    "Atlantic/Cape_Verde": [
        ["94.06666666666668", "-", "LMT", "-1956700800000"],
        ["120", "-", "CVT", "-862617600000"],
        ["120", "1:00", "CVST", "-764121600000"],
        ["120", "-", "CVT", "186112800000"],
        ["60", "-", "CVT"]
    ],
    "Africa/Ndjamena": [
        ["-60.2", "-", "LMT", "-1798848000000"],
        ["-60", "-", "WAT", "308707200000"],
        ["-60", "1:00", "WAST", "321321600000"],
        ["-60", "-", "WAT"]
    ],
    "Indian/Comoro": [
        ["-173.06666666666666", "-", "LMT", "-1846281600000"],
        ["-180", "-", "EAT"]
    ],
    "Africa/Abidjan": [
        ["16.133333333333333", "-", "LMT", "-1798848000000"],
        ["0", "-", "GMT"]
    ],
    "Africa/Bamako": "Africa/Abidjan",
    "Africa/Banjul": "Africa/Abidjan",
    "Africa/Conakry": "Africa/Abidjan",
    "Africa/Dakar": "Africa/Abidjan",
    "Africa/Freetown": "Africa/Abidjan",
    "Africa/Lome": "Africa/Abidjan",
    "Africa/Nouakchott": "Africa/Abidjan",
    "Africa/Ouagadougou": "Africa/Abidjan",
    "Africa/Sao_Tome": "Africa/Abidjan",
    "Atlantic/St_Helena": "Africa/Abidjan",
    "Africa/Djibouti": [
        ["-172.6", "-", "LMT", "-1846281600000"],
        ["-180", "-", "EAT"]
    ],
    "Africa/Cairo": [
        ["-125.15", "-", "LMT", "-2185401600000"],
        ["-120", "Egypt", "EE%sT"]
    ],
    "Africa/Asmara": [
        ["-155.53333333333333", "-", "LMT", "-3124224000000"],
        ["-155.53333333333333", "-", "AMT", "-2493072000000"],
        ["-155.33333333333334", "-", "ADMT", "-1062201600000"],
        ["-180", "-", "EAT"]
    ],
    "Africa/Addis_Ababa": [
        ["-154.8", "-", "LMT", "-3124224000000"],
        ["-155.33333333333334", "-", "ADMT", "-1062201600000"],
        ["-180", "-", "EAT"]
    ],
    "Africa/Accra": [
        ["0.8666666666666666", "-", "LMT", "-1609545600000"],
        ["0", "Ghana", "%s"]
    ],
    "Africa/Bissau": [
        ["62.333333333333336", "-", "LMT", "-1830384000000"],
        ["60", "-", "WAT", "189216000000"],
        ["0", "-", "GMT"]
    ],
    "Africa/Nairobi": [
        ["-147.26666666666665", "-", "LMT", "-1309737600000"],
        ["-180", "-", "EAT", "-1230854400000"],
        ["-150", "-", "BEAT", "-915235200000"],
        ["-165", "-", "BEAUT", "-284083200000"],
        ["-180", "-", "EAT"]
    ],
    "Africa/Monrovia": [
        ["43.13333333333333", "-", "LMT", "-2745532800000"],
        ["43.13333333333333", "-", "MMT", "-1604361600000"],
        ["44.5", "-", "LRT", "73526400000"],
        ["0", "-", "GMT"]
    ],
    "Africa/Tripoli": [
        ["-52.733333333333334", "-", "LMT", "-1546387200000"],
        ["-60", "Libya", "CE%sT", "-315705600000"],
        ["-120", "-", "EET", "410140800000"],
        ["-60", "Libya", "CE%sT", "641779200000"],
        ["-120", "-", "EET", "844041600000"],
        ["-60", "Libya", "CE%sT", "875923200000"],
        ["-120", "-", "EET", "1352512800000"],
        ["-60", "Libya", "CE%sT", "1382666400000"],
        ["-120", "-", "EET"]
    ],
    "Indian/Antananarivo": [
        ["-190.06666666666666", "-", "LMT", "-1846281600000"],
        ["-180", "-", "EAT", "-499914000000"],
        ["-180", "1:00", "EAST", "-492051600000"],
        ["-180", "-", "EAT"]
    ],
    "Indian/Mauritius": [
        ["-230", "-", "LMT", "-1956700800000"],
        ["-240", "Mauritius", "MU%sT"]
    ],
    "Indian/Mayotte": [
        ["-180.93333333333334", "-", "LMT", "-1846281600000"],
        ["-180", "-", "EAT"]
    ],
    "Africa/Casablanca": [
        ["30.333333333333332", "-", "LMT", "-1773014400000"],
        ["0", "Morocco", "WE%sT", "448243200000"],
        ["-60", "-", "CET", "536371200000"],
        ["0", "Morocco", "WE%sT"]
    ],
    "Africa/El_Aaiun": [
        ["52.8", "-", "LMT", "-1136073600000"],
        ["60", "-", "WAT", "198288000000"],
        ["0", "Morocco", "WE%sT"]
    ],
    "Africa/Maputo": [
        ["-130.33333333333331", "-", "LMT", "-2109283200000"],
        ["-120", "-", "CAT"]
    ],
    "Africa/Blantyre": "Africa/Maputo",
    "Africa/Bujumbura": "Africa/Maputo",
    "Africa/Gaborone": "Africa/Maputo",
    "Africa/Harare": "Africa/Maputo",
    "Africa/Kigali": "Africa/Maputo",
    "Africa/Lubumbashi": "Africa/Maputo",
    "Africa/Lusaka": "Africa/Maputo",
    "Africa/Windhoek": [
        ["-68.4", "-", "LMT", "-2458166400000"],
        ["-90", "-", "SWAT", "-2109283200000"],
        ["-120", "-", "SAST", "-860968800000"],
        ["-120", "1:00", "SAST", "-845244000000"],
        ["-120", "-", "SAST", "637977600000"],
        ["-120", "-", "CAT", "765331200000"],
        ["-60", "Namibia", "WA%sT"]
    ],
    "Africa/Lagos": [
        ["-13.6", "-", "LMT", "-1588464000000"],
        ["-60", "-", "WAT"]
    ],
    "Africa/Bangui": "Africa/Lagos",
    "Africa/Brazzaville": "Africa/Lagos",
    "Africa/Douala": "Africa/Lagos",
    "Africa/Kinshasa": "Africa/Lagos",
    "Africa/Libreville": "Africa/Lagos",
    "Africa/Luanda": "Africa/Lagos",
    "Africa/Malabo": "Africa/Lagos",
    "Africa/Niamey": "Africa/Lagos",
    "Africa/Porto-Novo": "Africa/Lagos",
    "Indian/Reunion": [
        ["-221.86666666666665", "-", "LMT", "-1848873600000"],
        ["-240", "-", "RET"]
    ],
    "Indian/Mahe": [
        ["-221.8", "-", "LMT", "-2006640000000"],
        ["-240", "-", "SCT"]
    ],
    "Africa/Mogadishu": [
        ["-181.46666666666667", "-", "LMT", "-2403561600000"],
        ["-180", "-", "EAT", "-1199318400000"],
        ["-150", "-", "BEAT", "-378777600000"],
        ["-180", "-", "EAT"]
    ],
    "Africa/Johannesburg": [
        ["-112", "-", "LMT", "-2458166400000"],
        ["-90", "-", "SAST", "-2109283200000"],
        ["-120", "SA", "SAST"]
    ],
    "Africa/Maseru": "Africa/Johannesburg",
    "Africa/Mbabane": "Africa/Johannesburg",
    "Africa/Khartoum": [
        ["-130.13333333333333", "-", "LMT", "-1199318400000"],
        ["-120", "Sudan", "CA%sT", "947937600000"],
        ["-180", "-", "EAT"]
    ],
    "Africa/Juba": "Africa/Khartoum",
    "Africa/Dar_es_Salaam": [
        ["-157.13333333333335", "-", "LMT", "-1199318400000"],
        ["-180", "-", "EAT", "-662774400000"],
        ["-165", "-", "BEAUT", "-252547200000"],
        ["-180", "-", "EAT"]
    ],
    "Africa/Tunis": [
        ["-40.733333333333334", "-", "LMT", "-2797200000000"],
        ["-9.35", "-", "PMT", "-1855958400000"],
        ["-60", "Tunisia", "CE%sT"]
    ],
    "Africa/Kampala": [
        ["-129.66666666666669", "-", "LMT", "-1309737600000"],
        ["-180", "-", "EAT", "-1230854400000"],
        ["-150", "-", "BEAT", "-662774400000"],
        ["-165", "-", "BEAUT", "-378777600000"],
        ["-180", "-", "EAT"]
    ],
    "Antarctica/Casey": [
        ["0", "-", "zzz", "-86400000"],
        ["-480", "-", "AWST", "1255831200000"],
        ["-660", "-", "CAST", "1267754400000"],
        ["-480", "-", "AWST", "1319767200000"],
        ["-660", "-", "CAST", "1329843600000"],
        ["-480", "-", "AWST"]
    ],
    "Antarctica/Davis": [
        ["0", "-", "zzz", "-409190400000"],
        ["-420", "-", "DAVT", "-163036800000"],
        ["0", "-", "zzz", "-28857600000"],
        ["-420", "-", "DAVT", "1255831200000"],
        ["-300", "-", "DAVT", "1268251200000"],
        ["-420", "-", "DAVT", "1319767200000"],
        ["-300", "-", "DAVT", "1329854400000"],
        ["-420", "-", "DAVT"]
    ],
    "Antarctica/Mawson": [
        ["0", "-", "zzz", "-501206400000"],
        ["-360", "-", "MAWT", "1255831200000"],
        ["-300", "-", "MAWT"]
    ],
    "Indian/Kerguelen": [
        ["0", "-", "zzz", "-599702400000"],
        ["-300", "-", "TFT"]
    ],
    "Antarctica/DumontDUrville": [
        ["0", "-", "zzz", "-694396800000"],
        ["-600", "-", "PMT", "-566956800000"],
        ["0", "-", "zzz", "-415497600000"],
        ["-600", "-", "DDUT"]
    ],
    "Antarctica/Syowa": [
        ["0", "-", "zzz", "-407808000000"],
        ["-180", "-", "SYOT"]
    ],
    "Antarctica/Troll": [
        ["0", "-", "zzz", "1108166400000"],
        ["0", "Troll", "%s"]
    ],
    "Antarctica/Vostok": [
        ["0", "-", "zzz", "-380073600000"],
        ["-360", "-", "VOST"]
    ],
    "Antarctica/Rothera": [
        ["0", "-", "zzz", "218246400000"],
        ["180", "-", "ROTT"]
    ],
    "Antarctica/Palmer": [
        ["0", "-", "zzz", "-126316800000"],
        ["240", "ArgAQ", "AR%sT", "-7603200000"],
        ["180", "ArgAQ", "AR%sT", "389059200000"],
        ["240", "ChileAQ", "CL%sT"]
    ],
    "Asia/Kabul": [
        ["-276.8", "-", "LMT", "-2493072000000"],
        ["-240", "-", "AFT", "-757468800000"],
        ["-270", "-", "AFT"]
    ],
    "Asia/Yerevan": [
        ["-178", "-", "LMT", "-1441152000000"],
        ["-180", "-", "YERT", "-405129600000"],
        ["-240", "RussiaAsia", "YER%sT", "670384800000"],
        ["-180", "1:00", "YERST", "685584000000"],
        ["-180", "RussiaAsia", "AM%sT", "811908000000"],
        ["-240", "-", "AMT", "883526400000"],
        ["-240", "RussiaAsia", "AM%sT", "1332640800000"],
        ["-240", "-", "AMT"]
    ],
    "Asia/Baku": [
        ["-199.4", "-", "LMT", "-1441152000000"],
        ["-180", "-", "BAKT", "-405129600000"],
        ["-240", "RussiaAsia", "BAK%sT", "670384800000"],
        ["-180", "1:00", "BAKST", "683510400000"],
        ["-180", "RussiaAsia", "AZ%sT", "715388400000"],
        ["-240", "-", "AZT", "851990400000"],
        ["-240", "EUAsia", "AZ%sT", "883526400000"],
        ["-240", "Azer", "AZ%sT"]
    ],
    "Asia/Bahrain": [
        ["-202.33333333333334", "-", "LMT", "-1546387200000"],
        ["-240", "-", "GST", "76204800000"],
        ["-180", "-", "AST"]
    ],
    "Asia/Dhaka": [
        ["-361.6666666666667", "-", "LMT", "-2493072000000"],
        ["-353.3333333333333", "-", "HMT", "-891561600000"],
        ["-390", "-", "BURT", "-872035200000"],
        ["-330", "-", "IST", "-862617600000"],
        ["-390", "-", "BURT", "-576115200000"],
        ["-360", "-", "DACT", "38793600000"],
        ["-360", "-", "BDT", "1262217600000"],
        ["-360", "Dhaka", "BD%sT"]
    ],
    "Asia/Thimphu": [
        ["-358.6", "-", "LMT", "-706320000000"],
        ["-330", "-", "IST", "560044800000"],
        ["-360", "-", "BTT"]
    ],
    "Indian/Chagos": [
        ["-289.6666666666667", "-", "LMT", "-1956700800000"],
        ["-300", "-", "IOT", "851990400000"],
        ["-360", "-", "IOT"]
    ],
    "Asia/Brunei": [
        ["-459.6666666666667", "-", "LMT", "-1383436800000"],
        ["-450", "-", "BNT", "-1136160000000"],
        ["-480", "-", "BNT"]
    ],
    "Asia/Rangoon": [
        ["-384.6666666666667", "-", "LMT", "-2808604800000"],
        ["-384.6666666666667", "-", "RMT", "-1546387200000"],
        ["-390", "-", "BURT", "-873244800000"],
        ["-540", "-", "JST", "-778377600000"],
        ["-390", "-", "MMT"]
    ],
    "Asia/Phnom_Penh": [
        ["-419.6666666666667", "-", "LMT", "-2005948800000"],
        ["-426.3333333333333", "-", "SMT", "-1855958340000"],
        ["-420", "-", "ICT", "-1819929600000"],
        ["-480", "-", "ICT", "-1220400000000"],
        ["-420", "-", "ICT"]
    ],
    "Asia/Shanghai": [
        ["-485.7166666666667", "-", "LMT", "-2146003200000"],
        ["-480", "Shang", "C%sT", "-631238400000"],
        ["-480", "PRC", "C%sT"]
    ],
    "Asia/Urumqi": [
        ["-350.3333333333333", "-", "LMT", "-1293926400000"],
        ["-360", "-", "XJT"]
    ],
    "Asia/Hong_Kong": [
        ["-456.7", "-", "LMT", "-2056665600000"],
        ["-480", "HK", "HK%sT", "-884217600000"],
        ["-540", "-", "JST", "-766713600000"],
        ["-480", "HK", "HK%sT"]
    ],
    "Asia/Taipei": [
        ["-486", "-", "LMT", "-2335219200000"],
        ["-480", "-", "JWST", "-1017792000000"],
        ["-540", "-", "JST", "-766191600000"],
        ["-480", "Taiwan", "C%sT"]
    ],
    "Asia/Macau": [
        ["-454.3333333333333", "-", "LMT", "-1830384000000"],
        ["-480", "Macau", "MO%sT", "945648000000"],
        ["-480", "PRC", "C%sT"]
    ],
    "Asia/Nicosia": [
        ["-133.46666666666667", "-", "LMT", "-1518912000000"],
        ["-120", "Cyprus", "EE%sT", "904608000000"],
        ["-120", "EUAsia", "EE%sT"]
    ],
    "Europe/Nicosia": "Asia/Nicosia", "Asia/Tbilisi": [
        ["-179.18333333333334", "-", "LMT", "-2808604800000"],
        ["-179.18333333333334", "-", "TBMT", "-1441152000000"],
        ["-180", "-", "TBIT", "-405129600000"],
        ["-240", "RussiaAsia", "TBI%sT", "670384800000"],
        ["-180", "1:00", "TBIST", "671155200000"],
        ["-180", "RussiaAsia", "GE%sT", "725760000000"],
        ["-180", "E-EurAsia", "GE%sT", "778377600000"],
        ["-240", "E-EurAsia", "GE%sT", "844128000000"],
        ["-240", "1:00", "GEST", "857174400000"],
        ["-240", "E-EurAsia", "GE%sT", "1088294400000"],
        ["-180", "RussiaAsia", "GE%sT", "1109642400000"],
        ["-240", "-", "GET"]
    ],
    "Asia/Dili": [
        ["-502.3333333333333", "-", "LMT", "-1830384000000"],
        ["-480", "-", "TLT", "-879123600000"],
        ["-540", "-", "JST", "-766022400000"],
        ["-540", "-", "TLT", "199929600000"],
        ["-480", "-", "WITA", "969148800000"],
        ["-540", "-", "TLT"]
    ],
    "Asia/Kolkata": [
        ["-353.4666666666667", "-", "LMT", "-2808604800000"],
        ["-353.3333333333333", "-", "HMT", "-891561600000"],
        ["-390", "-", "BURT", "-872035200000"],
        ["-330", "-", "IST", "-862617600000"],
        ["-330", "1:00", "IST", "-764121600000"],
        ["-330", "-", "IST"]
    ],
    "Asia/Jakarta": [
        ["-427.2", "-", "LMT", "-3231273600000"],
        ["-427.2", "-", "BMT", "-1451693568000"],
        ["-440", "-", "JAVT", "-1172880000000"],
        ["-450", "-", "WIB", "-876614400000"],
        ["-540", "-", "JST", "-766022400000"],
        ["-450", "-", "WIB", "-683856000000"],
        ["-480", "-", "WIB", "-620784000000"],
        ["-450", "-", "WIB", "-157852800000"],
        ["-420", "-", "WIB"]
    ],
    "Asia/Pontianak": [
        ["-437.3333333333333", "-", "LMT", "-1946160000000"],
        ["-437.3333333333333", "-", "PMT", "-1172880000000"],
        ["-450", "-", "WIB", "-881193600000"],
        ["-540", "-", "JST", "-766022400000"],
        ["-450", "-", "WIB", "-683856000000"],
        ["-480", "-", "WIB", "-620784000000"],
        ["-450", "-", "WIB", "-157852800000"],
        ["-480", "-", "WITA", "567993600000"],
        ["-420", "-", "WIB"]
    ],
    "Asia/Makassar": [
        ["-477.6", "-", "LMT", "-1546387200000"],
        ["-477.6", "-", "MMT", "-1172880000000"],
        ["-480", "-", "WITA", "-880243200000"],
        ["-540", "-", "JST", "-766022400000"],
        ["-480", "-", "WITA"]
    ],
    "Asia/Jayapura": [
        ["-562.8", "-", "LMT", "-1172880000000"],
        ["-540", "-", "WIT", "-799459200000"],
        ["-570", "-", "ACST", "-157852800000"],
        ["-540", "-", "WIT"]
    ],
    "Asia/Tehran": [
        ["-205.73333333333335", "-", "LMT", "-1672617600000"],
        ["-205.73333333333335", "-", "TMT", "-725932800000"],
        ["-210", "-", "IRST", "247190400000"],
        ["-240", "Iran", "IR%sT", "315446400000"],
        ["-210", "Iran", "IR%sT"]
    ],
    "Asia/Baghdad": [
        ["-177.66666666666666", "-", "LMT", "-2493072000000"],
        ["-177.6", "-", "BMT", "-1609545600000"],
        ["-180", "-", "AST", "389059200000"],
        ["-180", "Iraq", "A%sT"]
    ],
    "Asia/Jerusalem": [
        ["-140.9", "-", "LMT", "-2808604800000"],
        ["-140.66666666666666", "-", "JMT", "-1609545600000"],
        ["-120", "Zion", "I%sT"]
    ],
    "Asia/Tokyo": [
        ["-558.9833333333333", "-", "LMT", "-2587712400000"],
        ["-540", "-", "JST", "-2335219200000"],
        ["-540", "-", "JCST", "-1017792000000"],
        ["-540", "Japan", "J%sT"]
    ],
    "Asia/Amman": [
        ["-143.73333333333335", "-", "LMT", "-1199318400000"],
        ["-120", "Jordan", "EE%sT"]
    ],
    "Asia/Almaty": [
        ["-307.8", "-", "LMT", "-1441152000000"],
        ["-300", "-", "ALMT", "-1247529600000"],
        ["-360", "RussiaAsia", "ALM%sT", "694137600000"],
        ["-360", "-", "ALMT", "725760000000"],
        ["-360", "RussiaAsia", "ALM%sT", "1110844800000"],
        ["-360", "-", "ALMT"]
    ],
    "Asia/Qyzylorda": [
        ["-261.8666666666667", "-", "LMT", "-1441152000000"],
        ["-240", "-", "KIZT", "-1247529600000"],
        ["-300", "-", "KIZT", "354931200000"],
        ["-300", "1:00", "KIZST", "370742400000"],
        ["-360", "-", "KIZT", "386467200000"],
        ["-300", "RussiaAsia", "KIZ%sT", "694137600000"],
        ["-300", "-", "KIZT", "692841600000"],
        ["-300", "-", "QYZT", "695786400000"],
        ["-360", "RussiaAsia", "QYZ%sT", "1110844800000"],
        ["-360", "-", "QYZT"]
    ],
    "Asia/Aqtobe": [
        ["-228.66666666666666", "-", "LMT", "-1441152000000"],
        ["-240", "-", "AKTT", "-1247529600000"],
        ["-300", "-", "AKTT", "354931200000"],
        ["-300", "1:00", "AKTST", "370742400000"],
        ["-360", "-", "AKTT", "386467200000"],
        ["-300", "RussiaAsia", "AKT%sT", "694137600000"],
        ["-300", "-", "AKTT", "692841600000"],
        ["-300", "RussiaAsia", "AQT%sT", "1110844800000"],
        ["-300", "-", "AQTT"]
    ],
    "Asia/Aqtau": [
        ["-201.06666666666666", "-", "LMT", "-1441152000000"],
        ["-240", "-", "FORT", "-1247529600000"],
        ["-300", "-", "FORT", "-189475200000"],
        ["-300", "-", "SHET", "370742400000"],
        ["-360", "-", "SHET", "386467200000"],
        ["-300", "RussiaAsia", "SHE%sT", "694137600000"],
        ["-300", "-", "SHET", "692841600000"],
        ["-300", "RussiaAsia", "AQT%sT", "794023200000"],
        ["-240", "RussiaAsia", "AQT%sT", "1110844800000"],
        ["-300", "-", "AQTT"]
    ],
    "Asia/Oral": [
        ["-205.4", "-", "LMT", "-1441152000000"],
        ["-240", "-", "URAT", "-1247529600000"],
        ["-300", "-", "URAT", "354931200000"],
        ["-300", "1:00", "URAST", "370742400000"],
        ["-360", "-", "URAT", "386467200000"],
        ["-300", "RussiaAsia", "URA%sT", "606880800000"],
        ["-240", "RussiaAsia", "URA%sT", "694137600000"],
        ["-240", "-", "URAT", "692841600000"],
        ["-240", "RussiaAsia", "ORA%sT", "1110844800000"],
        ["-300", "-", "ORAT"]
    ],
    "Asia/Bishkek": [
        ["-298.4", "-", "LMT", "-1441152000000"],
        ["-300", "-", "FRUT", "-1247529600000"],
        ["-360", "RussiaAsia", "FRU%sT", "670384800000"],
        ["-300", "1:00", "FRUST", "683604000000"],
        ["-300", "Kyrgyz", "KG%sT", "1123804800000"],
        ["-360", "-", "KGT"]
    ],
    "Asia/Seoul": [
        ["-507.8666666666667", "-", "LMT", "-2493072000000"],
        ["-510", "-", "KST", "-2053900800000"],
        ["-540", "-", "JCST", "-1293926400000"],
        ["-510", "-", "KST", "-1167696000000"],
        ["-540", "-", "JCST", "-1017792000000"],
        ["-540", "-", "JST", "-767318400000"],
        ["-540", "-", "KST", "-498096000000"],
        ["-480", "ROK", "K%sT", "-264902400000"],
        ["-510", "-", "KST", "-39484800000"],
        ["-540", "ROK", "K%sT"]
    ],
    "Asia/Pyongyang": [
        ["-503", "-", "LMT", "-2493072000000"],
        ["-510", "-", "KST", "-2053900800000"],
        ["-540", "-", "JCST", "-1293926400000"],
        ["-510", "-", "KST", "-1167696000000"],
        ["-540", "-", "JCST", "-1017792000000"],
        ["-540", "-", "JST", "-768614400000"],
        ["-540", "-", "KST", "-498096000000"],
        ["-480", "-", "KST", "-264902400000"],
        ["-540", "-", "KST"]
    ],
    "Asia/Kuwait": [
        ["-191.93333333333334", "-", "LMT", "-599702400000"],
        ["-180", "-", "AST"]
    ],
    "Asia/Vientiane": [
        ["-410.4", "-", "LMT", "-2005948800000"],
        ["-426.3333333333333", "-", "SMT", "-1855958340000"],
        ["-420", "-", "ICT", "-1819929600000"],
        ["-480", "-", "ICT", "-1220400000000"],
        ["-420", "-", "ICT"]
    ],
    "Asia/Beirut": [
        ["-142", "-", "LMT", "-2808604800000"],
        ["-120", "Lebanon", "EE%sT"]
    ],
    "Asia/Kuala_Lumpur": [
        ["-406.7666666666667", "-", "LMT", "-2177452800000"],
        ["-415.4166666666667", "-", "SMT", "-2038176000000"],
        ["-420", "-", "MALT", "-1167609600000"],
        ["-420", "0:20", "MALST", "-1073001600000"],
        ["-440", "-", "MALT", "-894153600000"],
        ["-450", "-", "MALT", "-879638400000"],
        ["-540", "-", "JST", "-766972800000"],
        ["-450", "-", "MALT", "378691200000"],
        ["-480", "-", "MYT"]
    ],
    "Asia/Kuching": [
        ["-441.3333333333333", "-", "LMT", "-1383436800000"],
        ["-450", "-", "BORT", "-1136160000000"],
        ["-480", "NBorneo", "BOR%sT", "-879638400000"],
        ["-540", "-", "JST", "-766972800000"],
        ["-480", "-", "BORT", "378691200000"],
        ["-480", "-", "MYT"]
    ],
    "Indian/Maldives": [
        ["-294", "-", "LMT", "-2808604800000"],
        ["-294", "-", "MMT", "-284083200000"],
        ["-300", "-", "MVT"]
    ],
    "Asia/Hovd": [
        ["-366.6", "-", "LMT", "-2032905600000"],
        ["-360", "-", "HOVT", "283910400000"],
        ["-420", "Mongol", "HOV%sT"]
    ],
    "Asia/Ulaanbaatar": [
        ["-427.5333333333333", "-", "LMT", "-2032905600000"],
        ["-420", "-", "ULAT", "283910400000"],
        ["-480", "Mongol", "ULA%sT"]
    ],
    "Asia/Choibalsan": [
        ["-458", "-", "LMT", "-2032905600000"],
        ["-420", "-", "ULAT", "283910400000"],
        ["-480", "-", "ULAT", "418003200000"],
        ["-540", "Mongol", "CHO%sT", "1206921600000"],
        ["-480", "Mongol", "CHO%sT"]
    ],
    "Asia/Kathmandu": [
        ["-341.2666666666667", "-", "LMT", "-1546387200000"],
        ["-330", "-", "IST", "536371200000"],
        ["-345", "-", "NPT"]
    ],
    "Asia/Muscat": [
        ["-234.4", "-", "LMT", "-1546387200000"],
        ["-240", "-", "GST"]
    ],
    "Asia/Karachi": [
        ["-268.2", "-", "LMT", "-1956700800000"],
        ["-330", "-", "IST", "-862617600000"],
        ["-330", "1:00", "IST", "-764121600000"],
        ["-330", "-", "IST", "-576115200000"],
        ["-300", "-", "KART", "38793600000"],
        ["-300", "Pakistan", "PK%sT"]
    ],
    "Asia/Gaza": [
        ["-137.86666666666665", "-", "LMT", "-2185401600000"],
        ["-120", "Zion", "EET", "-682646400000"],
        ["-120", "EgyptAsia", "EE%sT", "-81302400000"],
        ["-120", "Zion", "I%sT", "851990400000"],
        ["-120", "Jordan", "EE%sT", "946598400000"],
        ["-120", "Palestine", "EE%sT", "1219968000000"],
        ["-120", "-", "EET", "1220227200000"],
        ["-120", "Palestine", "EE%sT", "1293753600000"],
        ["-120", "-", "EET", "1269648060000"],
        ["-120", "Palestine", "EE%sT", "1312156800000"],
        ["-120", "-", "EET", "1356912000000"],
        ["-120", "Palestine", "EE%sT"]
    ],
    "Asia/Hebron": [
        ["-140.38333333333335", "-", "LMT", "-2185401600000"],
        ["-120", "Zion", "EET", "-682646400000"],
        ["-120", "EgyptAsia", "EE%sT", "-81302400000"],
        ["-120", "Zion", "I%sT", "851990400000"],
        ["-120", "Jordan", "EE%sT", "946598400000"],
        ["-120", "Palestine", "EE%sT"]
    ],
    "Asia/Manila": [
        ["956", "-", "LMT", "-3944678400000"],
        ["-484", "-", "LMT", "-2229292800000"],
        ["-480", "Phil", "PH%sT", "-873244800000"],
        ["-540", "-", "JST", "-794188800000"],
        ["-480", "Phil", "PH%sT"]
    ],
    "Asia/Qatar": [
        ["-206.13333333333335", "-", "LMT", "-1546387200000"],
        ["-240", "-", "GST", "76204800000"],
        ["-180", "-", "AST"]
    ],
    "Asia/Riyadh": [
        ["-186.86666666666665", "-", "LMT", "-719625600000"],
        ["-180", "-", "AST"]
    ],
    "Asia/Singapore": [
        ["-415.4166666666667", "-", "LMT", "-2177452800000"],
        ["-415.4166666666667", "-", "SMT", "-2038176000000"],
        ["-420", "-", "MALT", "-1167609600000"],
        ["-420", "0:20", "MALST", "-1073001600000"],
        ["-440", "-", "MALT", "-894153600000"],
        ["-450", "-", "MALT", "-879638400000"],
        ["-540", "-", "JST", "-766972800000"],
        ["-450", "-", "MALT", "-138758400000"],
        ["-450", "-", "SGT", "378691200000"],
        ["-480", "-", "SGT"]
    ],
    "Asia/Colombo": [
        ["-319.4", "-", "LMT", "-2808604800000"],
        ["-319.5333333333333", "-", "MMT", "-1988236800000"],
        ["-330", "-", "IST", "-883267200000"],
        ["-330", "0:30", "IHST", "-862617600000"],
        ["-330", "1:00", "IST", "-764028000000"],
        ["-330", "-", "IST", "832982400000"],
        ["-390", "-", "LKT", "846289800000"],
        ["-360", "-", "LKT", "1145061000000"],
        ["-330", "-", "IST"]
    ],
    "Asia/Damascus": [
        ["-145.2", "-", "LMT", "-1546387200000"],
        ["-120", "Syria", "EE%sT"]
    ],
    "Asia/Dushanbe": [
        ["-275.2", "-", "LMT", "-1441152000000"],
        ["-300", "-", "DUST", "-1247529600000"],
        ["-360", "RussiaAsia", "DUS%sT", "670384800000"],
        ["-300", "1:00", "DUSST", "684381600000"],
        ["-300", "-", "TJT"]
    ],
    "Asia/Bangkok": [
        ["-402.06666666666666", "-", "LMT", "-2808604800000"],
        ["-402.06666666666666", "-", "BMT", "-1570060800000"],
        ["-420", "-", "ICT"]
    ],
    "Asia/Ashgabat": [
        ["-233.53333333333333", "-", "LMT", "-1441152000000"],
        ["-240", "-", "ASHT", "-1247529600000"],
        ["-300", "RussiaAsia", "ASH%sT", "670384800000"],
        ["-240", "RussiaAsia", "ASH%sT", "688521600000"],
        ["-240", "RussiaAsia", "TM%sT", "695786400000"],
        ["-300", "-", "TMT"]
    ],
    "Asia/Dubai": [
        ["-221.2", "-", "LMT", "-1546387200000"],
        ["-240", "-", "GST"]
    ],
    "Asia/Samarkand": [
        ["-267.8833333333333", "-", "LMT", "-1441152000000"],
        ["-240", "-", "SAMT", "-1247529600000"],
        ["-300", "-", "SAMT", "354931200000"],
        ["-300", "1:00", "SAMST", "370742400000"],
        ["-360", "-", "TAST", "386467200000"],
        ["-300", "RussiaAsia", "SAM%sT", "683683200000"],
        ["-300", "RussiaAsia", "UZ%sT", "725760000000"],
        ["-300", "-", "UZT"]
    ],
    "Asia/Tashkent": [
        ["-277.18333333333334", "-", "LMT", "-1441152000000"],
        ["-300", "-", "TAST", "-1247529600000"],
        ["-360", "RussiaAsia", "TAS%sT", "670384800000"],
        ["-300", "RussiaAsia", "TAS%sT", "683683200000"],
        ["-300", "RussiaAsia", "UZ%sT", "725760000000"],
        ["-300", "-", "UZT"]
    ],
    "Asia/Ho_Chi_Minh": [
        ["-426.6666666666667", "-", "LMT", "-2005948800000"],
        ["-426.3333333333333", "-", "SMT", "-1855958340000"],
        ["-420", "-", "ICT", "-1819929600000"],
        ["-480", "-", "ICT", "-1220400000000"],
        ["-420", "-", "ICT"]
    ],
    "Asia/Aden": [
        ["-179.9", "-", "LMT", "-599702400000"],
        ["-180", "-", "AST"]
    ],
    "Australia/Darwin": [
        ["-523.3333333333333", "-", "LMT", "-2364076800000"],
        ["-540", "-", "ACST", "-2230156800000"],
        ["-570", "Aus", "AC%sT"]
    ],
    "Australia/Perth": [
        ["-463.4", "-", "LMT", "-2337897600000"],
        ["-480", "Aus", "AW%sT", "-836438400000"],
        ["-480", "AW", "AW%sT"]
    ],
    "Australia/Eucla": [
        ["-515.4666666666667", "-", "LMT", "-2337897600000"],
        ["-525", "Aus", "ACW%sT", "-836438400000"],
        ["-525", "AW", "ACW%sT"]
    ],
    "Australia/Brisbane": [
        ["-612.1333333333333", "-", "LMT", "-2335305600000"],
        ["-600", "Aus", "AE%sT", "62985600000"],
        ["-600", "AQ", "AE%sT"]
    ],
    "Australia/Lindeman": [
        ["-595.9333333333334", "-", "LMT", "-2335305600000"],
        ["-600", "Aus", "AE%sT", "62985600000"],
        ["-600", "AQ", "AE%sT", "709948800000"],
        ["-600", "Holiday", "AE%sT"]
    ],
    "Australia/Adelaide": [
        ["-554.3333333333334", "-", "LMT", "-2364076800000"],
        ["-540", "-", "ACST", "-2230156800000"],
        ["-570", "Aus", "AC%sT", "62985600000"],
        ["-570", "AS", "AC%sT"]
    ],
    "Australia/Hobart": [
        ["-589.2666666666667", "-", "LMT", "-2345760000000"],
        ["-600", "-", "AEST", "-1680472800000"],
        ["-600", "1:00", "AEDT", "-1669852800000"],
        ["-600", "Aus", "AE%sT", "-63244800000"],
        ["-600", "AT", "AE%sT"]
    ],
    "Australia/Currie": [
        ["-575.4666666666666", "-", "LMT", "-2345760000000"],
        ["-600", "-", "AEST", "-1680472800000"],
        ["-600", "1:00", "AEDT", "-1669852800000"],
        ["-600", "Aus", "AE%sT", "47174400000"],
        ["-600", "AT", "AE%sT"]
    ],
    "Australia/Melbourne": [
        ["-579.8666666666667", "-", "LMT", "-2364076800000"],
        ["-600", "Aus", "AE%sT", "62985600000"],
        ["-600", "AV", "AE%sT"]
    ],
    "Australia/Sydney": [
        ["-604.8666666666667", "-", "LMT", "-2364076800000"],
        ["-600", "Aus", "AE%sT", "62985600000"],
        ["-600", "AN", "AE%sT"]
    ],
    "Australia/Broken_Hill": [
        ["-565.8", "-", "LMT", "-2364076800000"],
        ["-600", "-", "AEST", "-2314915200000"],
        ["-540", "-", "ACST", "-2230156800000"],
        ["-570", "Aus", "AC%sT", "62985600000"],
        ["-570", "AN", "AC%sT", "978220800000"],
        ["-570", "AS", "AC%sT"]
    ],
    "Australia/Lord_Howe": [
        ["-636.3333333333334", "-", "LMT", "-2364076800000"],
        ["-600", "-", "AEST", "352252800000"],
        ["-630", "LH", "LH%sT"]
    ],
    "Antarctica/Macquarie": [
        ["0", "-", "zzz", "-2214259200000"],
        ["-600", "-", "AEST", "-1680472800000"],
        ["-600", "1:00", "AEDT", "-1669852800000"],
        ["-600", "Aus", "AE%sT", "-1601683200000"],
        ["0", "-", "zzz", "-687052800000"],
        ["-600", "Aus", "AE%sT", "-63244800000"],
        ["-600", "AT", "AE%sT", "1270350000000"],
        ["-660", "-", "MIST"]
    ],
    "Indian/Christmas": [
        ["-422.8666666666667", "-", "LMT", "-2364076800000"],
        ["-420", "-", "CXT"]
    ],
    "Indian/Cocos": [
        ["-387.6666666666667", "-", "LMT", "-2177539200000"],
        ["-390", "-", "CCT"]
    ],
    "Pacific/Fiji": [
        ["-715.7333333333333", "-", "LMT", "-1709942400000"],
        ["-720", "Fiji", "FJ%sT"]
    ],
    "Pacific/Gambier": [
        ["539.8", "-", "LMT", "-1806710400000"],
        ["540", "-", "GAMT"]
    ],
    "Pacific/Marquesas": [
        ["558", "-", "LMT", "-1806710400000"],
        ["570", "-", "MART"]
    ],
    "Pacific/Tahiti": [
        ["598.2666666666667", "-", "LMT", "-1806710400000"],
        ["600", "-", "TAHT"]
    ],
    "Pacific/Guam": [
        ["861", "-", "LMT", "-3944678400000"],
        ["-579", "-", "LMT", "-2146003200000"],
        ["-600", "-", "GST", "977529600000"],
        ["-600", "-", "ChST"]
    ],
    "Pacific/Tarawa": [
        ["-692.0666666666666", "-", "LMT", "-2146003200000"],
        ["-720", "-", "GILT"]
    ],
    "Pacific/Enderbury": [
        ["684.3333333333334", "-", "LMT", "-2146003200000"],
        ["720", "-", "PHOT", "307584000000"],
        ["660", "-", "PHOT", "820368000000"],
        ["-780", "-", "PHOT"]
    ],
    "Pacific/Kiritimati": [
        ["629.3333333333334", "-", "LMT", "-2146003200000"],
        ["640", "-", "LINT", "307584000000"],
        ["600", "-", "LINT", "820368000000"],
        ["-840", "-", "LINT"]
    ],
    "Pacific/Saipan": [
        ["857", "-", "LMT", "-3944678400000"],
        ["-583", "-", "LMT", "-2146003200000"],
        ["-540", "-", "MPT", "-7948800000"],
        ["-600", "-", "MPT", "977529600000"],
        ["-600", "-", "ChST"]
    ],
    "Pacific/Majuro": [
        ["-684.8", "-", "LMT", "-2146003200000"],
        ["-660", "-", "MHT", "-7948800000"],
        ["-720", "-", "MHT"]
    ],
    "Pacific/Kwajalein": [
        ["-669.3333333333334", "-", "LMT", "-2146003200000"],
        ["-660", "-", "MHT", "-7948800000"],
        ["720", "-", "KWAT", "745804800000"],
        ["-720", "-", "MHT"]
    ],
    "Pacific/Chuuk": [
        ["-607.1333333333333", "-", "LMT", "-2146003200000"],
        ["-600", "-", "CHUT"]
    ],
    "Pacific/Pohnpei": [
        ["-632.8666666666667", "-", "LMT", "-2146003200000"],
        ["-660", "-", "PONT"]
    ],
    "Pacific/Kosrae": [
        ["-651.9333333333334", "-", "LMT", "-2146003200000"],
        ["-660", "-", "KOST", "-7948800000"],
        ["-720", "-", "KOST", "946598400000"],
        ["-660", "-", "KOST"]
    ],
    "Pacific/Nauru": [
        ["-667.6666666666666", "-", "LMT", "-1545091200000"],
        ["-690", "-", "NRT", "-877305600000"],
        ["-540", "-", "JST", "-800928000000"],
        ["-690", "-", "NRT", "294364800000"],
        ["-720", "-", "NRT"]
    ],
    "Pacific/Noumea": [
        ["-665.8", "-", "LMT", "-1829347200000"],
        ["-660", "NC", "NC%sT"]
    ],
    "Pacific/Auckland": [
        ["-699.0666666666666", "-", "LMT", "-3192393600000"],
        ["-690", "NZ", "NZ%sT", "-757382400000"],
        ["-720", "NZ", "NZ%sT"]
    ],
    "Pacific/Chatham": [
        ["-733.8", "-", "LMT", "-3192393600000"],
        ["-735", "-", "CHAST", "-757382400000"],
        ["-765", "Chatham", "CHA%sT"]
    ],
    "Antarctica/McMurdo": "Pacific/Auckland", "Pacific/Rarotonga": [
        ["639.0666666666666", "-", "LMT", "-2146003200000"],
        ["630", "-", "CKT", "279676800000"],
        ["600", "Cook", "CK%sT"]
    ],
    "Pacific/Niue": [
        ["679.6666666666666", "-", "LMT", "-2146003200000"],
        ["680", "-", "NUT", "-568166400000"],
        ["690", "-", "NUT", "276048000000"],
        ["660", "-", "NUT"]
    ],
    "Pacific/Norfolk": [
        ["-671.8666666666667", "-", "LMT", "-2146003200000"],
        ["-672", "-", "NMT", "-568166400000"],
        ["-690", "-", "NFT"]
    ],
    "Pacific/Palau": [
        ["-537.9333333333334", "-", "LMT", "-2146003200000"],
        ["-540", "-", "PWT"]
    ],
    "Pacific/Port_Moresby": [
        ["-588.6666666666666", "-", "LMT", "-2808604800000"],
        ["-588.5333333333334", "-", "PMMT", "-2335305600000"],
        ["-600", "-", "PGT"]
    ],
    "Pacific/Pitcairn": [
        ["520.3333333333333", "-", "LMT", "-2146003200000"],
        ["510", "-", "PNT", "893635200000"],
        ["480", "-", "PST"]
    ],
    "Pacific/Pago_Pago": [
        ["-757.2", "-", "LMT", "-2855692800000"],
        ["682.8", "-", "LMT", "-1830470400000"],
        ["660", "-", "NST", "-86918400000"],
        ["660", "-", "BST", "438998400000"],
        ["660", "-", "SST"]
    ],
    "Pacific/Apia": [
        ["-753.0666666666666", "-", "LMT", "-2855692800000"],
        ["686.9333333333334", "-", "LMT", "-1830470400000"],
        ["690", "-", "WSST", "-599702400000"],
        ["660", "WS", "S%sT", "1325203200000"],
        ["-780", "WS", "WS%sT"]
    ],
    "Pacific/Guadalcanal": [
        ["-639.8", "-", "LMT", "-1806710400000"],
        ["-660", "-", "SBT"]
    ],
    "Pacific/Fakaofo": [
        ["684.9333333333334", "-", "LMT", "-2146003200000"],
        ["660", "-", "TKT", "1325203200000"],
        ["-780", "-", "TKT"]
    ],
    "Pacific/Tongatapu": [
        ["-739.3333333333334", "-", "LMT", "-2146003200000"],
        ["-740", "-", "TOT", "-883699200000"],
        ["-780", "-", "TOT", "946598400000"],
        ["-780", "Tonga", "TO%sT"]
    ],
    "Pacific/Funafuti": [
        ["-716.8666666666667", "-", "LMT", "-2146003200000"],
        ["-720", "-", "TVT"]
    ],
    "Pacific/Midway": [
        ["709.4666666666666", "-", "LMT", "-2146003200000"],
        ["660", "-", "NST", "-428544000000"],
        ["660", "1:00", "NDT", "-420681600000"],
        ["660", "-", "NST", "-86918400000"],
        ["660", "-", "BST", "438998400000"],
        ["660", "-", "SST"]
    ],
    "Pacific/Wake": [
        ["-666.4666666666666", "-", "LMT", "-2146003200000"],
        ["-720", "-", "WAKT"]
    ],
    "Pacific/Efate": [
        ["-673.2666666666667", "-", "LMT", "-1829347200000"],
        ["-660", "Vanuatu", "VU%sT"]
    ],
    "Pacific/Wallis": [
        ["-735.3333333333334", "-", "LMT", "-2146003200000"],
        ["-720", "-", "WFT"]
    ],
    "Africa/Asmera": "Africa/Asmara",
    "Africa/Timbuktu": "Africa/Abidjan",
    "America/Argentina/ComodRivadavia": "America/Argentina/Catamarca",
    "America/Atka": "America/Adak",
    "America/Buenos_Aires": "America/Argentina/Buenos_Aires",
    "America/Catamarca": "America/Argentina/Catamarca",
    "America/Coral_Harbour": "America/Atikokan",
    "America/Cordoba": "America/Argentina/Cordoba",
    "America/Ensenada": "America/Tijuana",
    "America/Fort_Wayne": "America/Indiana/Indianapolis",
    "America/Indianapolis": "America/Indiana/Indianapolis",
    "America/Jujuy": "America/Argentina/Jujuy",
    "America/Knox_IN": "America/Indiana/Knox",
    "America/Louisville": "America/Kentucky/Louisville",
    "America/Mendoza": "America/Argentina/Mendoza",
    "America/Porto_Acre": "America/Rio_Branco",
    "America/Rosario": "America/Argentina/Cordoba",
    "America/Shiprock": "America/Denver",
    "America/Virgin": "America/Port_of_Spain",
    "Antarctica/South_Pole": "Pacific/Auckland",
    "Asia/Ashkhabad": "Asia/Ashgabat",
    "Asia/Calcutta": "Asia/Kolkata",
    "Asia/Chongqing": "Asia/Shanghai",
    "Asia/Chungking": "Asia/Shanghai",
    "Asia/Dacca": "Asia/Dhaka",
    "Asia/Harbin": "Asia/Shanghai",
    "Asia/Kashgar": "Asia/Urumqi",
    "Asia/Katmandu": "Asia/Kathmandu",
    "Asia/Macao": "Asia/Macau",
    "Asia/Saigon": "Asia/Ho_Chi_Minh",
    "Asia/Tel_Aviv": "Asia/Jerusalem",
    "Asia/Thimbu": "Asia/Thimphu",
    "Asia/Ujung_Pandang": "Asia/Makassar",
    "Asia/Ulan_Bator": "Asia/Ulaanbaatar",
    "Atlantic/Faeroe": "Atlantic/Faroe",
    "Atlantic/Jan_Mayen": "Europe/Oslo",
    "Australia/ACT": "Australia/Sydney",
    "Australia/Canberra": "Australia/Sydney",
    "Australia/LHI": "Australia/Lord_Howe",
    "Australia/NSW": "Australia/Sydney",
    "Australia/North": "Australia/Darwin",
    "Australia/Queensland": "Australia/Brisbane",
    "Australia/South": "Australia/Adelaide",
    "Australia/Tasmania": "Australia/Hobart",
    "Australia/Victoria": "Australia/Melbourne",
    "Australia/West": "Australia/Perth",
    "Australia/Yancowinna": "Australia/Broken_Hill",
    "Brazil/Acre": "America/Rio_Branco",
    "Brazil/DeNoronha": "America/Noronha",
    "Brazil/East": "America/Sao_Paulo",
    "Brazil/West": "America/Manaus",
    "Canada/Atlantic": "America/Halifax",
    "Canada/Central": "America/Winnipeg",
    "Canada/East-Saskatchewan": "America/Regina",
    "Canada/Eastern": "America/Toronto",
    "Canada/Mountain": "America/Edmonton",
    "Canada/Newfoundland": "America/St_Johns",
    "Canada/Pacific": "America/Vancouver",
    "Canada/Saskatchewan": "America/Regina",
    "Canada/Yukon": "America/Whitehorse",
    "Chile/Continental": "America/Santiago",
    "Chile/EasterIsland": "Pacific/Easter",
    "Cuba": "America/Havana",
    "Egypt": "Africa/Cairo",
    "Eire": "Europe/Dublin",
    "Europe/Belfast": "Europe/London",
    "Europe/Tiraspol": "Europe/Chisinau",
    "GB": "Europe/London",
    "GB-Eire": "Europe/London",
    "GMT+0": "Etc/GMT",
    "GMT-0": "Etc/GMT",
    "GMT0": "Etc/GMT",
    "Greenwich": "Etc/GMT",
    "Hongkong": "Asia/Hong_Kong",
    "Iceland": "Atlantic/Reykjavik",
    "Iran": "Asia/Tehran",
    "Israel": "Asia/Jerusalem",
    "Jamaica": "America/Jamaica",
    "Japan": "Asia/Tokyo",
    "Kwajalein": "Pacific/Kwajalein",
    "Libya": "Africa/Tripoli",
    "Mexico/BajaNorte": "America/Tijuana",
    "Mexico/BajaSur": "America/Mazatlan",
    "Mexico/General": "America/Mexico_City",
    "NZ": "Pacific/Auckland",
    "NZ-CHAT": "Pacific/Chatham",
    "Navajo": "America/Denver",
    "PRC": "Asia/Shanghai",
    "Pacific/Ponape": "Pacific/Pohnpei",
    "Pacific/Samoa": "Pacific/Pago_Pago",
    "Pacific/Truk": "Pacific/Chuuk",
    "Pacific/Yap": "Pacific/Chuuk",
    "Poland": "Europe/Warsaw",
    "Portugal": "Europe/Lisbon",
    "ROC": "Asia/Taipei",
    "ROK": "Asia/Seoul",
    "Singapore": "Asia/Singapore",
    "Turkey": "Europe/Istanbul",
    "UCT": "Etc/UCT",
    "US/Alaska": "America/Anchorage",
    "US/Aleutian": "America/Adak",
    "US/Arizona": "America/Phoenix",
    "US/Central": "America/Chicago",
    "US/East-Indiana": "America/Indiana/Indianapolis",
    "US/Eastern": "America/New_York",
    "US/Hawaii": "Pacific/Honolulu",
    "US/Indiana-Starke": "America/Indiana/Knox",
    "US/Michigan": "America/Detroit",
    "US/Mountain": "America/Denver",
    "US/Pacific": "America/Los_Angeles",
    "US/Samoa": "Pacific/Pago_Pago",
    "UTC": "Etc/UTC",
    "Universal": "Etc/UTC",
    "W-SU": "Europe/Moscow",
    "Zulu": "Etc/UTC", "Etc/GMT": [
        ["0", "-", "GMT"]
    ],
    "Etc/UTC": [
        ["0", "-", "UTC"]
    ],
    "Etc/UCT": [
        ["0", "-", "UCT"]
    ],
    "GMT": "Etc/GMT",
    "Etc/Universal": "Etc/UTC",
    "Etc/Zulu": "Etc/UTC",
    "Etc/Greenwich": "Etc/GMT",
    "Etc/GMT-0": "Etc/GMT",
    "Etc/GMT+0": "Etc/GMT",
    "Etc/GMT0": "Etc/GMT",
    "Etc/GMT-14": [
        ["-840", "-", "GMT-14"]
    ],
    "Etc/GMT-13": [
        ["-780", "-", "GMT-13"]
    ],
    "Etc/GMT-12": [
        ["-720", "-", "GMT-12"]
    ],
    "Etc/GMT-11": [
        ["-660", "-", "GMT-11"]
    ],
    "Etc/GMT-10": [
        ["-600", "-", "GMT-10"]
    ],
    "Etc/GMT-9": [
        ["-540", "-", "GMT-9"]
    ],
    "Etc/GMT-8": [
        ["-480", "-", "GMT-8"]
    ],
    "Etc/GMT-7": [
        ["-420", "-", "GMT-7"]
    ],
    "Etc/GMT-6": [
        ["-360", "-", "GMT-6"]
    ],
    "Etc/GMT-5": [
        ["-300", "-", "GMT-5"]
    ],
    "Etc/GMT-4": [
        ["-240", "-", "GMT-4"]
    ],
    "Etc/GMT-3": [
        ["-180", "-", "GMT-3"]
    ],
    "Etc/GMT-2": [
        ["-120", "-", "GMT-2"]
    ],
    "Etc/GMT-1": [
        ["-60", "-", "GMT-1"]
    ],
    "Etc/GMT+1": [
        ["60", "-", "GMT+1"]
    ],
    "Etc/GMT+2": [
        ["120", "-", "GMT+2"]
    ],
    "Etc/GMT+3": [
        ["180", "-", "GMT+3"]
    ],
    "Etc/GMT+4": [
        ["240", "-", "GMT+4"]
    ],
    "Etc/GMT+5": [
        ["300", "-", "GMT+5"]
    ],
    "Etc/GMT+6": [
        ["360", "-", "GMT+6"]
    ],
    "Etc/GMT+7": [
        ["420", "-", "GMT+7"]
    ],
    "Etc/GMT+8": [
        ["480", "-", "GMT+8"]
    ],
    "Etc/GMT+9": [
        ["540", "-", "GMT+9"]
    ],
    "Etc/GMT+10": [
        ["600", "-", "GMT+10"]
    ],
    "Etc/GMT+11": [
        ["660", "-", "GMT+11"]
    ],
    "Etc/GMT+12": [
        ["720", "-", "GMT+12"]
    ],
    "Europe/London": [
        ["1.25", "-", "LMT", "-3852662400000"],
        ["0", "GB-Eire", "%s", "-37238400000"],
        ["-60", "-", "BST", "57722400000"],
        ["0", "GB-Eire", "%s", "851990400000"],
        ["0", "EU", "GMT/BST"]
    ],
    "Europe/Jersey": "Europe/London", "Europe/Guernsey": "Europe/London", "Europe/Isle_of_Man": "Europe/London", "Europe/Dublin": [
        ["25", "-", "LMT", "-2821651200000"],
        ["25.35", "-", "DMT", "-1691964000000"],
        ["25.35", "1:00", "IST", "-1680472800000"],
        ["0", "GB-Eire", "%s", "-1517011200000"],
        ["0", "GB-Eire", "GMT/IST", "-942012000000"],
        ["0", "1:00", "IST", "-733356000000"],
        ["0", "-", "GMT", "-719445600000"],
        ["0", "1:00", "IST", "-699487200000"],
        ["0", "-", "GMT", "-684972000000"],
        ["0", "GB-Eire", "GMT/IST", "-37238400000"],
        ["-60", "-", "IST", "57722400000"],
        ["0", "GB-Eire", "GMT/IST", "851990400000"],
        ["0", "EU", "GMT/IST"]
    ],
    "WET": [
        ["0", "EU", "WE%sT"]
    ],
    "CET": [
        ["-60", "C-Eur", "CE%sT"]
    ],
    "MET": [
        ["-60", "C-Eur", "ME%sT"]
    ],
    "EET": [
        ["-120", "EU", "EE%sT"]
    ],
    "Europe/Tirane": [
        ["-79.33333333333333", "-", "LMT", "-1735776000000"],
        ["-60", "-", "CET", "-932342400000"],
        ["-60", "Albania", "CE%sT", "457488000000"],
        ["-60", "EU", "CE%sT"]
    ],
    "Europe/Andorra": [
        ["-6.066666666666667", "-", "LMT", "-2146003200000"],
        ["0", "-", "WET", "-733881600000"],
        ["-60", "-", "CET", "481082400000"],
        ["-60", "EU", "CE%sT"]
    ],
    "Europe/Vienna": [
        ["-65.35", "-", "LMT", "-2422051200000"],
        ["-60", "C-Eur", "CE%sT", "-1546387200000"],
        ["-60", "Austria", "CE%sT", "-938901600000"],
        ["-60", "C-Eur", "CE%sT", "-781048800000"],
        ["-60", "1:00", "CEST", "-780184800000"],
        ["-60", "-", "CET", "-725932800000"],
        ["-60", "Austria", "CE%sT", "378604800000"],
        ["-60", "EU", "CE%sT"]
    ],
    "Europe/Minsk": [
        ["-110.26666666666667", "-", "LMT", "-2808604800000"],
        ["-110", "-", "MMT", "-1441152000000"],
        ["-120", "-", "EET", "-1247529600000"],
        ["-180", "-", "MSK", "-899769600000"],
        ["-60", "C-Eur", "CE%sT", "-804643200000"],
        ["-180", "Russia", "MSK/MSD", "662601600000"],
        ["-180", "-", "MSK", "670384800000"],
        ["-120", "1:00", "EEST", "686109600000"],
        ["-120", "-", "EET", "701827200000"],
        ["-120", "1:00", "EEST", "717552000000"],
        ["-120", "Russia", "EE%sT", "1301191200000"],
        ["-180", "-", "FET"]
    ],
    "Europe/Brussels": [
        ["-17.5", "-", "LMT", "-2808604800000"],
        ["-17.5", "-", "BMT", "-2450952000000"],
        ["0", "-", "WET", "-1740355200000"],
        ["-60", "-", "CET", "-1693699200000"],
        ["-60", "C-Eur", "CE%sT", "-1613826000000"],
        ["0", "Belgium", "WE%sT", "-934668000000"],
        ["-60", "C-Eur", "CE%sT", "-799286400000"],
        ["-60", "Belgium", "CE%sT", "252374400000"],
        ["-60", "EU", "CE%sT"]
    ],
    "Europe/Sofia": [
        ["-93.26666666666667", "-", "LMT", "-2808604800000"],
        ["-116.93333333333332", "-", "IMT", "-2369520000000"],
        ["-120", "-", "EET", "-857250000000"],
        ["-60", "C-Eur", "CE%sT", "-757468800000"],
        ["-60", "-", "CET", "-781045200000"],
        ["-120", "-", "EET", "291769200000"],
        ["-120", "Bulg", "EE%sT", "401853600000"],
        ["-120", "C-Eur", "EE%sT", "694137600000"],
        ["-120", "E-Eur", "EE%sT", "883526400000"],
        ["-120", "EU", "EE%sT"]
    ],
    "Europe/Prague": [
        ["-57.733333333333334", "-", "LMT", "-3755376000000"],
        ["-57.733333333333334", "-", "PMT", "-2469398400000"],
        ["-60", "C-Eur", "CE%sT", "-798069600000"],
        ["-60", "Czech", "CE%sT", "315446400000"],
        ["-60", "EU", "CE%sT"]
    ],
    "Europe/Copenhagen": [
        ["-50.333333333333336", "-", "LMT", "-2493072000000"],
        ["-50.333333333333336", "-", "CMT", "-2398291200000"],
        ["-60", "Denmark", "CE%sT", "-857253600000"],
        ["-60", "C-Eur", "CE%sT", "-781048800000"],
        ["-60", "Denmark", "CE%sT", "347068800000"],
        ["-60", "EU", "CE%sT"]
    ],
    "Atlantic/Faroe": [
        ["27.066666666666666", "-", "LMT", "-1955750400000"],
        ["0", "-", "WET", "378604800000"],
        ["0", "EU", "WE%sT"]
    ],
    "America/Danmarkshavn": [
        ["74.66666666666667", "-", "LMT", "-1686096000000"],
        ["180", "-", "WGT", "323834400000"],
        ["180", "EU", "WG%sT", "851990400000"],
        ["0", "-", "GMT"]
    ],
    "America/Scoresbysund": [
        ["87.86666666666667", "-", "LMT", "-1686096000000"],
        ["120", "-", "CGT", "323834400000"],
        ["120", "C-Eur", "CG%sT", "354672000000"],
        ["60", "EU", "EG%sT"]
    ],
    "America/Godthab": [
        ["206.93333333333334", "-", "LMT", "-1686096000000"],
        ["180", "-", "WGT", "323834400000"],
        ["180", "EU", "WG%sT"]
    ],
    "America/Thule": [
        ["275.1333333333333", "-", "LMT", "-1686096000000"],
        ["240", "Thule", "A%sT"]
    ],
    "Europe/Tallinn": [
        ["-99", "-", "LMT", "-2808604800000"],
        ["-99", "-", "TMT", "-1638316800000"],
        ["-60", "C-Eur", "CE%sT", "-1593820800000"],
        ["-99", "-", "TMT", "-1535932800000"],
        ["-120", "-", "EET", "-927936000000"],
        ["-180", "-", "MSK", "-892944000000"],
        ["-60", "C-Eur", "CE%sT", "-797644800000"],
        ["-180", "Russia", "MSK/MSD", "606880800000"],
        ["-120", "1:00", "EEST", "622605600000"],
        ["-120", "C-Eur", "EE%sT", "906422400000"],
        ["-120", "EU", "EE%sT", "941414400000"],
        ["-120", "-", "EET", "1014249600000"],
        ["-120", "EU", "EE%sT"]
    ],
    "Europe/Helsinki": [
        ["-99.81666666666668", "-", "LMT", "-2890252800000"],
        ["-99.81666666666668", "-", "HMT", "-1535932800000"],
        ["-120", "Finland", "EE%sT", "441676800000"],
        ["-120", "EU", "EE%sT"]
    ],
    "Europe/Mariehamn": "Europe/Helsinki", "Europe/Paris": [
        ["-9.35", "-", "LMT", "-2486678340000"],
        ["-9.35", "-", "PMT", "-1855958340000"],
        ["0", "France", "WE%sT", "-932432400000"],
        ["-60", "C-Eur", "CE%sT", "-800064000000"],
        ["0", "France", "WE%sT", "-766616400000"],
        ["-60", "France", "CE%sT", "252374400000"],
        ["-60", "EU", "CE%sT"]
    ],
    "Europe/Berlin": [
        ["-53.46666666666666", "-", "LMT", "-2422051200000"],
        ["-60", "C-Eur", "CE%sT", "-776556000000"],
        ["-60", "SovietZone", "CE%sT", "-725932800000"],
        ["-60", "Germany", "CE%sT", "347068800000"],
        ["-60", "EU", "CE%sT"]
    ],
    "Europe/Busingen": "Europe/Zurich", "Europe/Gibraltar": [
        ["21.4", "-", "LMT", "-2821651200000"],
        ["0", "GB-Eire", "%s", "-401320800000"],
        ["-60", "-", "CET", "410140800000"],
        ["-60", "EU", "CE%sT"]
    ],
    "Europe/Athens": [
        ["-94.86666666666667", "-", "LMT", "-2344636800000"],
        ["-94.86666666666667", "-", "AMT", "-1686095940000"],
        ["-120", "Greece", "EE%sT", "-904867200000"],
        ["-60", "Greece", "CE%sT", "-812419200000"],
        ["-120", "Greece", "EE%sT", "378604800000"],
        ["-120", "EU", "EE%sT"]
    ],
    "Europe/Budapest": [
        ["-76.33333333333333", "-", "LMT", "-2500934400000"],
        ["-60", "C-Eur", "CE%sT", "-1609545600000"],
        ["-60", "Hungary", "CE%sT", "-906768000000"],
        ["-60", "C-Eur", "CE%sT", "-757468800000"],
        ["-60", "Hungary", "CE%sT", "338954400000"],
        ["-60", "EU", "CE%sT"]
    ],
    "Atlantic/Reykjavik": [
        ["87.4", "-", "LMT", "-4165603200000"],
        ["87.8", "-", "RMT", "-1925078400000"],
        ["60", "Iceland", "IS%sT", "-54774000000"],
        ["0", "-", "GMT"]
    ],
    "Europe/Rome": [
        ["-49.93333333333334", "-", "LMT", "-3259094400000"],
        ["-49.93333333333334", "-", "RMT", "-2403561600000"],
        ["-60", "Italy", "CE%sT", "-857253600000"],
        ["-60", "C-Eur", "CE%sT", "-804816000000"],
        ["-60", "Italy", "CE%sT", "347068800000"],
        ["-60", "EU", "CE%sT"]
    ],
    "Europe/Vatican": "Europe/Rome", "Europe/San_Marino": "Europe/Rome", "Europe/Riga": [
        ["-96.56666666666668", "-", "LMT", "-2808604800000"],
        ["-96.56666666666668", "-", "RMT", "-1632002400000"],
        ["-96.56666666666668", "1:00", "LST", "-1618693200000"],
        ["-96.56666666666668", "-", "RMT", "-1601676000000"],
        ["-96.56666666666668", "1:00", "LST", "-1597266000000"],
        ["-96.56666666666668", "-", "RMT", "-1377302400000"],
        ["-120", "-", "EET", "-928022400000"],
        ["-180", "-", "MSK", "-899510400000"],
        ["-60", "C-Eur", "CE%sT", "-795830400000"],
        ["-180", "Russia", "MSK/MSD", "604720800000"],
        ["-120", "1:00", "EEST", "620618400000"],
        ["-120", "Latvia", "EE%sT", "853804800000"],
        ["-120", "EU", "EE%sT", "951782400000"],
        ["-120", "-", "EET", "978393600000"],
        ["-120", "EU", "EE%sT"]
    ],
    "Europe/Vaduz": "Europe/Zurich", "Europe/Vilnius": [
        ["-101.26666666666667", "-", "LMT", "-2808604800000"],
        ["-84", "-", "WMT", "-1641081600000"],
        ["-95.6", "-", "KMT", "-1585094400000"],
        ["-60", "-", "CET", "-1561248000000"],
        ["-120", "-", "EET", "-1553558400000"],
        ["-60", "-", "CET", "-928195200000"],
        ["-180", "-", "MSK", "-900115200000"],
        ["-60", "C-Eur", "CE%sT", "-802137600000"],
        ["-180", "Russia", "MSK/MSD", "670384800000"],
        ["-120", "1:00", "EEST", "686109600000"],
        ["-120", "C-Eur", "EE%sT", "915062400000"],
        ["-120", "-", "EET", "891133200000"],
        ["-60", "EU", "CE%sT", "941331600000"],
        ["-120", "-", "EET", "1041379200000"],
        ["-120", "EU", "EE%sT"]
    ],
    "Europe/Luxembourg": [
        ["-24.6", "-", "LMT", "-2069712000000"],
        ["-60", "Lux", "CE%sT", "-1612656000000"],
        ["0", "Lux", "WE%sT", "-1269813600000"],
        ["0", "Belgium", "WE%sT", "-935182800000"],
        ["-60", "C-Eur", "WE%sT", "-797979600000"],
        ["-60", "Belgium", "CE%sT", "252374400000"],
        ["-60", "EU", "CE%sT"]
    ],
    "Europe/Malta": [
        ["-58.06666666666666", "-", "LMT", "-2403475200000"],
        ["-60", "Italy", "CE%sT", "-857253600000"],
        ["-60", "C-Eur", "CE%sT", "-781048800000"],
        ["-60", "Italy", "CE%sT", "102384000000"],
        ["-60", "Malta", "CE%sT", "378604800000"],
        ["-60", "EU", "CE%sT"]
    ],
    "Europe/Chisinau": [
        ["-115.33333333333333", "-", "LMT", "-2808604800000"],
        ["-115", "-", "CMT", "-1637107200000"],
        ["-104.4", "-", "BMT", "-1213142400000"],
        ["-120", "Romania", "EE%sT", "-927158400000"],
        ["-120", "1:00", "EEST", "-898128000000"],
        ["-60", "C-Eur", "CE%sT", "-800150400000"],
        ["-180", "Russia", "MSK/MSD", "662601600000"],
        ["-180", "-", "MSK", "641952000000"],
        ["-120", "-", "EET", "694137600000"],
        ["-120", "Russia", "EE%sT", "725760000000"],
        ["-120", "E-Eur", "EE%sT", "883526400000"],
        ["-120", "EU", "EE%sT"]
    ],
    "Europe/Monaco": [
        ["-29.53333333333333", "-", "LMT", "-2486678400000"],
        ["-9.35", "-", "PMT", "-1855958400000"],
        ["0", "France", "WE%sT", "-766616400000"],
        ["-60", "France", "CE%sT", "252374400000"],
        ["-60", "EU", "CE%sT"]
    ],
    "Europe/Amsterdam": [
        ["-19.53333333333333", "-", "LMT", "-4228761600000"],
        ["-19.53333333333333", "Neth", "%s", "-1025740800000"],
        ["-20", "Neth", "NE%sT", "-935020800000"],
        ["-60", "C-Eur", "CE%sT", "-781048800000"],
        ["-60", "Neth", "CE%sT", "252374400000"],
        ["-60", "EU", "CE%sT"]
    ],
    "Europe/Oslo": [
        ["-43", "-", "LMT", "-2366755200000"],
        ["-60", "Norway", "CE%sT", "-927507600000"],
        ["-60", "C-Eur", "CE%sT", "-781048800000"],
        ["-60", "Norway", "CE%sT", "347068800000"],
        ["-60", "EU", "CE%sT"]
    ],
    "Arctic/Longyearbyen": "Europe/Oslo", "Europe/Warsaw": [
        ["-84", "-", "LMT", "-2808604800000"],
        ["-84", "-", "WMT", "-1717027200000"],
        ["-60", "C-Eur", "CE%sT", "-1618693200000"],
        ["-120", "Poland", "EE%sT", "-1501718400000"],
        ["-60", "Poland", "CE%sT", "-931730400000"],
        ["-60", "C-Eur", "CE%sT", "-796867200000"],
        ["-60", "Poland", "CE%sT", "252374400000"],
        ["-60", "W-Eur", "CE%sT", "599529600000"],
        ["-60", "EU", "CE%sT"]
    ],
    "Europe/Lisbon": [
        ["36.75", "-", "LMT", "-2682374400000"],
        ["36.75", "-", "LMT", "-1830384000000"],
        ["0", "Port", "WE%sT", "-118274400000"],
        ["-60", "-", "CET", "212547600000"],
        ["0", "Port", "WE%sT", "433299600000"],
        ["0", "W-Eur", "WE%sT", "717555600000"],
        ["-60", "EU", "CE%sT", "828234000000"],
        ["0", "EU", "WE%sT"]
    ],
    "Atlantic/Azores": [
        ["102.66666666666667", "-", "LMT", "-2682374400000"],
        ["114.53333333333333", "-", "HMT", "-1830384000000"],
        ["120", "Port", "AZO%sT", "-118274400000"],
        ["60", "Port", "AZO%sT", "433299600000"],
        ["60", "W-Eur", "AZO%sT", "717555600000"],
        ["0", "EU", "WE%sT", "733280400000"],
        ["60", "EU", "AZO%sT"]
    ],
    "Atlantic/Madeira": [
        ["67.6", "-", "LMT", "-2682374400000"],
        ["67.6", "-", "FMT", "-1830384000000"],
        ["60", "Port", "MAD%sT", "-118274400000"],
        ["0", "Port", "WE%sT", "433299600000"],
        ["0", "EU", "WE%sT"]
    ],
    "Europe/Bucharest": [
        ["-104.4", "-", "LMT", "-2469398400000"],
        ["-104.4", "-", "BMT", "-1213142400000"],
        ["-120", "Romania", "EE%sT", "354679200000"],
        ["-120", "C-Eur", "EE%sT", "694137600000"],
        ["-120", "Romania", "EE%sT", "788832000000"],
        ["-120", "E-Eur", "EE%sT", "883526400000"],
        ["-120", "EU", "EE%sT"]
    ],
    "Europe/Kaliningrad": [
        ["-82", "-", "LMT", "-2422051200000"],
        ["-60", "C-Eur", "CE%sT", "-757468800000"],
        ["-120", "Poland", "CE%sT", "-725932800000"],
        ["-180", "Russia", "MSK/MSD", "670384800000"],
        ["-120", "Russia", "EE%sT", "1301191200000"],
        ["-180", "-", "FET", "1414288800000"],
        ["-120", "-", "EET"]
    ],
    "Europe/Moscow": [
        ["-150.28333333333333", "-", "LMT", "-2808604800000"],
        ["-150.28333333333333", "-", "MMT", "-1688256000000"],
        ["-151.31666666666666", "Russia", "%s", "-1593813600000"],
        ["-180", "Russia", "%s", "-1522713600000"],
        ["-180", "Russia", "MSK/MSD", "-1491177600000"],
        ["-120", "-", "EET", "-1247529600000"],
        ["-180", "Russia", "MSK/MSD", "670384800000"],
        ["-120", "Russia", "EE%sT", "695786400000"],
        ["-180", "Russia", "MSK/MSD", "1301191200000"],
        ["-240", "-", "MSK", "1414288800000"],
        ["-180", "-", "MSK"]
    ],
    "Europe/Simferopol": [
        ["-136.4", "-", "LMT", "-2808604800000"],
        ["-136", "-", "SMT", "-1441152000000"],
        ["-120", "-", "EET", "-1247529600000"],
        ["-180", "-", "MSK", "-888883200000"],
        ["-60", "C-Eur", "CE%sT", "-811641600000"],
        ["-180", "Russia", "MSK/MSD", "662601600000"],
        ["-180", "-", "MSK", "646797600000"],
        ["-120", "-", "EET", "725760000000"],
        ["-120", "E-Eur", "EE%sT", "767750400000"],
        ["-180", "E-Eur", "MSK/MSD", "828241200000"],
        ["-180", "1:00", "MSD", "846385200000"],
        ["-180", "Russia", "MSK/MSD", "883526400000"],
        ["-180", "-", "MSK", "857178000000"],
        ["-120", "EU", "EE%sT", "1396144800000"],
        ["-240", "-", "MSK", "1414288800000"],
        ["-180", "-", "MSK"]
    ],
    "Europe/Volgograd": [
        ["-177.66666666666666", "-", "LMT", "-1577750400000"],
        ["-180", "-", "TSAT", "-1411862400000"],
        ["-180", "-", "STAT", "-1247529600000"],
        ["-240", "-", "STAT", "-256867200000"],
        ["-240", "Russia", "VOL%sT", "606880800000"],
        ["-180", "Russia", "VOL%sT", "670384800000"],
        ["-240", "-", "VOLT", "701834400000"],
        ["-180", "Russia", "MSK", "1301191200000"],
        ["-240", "-", "MSK", "1414288800000"],
        ["-180", "-", "MSK"]
    ],
    "Europe/Samara": [
        ["-200.33333333333334", "-", "LMT", "-1593813600000"],
        ["-180", "-", "SAMT", "-1247529600000"],
        ["-240", "-", "SAMT", "-1102291200000"],
        ["-240", "Russia", "KUY%sT", "606880800000"],
        ["-180", "Russia", "MSK/MSD", "670384800000"],
        ["-120", "Russia", "EE%sT", "686109600000"],
        ["-180", "-", "KUYT", "687927600000"],
        ["-240", "Russia", "SAM%sT", "1269741600000"],
        ["-180", "Russia", "SAM%sT", "1301191200000"],
        ["-240", "-", "SAMT"]
    ],
    "Asia/Yekaterinburg": [
        ["-242.55", "-", "LMT", "-1688256000000"],
        ["-225.08333333333334", "-", "PMT", "-1592596800000"],
        ["-240", "-", "SVET", "-1247529600000"],
        ["-300", "Russia", "SVE%sT", "670384800000"],
        ["-240", "Russia", "SVE%sT", "695786400000"],
        ["-300", "Russia", "YEK%sT", "1301191200000"],
        ["-360", "-", "YEKT", "1414288800000"],
        ["-300", "-", "YEKT"]
    ],
    "Asia/Omsk": [
        ["-293.5", "-", "LMT", "-1582070400000"],
        ["-300", "-", "OMST", "-1247529600000"],
        ["-360", "Russia", "OMS%sT", "670384800000"],
        ["-300", "Russia", "OMS%sT", "695786400000"],
        ["-360", "Russia", "OMS%sT", "1301191200000"],
        ["-420", "-", "OMST", "1414288800000"],
        ["-360", "-", "OMST"]
    ],
    "Asia/Novosibirsk": [
        ["-331.6666666666667", "-", "LMT", "-1579456800000"],
        ["-360", "-", "NOVT", "-1247529600000"],
        ["-420", "Russia", "NOV%sT", "670384800000"],
        ["-360", "Russia", "NOV%sT", "695786400000"],
        ["-420", "Russia", "NOV%sT", "738115200000"],
        ["-360", "Russia", "NOV%sT", "1301191200000"],
        ["-420", "-", "NOVT", "1414288800000"],
        ["-360", "-", "NOVT"]
    ],
    "Asia/Novokuznetsk": [
        ["-348.8", "-", "LMT", "-1441238400000"],
        ["-360", "-", "KRAT", "-1247529600000"],
        ["-420", "Russia", "KRA%sT", "670384800000"],
        ["-360", "Russia", "KRA%sT", "695786400000"],
        ["-420", "Russia", "KRA%sT", "1269741600000"],
        ["-360", "Russia", "NOV%sT", "1301191200000"],
        ["-420", "-", "NOVT", "1414288800000"],
        ["-420", "-", "KRAT"]
    ],
    "Asia/Krasnoyarsk": [
        ["-371.43333333333334", "-", "LMT", "-1577491200000"],
        ["-360", "-", "KRAT", "-1247529600000"],
        ["-420", "Russia", "KRA%sT", "670384800000"],
        ["-360", "Russia", "KRA%sT", "695786400000"],
        ["-420", "Russia", "KRA%sT", "1301191200000"],
        ["-480", "-", "KRAT", "1414288800000"],
        ["-420", "-", "KRAT"]
    ],
    "Asia/Irkutsk": [
        ["-417.0833333333333", "-", "LMT", "-2808604800000"],
        ["-417.0833333333333", "-", "IMT", "-1575849600000"],
        ["-420", "-", "IRKT", "-1247529600000"],
        ["-480", "Russia", "IRK%sT", "670384800000"],
        ["-420", "Russia", "IRK%sT", "695786400000"],
        ["-480", "Russia", "IRK%sT", "1301191200000"],
        ["-540", "-", "IRKT", "1414288800000"],
        ["-480", "-", "IRKT"]
    ],
    "Asia/Chita": [
        ["-453.8666666666667", "-", "LMT", "-1579392000000"],
        ["-480", "-", "YAKT", "-1247529600000"],
        ["-540", "Russia", "YAK%sT", "670384800000"],
        ["-480", "Russia", "YAK%sT", "695786400000"],
        ["-540", "Russia", "YAK%sT", "1301191200000"],
        ["-600", "-", "YAKT", "1414288800000"],
        ["-480", "-", "IRKT"]
    ],
    "Asia/Yakutsk": [
        ["-518.9666666666667", "-", "LMT", "-1579392000000"],
        ["-480", "-", "YAKT", "-1247529600000"],
        ["-540", "Russia", "YAK%sT", "670384800000"],
        ["-480", "Russia", "YAK%sT", "695786400000"],
        ["-540", "Russia", "YAK%sT", "1301191200000"],
        ["-600", "-", "YAKT", "1414288800000"],
        ["-540", "-", "YAKT"]
    ],
    "Asia/Vladivostok": [
        ["-527.5166666666667", "-", "LMT", "-1487289600000"],
        ["-540", "-", "VLAT", "-1247529600000"],
        ["-600", "Russia", "VLA%sT", "670384800000"],
        ["-540", "Russia", "VLA%sT", "695786400000"],
        ["-600", "Russia", "VLA%sT", "1301191200000"],
        ["-660", "-", "VLAT", "1414288800000"],
        ["-600", "-", "VLAT"]
    ],
    "Asia/Khandyga": [
        ["-542.2166666666666", "-", "LMT", "-1579392000000"],
        ["-480", "-", "YAKT", "-1247529600000"],
        ["-540", "Russia", "YAK%sT", "670384800000"],
        ["-480", "Russia", "YAK%sT", "695786400000"],
        ["-540", "Russia", "YAK%sT", "1104451200000"],
        ["-600", "Russia", "VLA%sT", "1301191200000"],
        ["-660", "-", "VLAT", "1315872000000"],
        ["-600", "-", "YAKT", "1414288800000"],
        ["-540", "-", "YAKT"]
    ],
    "Asia/Sakhalin": [
        ["-570.8", "-", "LMT", "-2031004800000"],
        ["-540", "-", "JCST", "-1017792000000"],
        ["-540", "-", "JST", "-768528000000"],
        ["-660", "Russia", "SAK%sT", "670384800000"],
        ["-600", "Russia", "SAK%sT", "695786400000"],
        ["-660", "Russia", "SAK%sT", "857181600000"],
        ["-600", "Russia", "SAK%sT", "1301191200000"],
        ["-660", "-", "SAKT", "1414288800000"],
        ["-600", "-", "SAKT"]
    ],
    "Asia/Magadan": [
        ["-603.2", "-", "LMT", "-1441152000000"],
        ["-600", "-", "MAGT", "-1247529600000"],
        ["-660", "Russia", "MAG%sT", "670384800000"],
        ["-600", "Russia", "MAG%sT", "695786400000"],
        ["-660", "Russia", "MAG%sT", "1301191200000"],
        ["-720", "-", "MAGT", "1414288800000"],
        ["-600", "-", "MAGT"]
    ],
    "Asia/Srednekolymsk": [
        ["-614.8666666666667", "-", "LMT", "-1441152000000"],
        ["-600", "-", "MAGT", "-1247529600000"],
        ["-660", "Russia", "MAG%sT", "670384800000"],
        ["-600", "Russia", "MAG%sT", "695786400000"],
        ["-660", "Russia", "MAG%sT", "1301191200000"],
        ["-720", "-", "MAGT", "1414288800000"],
        ["-660", "-", "SRET"]
    ],
    "Asia/Ust-Nera": [
        ["-572.9", "-", "LMT", "-1579392000000"],
        ["-480", "-", "YAKT", "-1247529600000"],
        ["-540", "Russia", "YAKT", "354931200000"],
        ["-660", "Russia", "MAG%sT", "670384800000"],
        ["-600", "Russia", "MAG%sT", "695786400000"],
        ["-660", "Russia", "MAG%sT", "1301191200000"],
        ["-720", "-", "MAGT", "1315872000000"],
        ["-660", "-", "VLAT", "1414288800000"],
        ["-600", "-", "VLAT"]
    ],
    "Asia/Kamchatka": [
        ["-634.6", "-", "LMT", "-1487721600000"],
        ["-660", "-", "PETT", "-1247529600000"],
        ["-720", "Russia", "PET%sT", "670384800000"],
        ["-660", "Russia", "PET%sT", "695786400000"],
        ["-720", "Russia", "PET%sT", "1269741600000"],
        ["-660", "Russia", "PET%sT", "1301191200000"],
        ["-720", "-", "PETT"]
    ],
    "Asia/Anadyr": [
        ["-709.9333333333334", "-", "LMT", "-1441152000000"],
        ["-720", "-", "ANAT", "-1247529600000"],
        ["-780", "Russia", "ANA%sT", "386467200000"],
        ["-720", "Russia", "ANA%sT", "670384800000"],
        ["-660", "Russia", "ANA%sT", "695786400000"],
        ["-720", "Russia", "ANA%sT", "1269741600000"],
        ["-660", "Russia", "ANA%sT", "1301191200000"],
        ["-720", "-", "ANAT"]
    ],
    "Europe/Belgrade": [
        ["-82", "-", "LMT", "-2682374400000"],
        ["-60", "-", "CET", "-905821200000"],
        ["-60", "C-Eur", "CE%sT", "-757468800000"],
        ["-60", "-", "CET", "-777938400000"],
        ["-60", "1:00", "CEST", "-766620000000"],
        ["-60", "-", "CET", "407203200000"],
        ["-60", "EU", "CE%sT"]
    ],
    "Europe/Ljubljana": "Europe/Belgrade",
    "Europe/Podgorica": "Europe/Belgrade",
    "Europe/Sarajevo": "Europe/Belgrade",
    "Europe/Skopje": "Europe/Belgrade",
    "Europe/Zagreb": "Europe/Belgrade",
    "Europe/Bratislava": "Europe/Prague",
    "Europe/Madrid": [
        ["14.733333333333334", "-", "LMT", "-2177452800000"],
        ["0", "Spain", "WE%sT", "-733881600000"],
        ["-60", "Spain", "CE%sT", "315446400000"],
        ["-60", "EU", "CE%sT"]
    ],
    "Africa/Ceuta": [
        ["21.26666666666667", "-", "LMT", "-2146003200000"],
        ["0", "-", "WET", "-1630112400000"],
        ["0", "1:00", "WEST", "-1616806800000"],
        ["0", "-", "WET", "-1420156800000"],
        ["0", "Spain", "WE%sT", "-1262390400000"],
        ["0", "SpainAfrica", "WE%sT", "448243200000"],
        ["-60", "-", "CET", "536371200000"],
        ["-60", "EU", "CE%sT"]
    ],
    "Atlantic/Canary": [
        ["61.6", "-", "LMT", "-1509667200000"],
        ["60", "-", "CANT", "-733878000000"],
        ["0", "-", "WET", "323827200000"],
        ["0", "1:00", "WEST", "338947200000"],
        ["0", "EU", "WE%sT"]
    ],
    "Europe/Stockholm": [
        ["-72.2", "-", "LMT", "-2871676800000"],
        ["-60.233333333333334", "-", "SET", "-2208988800000"],
        ["-60", "-", "CET", "-1692493200000"],
        ["-60", "1:00", "CEST", "-1680476400000"],
        ["-60", "-", "CET", "347068800000"],
        ["-60", "EU", "CE%sT"]
    ],
    "Europe/Zurich": [
        ["-34.13333333333333", "-", "LMT", "-3675196800000"],
        ["-29.76666666666667", "-", "BMT", "-2385244800000"],
        ["-60", "Swiss", "CE%sT", "378604800000"],
        ["-60", "EU", "CE%sT"]
    ],
    "Europe/Istanbul": [
        ["-115.86666666666667", "-", "LMT", "-2808604800000"],
        ["-116.93333333333332", "-", "IMT", "-1869868800000"],
        ["-120", "Turkey", "EE%sT", "277257600000"],
        ["-180", "Turkey", "TR%sT", "482803200000"],
        ["-120", "Turkey", "EE%sT", "1199059200000"],
        ["-120", "EU", "EE%sT", "1301187600000"],
        ["-120", "-", "EET", "1301274000000"],
        ["-120", "EU", "EE%sT", "1396141200000"],
        ["-120", "-", "EET", "1396227600000"],
        ["-120", "EU", "EE%sT"]
    ],
    "Asia/Istanbul": "Europe/Istanbul", "Europe/Kiev": [
        ["-122.06666666666668", "-", "LMT", "-2808604800000"],
        ["-122.06666666666668", "-", "KMT", "-1441152000000"],
        ["-120", "-", "EET", "-1247529600000"],
        ["-180", "-", "MSK", "-892512000000"],
        ["-60", "C-Eur", "CE%sT", "-825379200000"],
        ["-180", "Russia", "MSK/MSD", "646797600000"],
        ["-120", "1:00", "EEST", "686113200000"],
        ["-120", "E-Eur", "EE%sT", "820368000000"],
        ["-120", "EU", "EE%sT"]
    ],
    "Europe/Uzhgorod": [
        ["-89.2", "-", "LMT", "-2500934400000"],
        ["-60", "-", "CET", "-915235200000"],
        ["-60", "C-Eur", "CE%sT", "-796867200000"],
        ["-60", "1:00", "CEST", "-794707200000"],
        ["-60", "-", "CET", "-773452800000"],
        ["-180", "Russia", "MSK/MSD", "662601600000"],
        ["-180", "-", "MSK", "646797600000"],
        ["-60", "-", "CET", "670388400000"],
        ["-120", "-", "EET", "725760000000"],
        ["-120", "E-Eur", "EE%sT", "820368000000"],
        ["-120", "EU", "EE%sT"]
    ],
    "Europe/Zaporozhye": [
        ["-140.66666666666666", "-", "LMT", "-2808604800000"],
        ["-140", "-", "CUT", "-1441152000000"],
        ["-120", "-", "EET", "-1247529600000"],
        ["-180", "-", "MSK", "-894758400000"],
        ["-60", "C-Eur", "CE%sT", "-826416000000"],
        ["-180", "Russia", "MSK/MSD", "670384800000"],
        ["-120", "E-Eur", "EE%sT", "820368000000"],
        ["-120", "EU", "EE%sT"]
    ],
    "EST": [
        ["300", "-", "EST"]
    ],
    "MST": [
        ["420", "-", "MST"]
    ],
    "HST": [
        ["600", "-", "HST"]
    ],
    "EST5EDT": [
        ["300", "US", "E%sT"]
    ],
    "CST6CDT": [
        ["360", "US", "C%sT"]
    ],
    "MST7MDT": [
        ["420", "US", "M%sT"]
    ],
    "PST8PDT": [
        ["480", "US", "P%sT"]
    ],
    "America/New_York": [
        ["296.0333333333333", "-", "LMT", "-2717668562000"],
        ["300", "US", "E%sT", "-1546387200000"],
        ["300", "NYC", "E%sT", "-852163200000"],
        ["300", "US", "E%sT", "-725932800000"],
        ["300", "NYC", "E%sT", "-63244800000"],
        ["300", "US", "E%sT"]
    ],
    "America/Chicago": [
        ["350.6", "-", "LMT", "-2717668236000"],
        ["360", "US", "C%sT", "-1546387200000"],
        ["360", "Chicago", "C%sT", "-1067810400000"],
        ["300", "-", "EST", "-1045432800000"],
        ["360", "Chicago", "C%sT", "-852163200000"],
        ["360", "US", "C%sT", "-725932800000"],
        ["360", "Chicago", "C%sT", "-63244800000"],
        ["360", "US", "C%sT"]
    ],
    "America/North_Dakota/Center": [
        ["405.2", "-", "LMT", "-2717667912000"],
        ["420", "US", "M%sT", "719978400000"],
        ["360", "US", "C%sT"]
    ],
    "America/North_Dakota/New_Salem": [
        ["405.65", "-", "LMT", "-2717667939000"],
        ["420", "US", "M%sT", "1067133600000"],
        ["360", "US", "C%sT"]
    ],
    "America/North_Dakota/Beulah": [
        ["407.1166666666667", "-", "LMT", "-2717668027000"],
        ["420", "US", "M%sT", "1289095200000"],
        ["360", "US", "C%sT"]
    ],
    "America/Denver": [
        ["419.93333333333334", "-", "LMT", "-2717668796000"],
        ["420", "US", "M%sT", "-1546387200000"],
        ["420", "Denver", "M%sT", "-852163200000"],
        ["420", "US", "M%sT", "-725932800000"],
        ["420", "Denver", "M%sT", "-63244800000"],
        ["420", "US", "M%sT"]
    ],
    "America/Los_Angeles": [
        ["472.9666666666667", "-", "LMT", "-2717668378000"],
        ["480", "US", "P%sT", "-725932800000"],
        ["480", "CA", "P%sT", "-63244800000"],
        ["480", "US", "P%sT"]
    ],
    "America/Juneau": [
        ["-902.3166666666666", "-", "LMT", "-3225312000000"],
        ["537.6833333333334", "-", "LMT", "-2188987200000"],
        ["480", "-", "PST", "-852163200000"],
        ["480", "US", "P%sT", "-725932800000"],
        ["480", "-", "PST", "-86400000"],
        ["480", "US", "P%sT", "325648800000"],
        ["540", "US", "Y%sT", "341373600000"],
        ["480", "US", "P%sT", "436327200000"],
        ["540", "US", "Y%sT", "438998400000"],
        ["540", "US", "AK%sT"]
    ],
    "America/Sitka": [
        ["-898.7833333333334", "-", "LMT", "-3225312000000"],
        ["541.2166666666666", "-", "LMT", "-2188987200000"],
        ["480", "-", "PST", "-852163200000"],
        ["480", "US", "P%sT", "-725932800000"],
        ["480", "-", "PST", "-86400000"],
        ["480", "US", "P%sT", "436327200000"],
        ["540", "US", "Y%sT", "438998400000"],
        ["540", "US", "AK%sT"]
    ],
    "America/Metlakatla": [
        ["-913.7", "-", "LMT", "-3225312000000"],
        ["526.3", "-", "LMT", "-2188987200000"],
        ["480", "-", "PST", "-852163200000"],
        ["480", "US", "P%sT", "-725932800000"],
        ["480", "-", "PST", "-86400000"],
        ["480", "US", "P%sT", "436327200000"],
        ["480", "-", "PST"]
    ],
    "America/Yakutat": [
        ["-881.0833333333334", "-", "LMT", "-3225312000000"],
        ["558.9166666666666", "-", "LMT", "-2188987200000"],
        ["540", "-", "YST", "-852163200000"],
        ["540", "US", "Y%sT", "-725932800000"],
        ["540", "-", "YST", "-86400000"],
        ["540", "US", "Y%sT", "438998400000"],
        ["540", "US", "AK%sT"]
    ],
    "America/Anchorage": [
        ["-840.4", "-", "LMT", "-3225312000000"],
        ["599.6", "-", "LMT", "-2188987200000"],
        ["600", "-", "CAT", "-852163200000"],
        ["600", "US", "CAT/CAWT", "-769395600000"],
        ["600", "US", "CAT/CAPT", "-725932800000"],
        ["600", "-", "CAT", "-86918400000"],
        ["600", "-", "AHST", "-86400000"],
        ["600", "US", "AH%sT", "436327200000"],
        ["540", "US", "Y%sT", "438998400000"],
        ["540", "US", "AK%sT"]
    ],
    "America/Nome": [
        ["-778.35", "-", "LMT", "-3225312000000"],
        ["661.6333333333333", "-", "LMT", "-2188987200000"],
        ["660", "-", "NST", "-852163200000"],
        ["660", "US", "N%sT", "-725932800000"],
        ["660", "-", "NST", "-86918400000"],
        ["660", "-", "BST", "-86400000"],
        ["660", "US", "B%sT", "436327200000"],
        ["540", "US", "Y%sT", "438998400000"],
        ["540", "US", "AK%sT"]
    ],
    "America/Adak": [
        ["-733.35", "-", "LMT", "-3225312000000"],
        ["706.6333333333333", "-", "LMT", "-2188987200000"],
        ["660", "-", "NST", "-852163200000"],
        ["660", "US", "N%sT", "-725932800000"],
        ["660", "-", "NST", "-86918400000"],
        ["660", "-", "BST", "-86400000"],
        ["660", "US", "B%sT", "436327200000"],
        ["600", "US", "AH%sT", "438998400000"],
        ["600", "US", "HA%sT"]
    ],
    "Pacific/Honolulu": [
        ["631.4333333333334", "-", "LMT", "-2334139200000"],
        ["630", "-", "HST", "-1157320800000"],
        ["630", "1:00", "HDT", "-1155470400000"],
        ["630", "-", "HST", "-880236000000"],
        ["630", "1:00", "HDT", "-765410400000"],
        ["630", "-", "HST", "-712188000000"],
        ["600", "-", "HST"]
    ],
    "Pacific/Johnston": "Pacific/Honolulu", "America/Phoenix": [
        ["448.3", "-", "LMT", "-2717670498000"],
        ["420", "US", "M%sT", "-820540740000"],
        ["420", "-", "MST", "-812678340000"],
        ["420", "US", "M%sT", "-796867140000"],
        ["420", "-", "MST", "-63244800000"],
        ["420", "US", "M%sT", "-56246400000"],
        ["420", "-", "MST"]
    ],
    "America/Boise": [
        ["464.81666666666666", "-", "LMT", "-2717667889000"],
        ["480", "US", "P%sT", "-1471816800000"],
        ["420", "US", "M%sT", "157680000000"],
        ["420", "-", "MST", "129088800000"],
        ["420", "US", "M%sT"]
    ],
    "America/Indiana/Indianapolis": [
        ["344.6333333333333", "-", "LMT", "-2717667878000"],
        ["360", "US", "C%sT", "-1546387200000"],
        ["360", "Indianapolis", "C%sT", "-852163200000"],
        ["360", "US", "C%sT", "-725932800000"],
        ["360", "Indianapolis", "C%sT", "-463615200000"],
        ["300", "-", "EST", "-386805600000"],
        ["360", "-", "CST", "-368661600000"],
        ["300", "-", "EST", "-86400000"],
        ["300", "US", "E%sT", "62985600000"],
        ["300", "-", "EST", "1167523200000"],
        ["300", "US", "E%sT"]
    ],
    "America/Indiana/Marengo": [
        ["345.3833333333333", "-", "LMT", "-2717667923000"],
        ["360", "US", "C%sT", "-568166400000"],
        ["360", "Marengo", "C%sT", "-273708000000"],
        ["300", "-", "EST", "-86400000"],
        ["300", "US", "E%sT", "126669600000"],
        ["360", "1:00", "CDT", "152071200000"],
        ["300", "US", "E%sT", "220838400000"],
        ["300", "-", "EST", "1167523200000"],
        ["300", "US", "E%sT"]
    ],
    "America/Indiana/Vincennes": [
        ["350.1166666666667", "-", "LMT", "-2717668207000"],
        ["360", "US", "C%sT", "-725932800000"],
        ["360", "Vincennes", "C%sT", "-179359200000"],
        ["300", "-", "EST", "-86400000"],
        ["300", "US", "E%sT", "62985600000"],
        ["300", "-", "EST", "1143943200000"],
        ["360", "US", "C%sT", "1194141600000"],
        ["300", "US", "E%sT"]
    ],
    "America/Indiana/Tell_City": [
        ["347.05", "-", "LMT", "-2717668023000"],
        ["360", "US", "C%sT", "-725932800000"],
        ["360", "Perry", "C%sT", "-179359200000"],
        ["300", "-", "EST", "-86400000"],
        ["300", "US", "E%sT", "62985600000"],
        ["300", "-", "EST", "1143943200000"],
        ["360", "US", "C%sT"]
    ],
    "America/Indiana/Petersburg": [
        ["349.1166666666667", "-", "LMT", "-2717668147000"],
        ["360", "US", "C%sT", "-441936000000"],
        ["360", "Pike", "C%sT", "-147909600000"],
        ["300", "-", "EST", "-100130400000"],
        ["360", "US", "C%sT", "247024800000"],
        ["300", "-", "EST", "1143943200000"],
        ["360", "US", "C%sT", "1194141600000"],
        ["300", "US", "E%sT"]
    ],
    "America/Indiana/Knox": [
        ["346.5", "-", "LMT", "-2717667990000"],
        ["360", "US", "C%sT", "-694396800000"],
        ["360", "Starke", "C%sT", "-242258400000"],
        ["300", "-", "EST", "-195084000000"],
        ["360", "US", "C%sT", "688528800000"],
        ["300", "-", "EST", "1143943200000"],
        ["360", "US", "C%sT"]
    ],
    "America/Indiana/Winamac": [
        ["346.4166666666667", "-", "LMT", "-2717667985000"],
        ["360", "US", "C%sT", "-725932800000"],
        ["360", "Pulaski", "C%sT", "-273708000000"],
        ["300", "-", "EST", "-86400000"],
        ["300", "US", "E%sT", "62985600000"],
        ["300", "-", "EST", "1143943200000"],
        ["360", "US", "C%sT", "1173578400000"],
        ["300", "US", "E%sT"]
    ],
    "America/Indiana/Vevay": [
        ["340.2666666666667", "-", "LMT", "-2717667616000"],
        ["360", "US", "C%sT", "-495064800000"],
        ["300", "-", "EST", "-86400000"],
        ["300", "US", "E%sT", "126144000000"],
        ["300", "-", "EST", "1167523200000"],
        ["300", "US", "E%sT"]
    ],
    "America/Kentucky/Louisville": [
        ["343.0333333333333", "-", "LMT", "-2717667782000"],
        ["360", "US", "C%sT", "-1514851200000"],
        ["360", "Louisville", "C%sT", "-852163200000"],
        ["360", "US", "C%sT", "-725932800000"],
        ["360", "Louisville", "C%sT", "-266450400000"],
        ["300", "-", "EST", "-31622400000"],
        ["300", "US", "E%sT", "126669600000"],
        ["360", "1:00", "CDT", "152071200000"],
        ["300", "US", "E%sT"]
    ],
    "America/Kentucky/Monticello": [
        ["339.4", "-", "LMT", "-2717667564000"],
        ["360", "US", "C%sT", "-725932800000"],
        ["360", "-", "CST", "-31622400000"],
        ["360", "US", "C%sT", "972784800000"],
        ["300", "US", "E%sT"]
    ],
    "America/Detroit": [
        ["332.18333333333334", "-", "LMT", "-2019772800000"],
        ["360", "-", "CST", "-1724104800000"],
        ["300", "-", "EST", "-852163200000"],
        ["300", "US", "E%sT", "-725932800000"],
        ["300", "Detroit", "E%sT", "126144000000"],
        ["300", "US", "E%sT", "189216000000"],
        ["300", "-", "EST", "167796000000"],
        ["300", "US", "E%sT"]
    ],
    "America/Menominee": [
        ["350.45", "-", "LMT", "-2659780800000"],
        ["360", "US", "C%sT", "-725932800000"],
        ["360", "Menominee", "C%sT", "-21506400000"],
        ["300", "-", "EST", "104896800000"],
        ["360", "US", "C%sT"]
    ],
    "America/St_Johns": [
        ["210.86666666666665", "-", "LMT", "-2682374400000"],
        ["210.86666666666665", "StJohns", "N%sT", "-1609545600000"],
        ["210.86666666666665", "Canada", "N%sT", "-1578009600000"],
        ["210.86666666666665", "StJohns", "N%sT", "-1096934400000"],
        ["210", "StJohns", "N%sT", "-872380800000"],
        ["210", "Canada", "N%sT", "-725932800000"],
        ["210", "StJohns", "N%sT", "1320105600000"],
        ["210", "Canada", "N%sT"]
    ],
    "America/Goose_Bay": [
        ["241.66666666666666", "-", "LMT", "-2682374400000"],
        ["210.86666666666665", "-", "NST", "-1609545600000"],
        ["210.86666666666665", "Canada", "N%sT", "-1578009600000"],
        ["210.86666666666665", "-", "NST", "-1096934400000"],
        ["210", "-", "NST", "-1041465600000"],
        ["210", "StJohns", "N%sT", "-872380800000"],
        ["210", "Canada", "N%sT", "-725932800000"],
        ["210", "StJohns", "N%sT", "-119916000000"],
        ["240", "StJohns", "A%sT", "1320105600000"],
        ["240", "Canada", "A%sT"]
    ],
    "America/Halifax": [
        ["254.4", "-", "LMT", "-2131660800000"],
        ["240", "Halifax", "A%sT", "-1609545600000"],
        ["240", "Canada", "A%sT", "-1578009600000"],
        ["240", "Halifax", "A%sT", "-880236000000"],
        ["240", "Canada", "A%sT", "-725932800000"],
        ["240", "Halifax", "A%sT", "157680000000"],
        ["240", "Canada", "A%sT"]
    ],
    "America/Glace_Bay": [
        ["239.8", "-", "LMT", "-2131660800000"],
        ["240", "Canada", "A%sT", "-505008000000"],
        ["240", "Halifax", "A%sT", "-473472000000"],
        ["240", "-", "AST", "94608000000"],
        ["240", "Halifax", "A%sT", "157680000000"],
        ["240", "Canada", "A%sT"]
    ],
    "America/Moncton": [
        ["259.1333333333333", "-", "LMT", "-2715897600000"],
        ["300", "-", "EST", "-2131660800000"],
        ["240", "Canada", "A%sT", "-1136160000000"],
        ["240", "Moncton", "A%sT", "-852163200000"],
        ["240", "Canada", "A%sT", "-725932800000"],
        ["240", "Moncton", "A%sT", "126144000000"],
        ["240", "Canada", "A%sT", "757296000000"],
        ["240", "Moncton", "A%sT", "1199059200000"],
        ["240", "Canada", "A%sT"]
    ],
    "America/Blanc-Sablon": [
        ["228.46666666666667", "-", "LMT", "-2682374400000"],
        ["240", "Canada", "A%sT", "31449600000"],
        ["240", "-", "AST"]
    ],
    "America/Montreal": [
        ["294.2666666666667", "-", "LMT", "-2682374400000"],
        ["300", "Mont", "E%sT", "-1609545600000"],
        ["300", "Canada", "E%sT", "-1578009600000"],
        ["300", "Mont", "E%sT", "-880236000000"],
        ["300", "Canada", "E%sT", "-725932800000"],
        ["300", "Mont", "E%sT", "157680000000"],
        ["300", "Canada", "E%sT"]
    ],
    "America/Toronto": [
        ["317.5333333333333", "-", "LMT", "-2335305600000"],
        ["300", "Canada", "E%sT", "-1578009600000"],
        ["300", "Toronto", "E%sT", "-880236000000"],
        ["300", "Canada", "E%sT", "-725932800000"],
        ["300", "Toronto", "E%sT", "157680000000"],
        ["300", "Canada", "E%sT"]
    ],
    "America/Thunder_Bay": [
        ["357", "-", "LMT", "-2335305600000"],
        ["360", "-", "CST", "-1862006400000"],
        ["300", "-", "EST", "-852163200000"],
        ["300", "Canada", "E%sT", "31449600000"],
        ["300", "Toronto", "E%sT", "126144000000"],
        ["300", "-", "EST", "157680000000"],
        ["300", "Canada", "E%sT"]
    ],
    "America/Nipigon": [
        ["353.06666666666666", "-", "LMT", "-2335305600000"],
        ["300", "Canada", "E%sT", "-923270400000"],
        ["300", "1:00", "EDT", "-880236000000"],
        ["300", "Canada", "E%sT"]
    ],
    "America/Rainy_River": [
        ["378.2666666666667", "-", "LMT", "-2335305600000"],
        ["360", "Canada", "C%sT", "-923270400000"],
        ["360", "1:00", "CDT", "-880236000000"],
        ["360", "Canada", "C%sT"]
    ],
    "America/Atikokan": [
        ["366.4666666666667", "-", "LMT", "-2335305600000"],
        ["360", "Canada", "C%sT", "-923270400000"],
        ["360", "1:00", "CDT", "-880236000000"],
        ["360", "Canada", "C%sT", "-765410400000"],
        ["300", "-", "EST"]
    ],
    "America/Winnipeg": [
        ["388.6", "-", "LMT", "-2602281600000"],
        ["360", "Winn", "C%sT", "1167523200000"],
        ["360", "Canada", "C%sT"]
    ],
    "America/Regina": [
        ["418.6", "-", "LMT", "-2030227200000"],
        ["420", "Regina", "M%sT", "-307749600000"],
        ["360", "-", "CST"]
    ],
    "America/Swift_Current": [
        ["431.3333333333333", "-", "LMT", "-2030227200000"],
        ["420", "Canada", "M%sT", "-749599200000"],
        ["420", "Regina", "M%sT", "-599702400000"],
        ["420", "Swift", "M%sT", "70941600000"],
        ["360", "-", "CST"]
    ],
    "America/Edmonton": [
        ["453.8666666666667", "-", "LMT", "-1998691200000"],
        ["420", "Edm", "M%sT", "567907200000"],
        ["420", "Canada", "M%sT"]
    ],
    "America/Vancouver": [
        ["492.4666666666667", "-", "LMT", "-2682374400000"],
        ["480", "Vanc", "P%sT", "567907200000"],
        ["480", "Canada", "P%sT"]
    ],
    "America/Dawson_Creek": [
        ["480.93333333333334", "-", "LMT", "-2682374400000"],
        ["480", "Canada", "P%sT", "-694396800000"],
        ["480", "Vanc", "P%sT", "83988000000"],
        ["420", "-", "MST"]
    ],
    "America/Creston": [
        ["466.06666666666666", "-", "LMT", "-2682374400000"],
        ["420", "-", "MST", "-1680480000000"],
        ["480", "-", "PST", "-1627862400000"],
        ["420", "-", "MST"]
    ],
    "America/Pangnirtung": [
        ["0", "-", "zzz", "-1514851200000"],
        ["240", "NT_YK", "A%sT", "796701600000"],
        ["300", "Canada", "E%sT", "941335200000"],
        ["360", "Canada", "C%sT", "972784800000"],
        ["300", "Canada", "E%sT"]
    ],
    "America/Iqaluit": [
        ["0", "-", "zzz", "-865296000000"],
        ["300", "NT_YK", "E%sT", "941335200000"],
        ["360", "Canada", "C%sT", "972784800000"],
        ["300", "Canada", "E%sT"]
    ],
    "America/Resolute": [
        ["0", "-", "zzz", "-704937600000"],
        ["360", "NT_YK", "C%sT", "972784800000"],
        ["300", "-", "EST", "986094000000"],
        ["360", "Canada", "C%sT", "1162087200000"],
        ["300", "-", "EST", "1173582000000"],
        ["360", "Canada", "C%sT"]
    ],
    "America/Rankin_Inlet": [
        ["0", "-", "zzz", "-378777600000"],
        ["360", "NT_YK", "C%sT", "972784800000"],
        ["300", "-", "EST", "986094000000"],
        ["360", "Canada", "C%sT"]
    ],
    "America/Cambridge_Bay": [
        ["0", "-", "zzz", "-1546387200000"],
        ["420", "NT_YK", "M%sT", "941335200000"],
        ["360", "Canada", "C%sT", "972784800000"],
        ["300", "-", "EST", "973382400000"],
        ["360", "-", "CST", "986094000000"],
        ["420", "Canada", "M%sT"]
    ],
    "America/Yellowknife": [
        ["0", "-", "zzz", "-1073088000000"],
        ["420", "NT_YK", "M%sT", "347068800000"],
        ["420", "Canada", "M%sT"]
    ],
    "America/Inuvik": [
        ["0", "-", "zzz", "-505008000000"],
        ["480", "NT_YK", "P%sT", "291780000000"],
        ["420", "NT_YK", "M%sT", "347068800000"],
        ["420", "Canada", "M%sT"]
    ],
    "America/Whitehorse": [
        ["540.2", "-", "LMT", "-2189030400000"],
        ["540", "NT_YK", "Y%sT", "-110584800000"],
        ["480", "NT_YK", "P%sT", "347068800000"],
        ["480", "Canada", "P%sT"]
    ],
    "America/Dawson": [
        ["557.6666666666666", "-", "LMT", "-2189030400000"],
        ["540", "NT_YK", "Y%sT", "120614400000"],
        ["480", "NT_YK", "P%sT", "347068800000"],
        ["480", "Canada", "P%sT"]
    ],
    "America/Cancun": [
        ["347.06666666666666", "-", "LMT", "-1514764024000"],
        ["360", "-", "CST", "377913600000"],
        ["300", "Mexico", "E%sT", "902023200000"],
        ["360", "Mexico", "C%sT"]
    ],
    "America/Merida": [
        ["358.4666666666667", "-", "LMT", "-1514764708000"],
        ["360", "-", "CST", "377913600000"],
        ["300", "-", "EST", "407635200000"],
        ["360", "Mexico", "C%sT"]
    ],
    "America/Matamoros": [
        ["400", "-", "LMT", "-1514767200000"],
        ["360", "-", "CST", "599529600000"],
        ["360", "US", "C%sT", "631065600000"],
        ["360", "Mexico", "C%sT", "1293753600000"],
        ["360", "US", "C%sT"]
    ],
    "America/Monterrey": [
        ["401.2666666666667", "-", "LMT", "-1514767276000"],
        ["360", "-", "CST", "599529600000"],
        ["360", "US", "C%sT", "631065600000"],
        ["360", "Mexico", "C%sT"]
    ],
    "America/Mexico_City": [
        ["396.6", "-", "LMT", "-1514763396000"],
        ["420", "-", "MST", "-1343091600000"],
        ["360", "-", "CST", "-1234828800000"],
        ["420", "-", "MST", "-1220317200000"],
        ["360", "-", "CST", "-1207180800000"],
        ["420", "-", "MST", "-1191369600000"],
        ["360", "Mexico", "C%sT", "1001815200000"],
        ["360", "-", "CST", "1014163200000"],
        ["360", "Mexico", "C%sT"]
    ],
    "America/Ojinaga": [
        ["417.6666666666667", "-", "LMT", "-1514764660000"],
        ["420", "-", "MST", "-1343091600000"],
        ["360", "-", "CST", "-1234828800000"],
        ["420", "-", "MST", "-1220317200000"],
        ["360", "-", "CST", "-1207180800000"],
        ["420", "-", "MST", "-1191369600000"],
        ["360", "-", "CST", "851990400000"],
        ["360", "Mexico", "C%sT", "915062400000"],
        ["360", "-", "CST", "891399600000"],
        ["420", "Mexico", "M%sT", "1293753600000"],
        ["420", "US", "M%sT"]
    ],
    "America/Chihuahua": [
        ["424.3333333333333", "-", "LMT", "-1514765060000"],
        ["420", "-", "MST", "-1343091600000"],
        ["360", "-", "CST", "-1234828800000"],
        ["420", "-", "MST", "-1220317200000"],
        ["360", "-", "CST", "-1207180800000"],
        ["420", "-", "MST", "-1191369600000"],
        ["360", "-", "CST", "851990400000"],
        ["360", "Mexico", "C%sT", "915062400000"],
        ["360", "-", "CST", "891399600000"],
        ["420", "Mexico", "M%sT"]
    ],
    "America/Hermosillo": [
        ["443.8666666666667", "-", "LMT", "-1514766232000"],
        ["420", "-", "MST", "-1343091600000"],
        ["360", "-", "CST", "-1234828800000"],
        ["420", "-", "MST", "-1220317200000"],
        ["360", "-", "CST", "-1207180800000"],
        ["420", "-", "MST", "-1191369600000"],
        ["360", "-", "CST", "-873849600000"],
        ["420", "-", "MST", "-661564800000"],
        ["480", "-", "PST", "31449600000"],
        ["420", "Mexico", "M%sT", "946598400000"],
        ["420", "-", "MST"]
    ],
    "America/Mazatlan": [
        ["425.6666666666667", "-", "LMT", "-1514765140000"],
        ["420", "-", "MST", "-1343091600000"],
        ["360", "-", "CST", "-1234828800000"],
        ["420", "-", "MST", "-1220317200000"],
        ["360", "-", "CST", "-1207180800000"],
        ["420", "-", "MST", "-1191369600000"],
        ["360", "-", "CST", "-873849600000"],
        ["420", "-", "MST", "-661564800000"],
        ["480", "-", "PST", "31449600000"],
        ["420", "Mexico", "M%sT"]
    ],
    "America/Bahia_Banderas": [
        ["421", "-", "LMT", "-1514764860000"],
        ["420", "-", "MST", "-1343091600000"],
        ["360", "-", "CST", "-1234828800000"],
        ["420", "-", "MST", "-1220317200000"],
        ["360", "-", "CST", "-1207180800000"],
        ["420", "-", "MST", "-1191369600000"],
        ["360", "-", "CST", "-873849600000"],
        ["420", "-", "MST", "-661564800000"],
        ["480", "-", "PST", "31449600000"],
        ["420", "Mexico", "M%sT", "1270346400000"],
        ["360", "Mexico", "C%sT"]
    ],
    "America/Tijuana": [
        ["468.06666666666666", "-", "LMT", "-1514764084000"],
        ["420", "-", "MST", "-1420156800000"],
        ["480", "-", "PST", "-1343091600000"],
        ["420", "-", "MST", "-1234828800000"],
        ["480", "-", "PST", "-1222992000000"],
        ["480", "1:00", "PDT", "-1207267200000"],
        ["480", "-", "PST", "-873849600000"],
        ["480", "1:00", "PWT", "-769395600000"],
        ["480", "1:00", "PPT", "-761702400000"],
        ["480", "-", "PST", "-686102400000"],
        ["480", "1:00", "PDT", "-661564800000"],
        ["480", "-", "PST", "-473472000000"],
        ["480", "CA", "P%sT", "-252547200000"],
        ["480", "-", "PST", "220838400000"],
        ["480", "US", "P%sT", "851990400000"],
        ["480", "Mexico", "P%sT", "1009756800000"],
        ["480", "US", "P%sT", "1014163200000"],
        ["480", "Mexico", "P%sT", "1293753600000"],
        ["480", "US", "P%sT"]
    ],
    "America/Santa_Isabel": [
        ["459.4666666666667", "-", "LMT", "-1514763568000"],
        ["420", "-", "MST", "-1420156800000"],
        ["480", "-", "PST", "-1343091600000"],
        ["420", "-", "MST", "-1234828800000"],
        ["480", "-", "PST", "-1222992000000"],
        ["480", "1:00", "PDT", "-1207267200000"],
        ["480", "-", "PST", "-873849600000"],
        ["480", "1:00", "PWT", "-769395600000"],
        ["480", "1:00", "PPT", "-761702400000"],
        ["480", "-", "PST", "-686102400000"],
        ["480", "1:00", "PDT", "-661564800000"],
        ["480", "-", "PST", "-473472000000"],
        ["480", "CA", "P%sT", "-252547200000"],
        ["480", "-", "PST", "220838400000"],
        ["480", "US", "P%sT", "851990400000"],
        ["480", "Mexico", "P%sT", "1009756800000"],
        ["480", "US", "P%sT", "1014163200000"],
        ["480", "Mexico", "P%sT"]
    ],
    "America/Antigua": [
        ["247.2", "-", "LMT", "-1825113600000"],
        ["300", "-", "EST", "-568166400000"],
        ["240", "-", "AST"]
    ],
    "America/Nassau": [
        ["309.5", "-", "LMT", "-1825113600000"],
        ["300", "Bahamas", "E%sT", "220838400000"],
        ["300", "US", "E%sT"]
    ],
    "America/Barbados": [
        ["238.48333333333335", "-", "LMT", "-1420156800000"],
        ["238.48333333333335", "-", "BMT", "-1167696000000"],
        ["240", "Barb", "A%sT"]
    ],
    "America/Belize": [
        ["352.8", "-", "LMT", "-1822521600000"],
        ["360", "Belize", "C%sT"]
    ],
    "Atlantic/Bermuda": [
        ["259.3", "-", "LMT", "-1262296800000"],
        ["240", "-", "AST", "136346400000"],
        ["240", "Canada", "A%sT", "220838400000"],
        ["240", "US", "A%sT"]
    ],
    "America/Cayman": [
        ["325.5333333333333", "-", "LMT", "-2493072000000"],
        ["307.18333333333334", "-", "KMT", "-1827705600000"],
        ["300", "-", "EST"]
    ],
    "America/Costa_Rica": [
        ["336.2166666666667", "-", "LMT", "-2493072000000"],
        ["336.2166666666667", "-", "SJMT", "-1545091200000"],
        ["360", "CR", "C%sT"]
    ],
    "America/Havana": [
        ["329.4666666666667", "-", "LMT", "-2493072000000"],
        ["329.6", "-", "HMT", "-1402833600000"],
        ["300", "Cuba", "C%sT"]
    ],
    "America/Santo_Domingo": [
        ["279.6", "-", "LMT", "-2493072000000"],
        ["280", "-", "SDMT", "-1159790400000"],
        ["300", "DR", "E%sT", "152064000000"],
        ["240", "-", "AST", "972784800000"],
        ["300", "US", "E%sT", "975805200000"],
        ["240", "-", "AST"]
    ],
    "America/El_Salvador": [
        ["356.8", "-", "LMT", "-1514851200000"],
        ["360", "Salv", "C%sT"]
    ],
    "America/Guatemala": [
        ["362.06666666666666", "-", "LMT", "-1617062400000"],
        ["360", "Guat", "C%sT"]
    ],
    "America/Port-au-Prince": [
        ["289.3333333333333", "-", "LMT", "-2493072000000"],
        ["289", "-", "PPMT", "-1670500800000"],
        ["300", "Haiti", "E%sT"]
    ],
    "America/Tegucigalpa": [
        ["348.8666666666667", "-", "LMT", "-1538524800000"],
        ["360", "Hond", "C%sT"]
    ],
    "America/Jamaica": [
        ["307.18333333333334", "-", "LMT", "-2493072000000"],
        ["307.18333333333334", "-", "KMT", "-1827705600000"],
        ["300", "-", "EST", "157680000000"],
        ["300", "US", "E%sT", "473299200000"],
        ["300", "-", "EST"]
    ],
    "America/Martinique": [
        ["244.33333333333334", "-", "LMT", "-2493072000000"],
        ["244.33333333333334", "-", "FFMT", "-1851552000000"],
        ["240", "-", "AST", "323827200000"],
        ["240", "1:00", "ADT", "338947200000"],
        ["240", "-", "AST"]
    ],
    "America/Managua": [
        ["345.1333333333333", "-", "LMT", "-2493072000000"],
        ["345.2", "-", "MMT", "-1121126400000"],
        ["360", "-", "CST", "105062400000"],
        ["300", "-", "EST", "161740800000"],
        ["360", "Nic", "C%sT", "694238400000"],
        ["300", "-", "EST", "717292800000"],
        ["360", "-", "CST", "757296000000"],
        ["300", "-", "EST", "883526400000"],
        ["360", "Nic", "C%sT"]
    ],
    "America/Panama": [
        ["318.1333333333333", "-", "LMT", "-2493072000000"],
        ["319.6", "-", "CMT", "-1946937600000"],
        ["300", "-", "EST"]
    ],
    "America/Puerto_Rico": [
        ["264.4166666666667", "-", "LMT", "-2233051200000"],
        ["240", "-", "AST", "-873072000000"],
        ["240", "US", "A%sT", "-725932800000"],
        ["240", "-", "AST"]
    ],
    "America/Miquelon": [
        ["224.66666666666666", "-", "LMT", "-1850342400000"],
        ["240", "-", "AST", "325987200000"],
        ["180", "-", "PMST", "567907200000"],
        ["180", "Canada", "PM%sT"]
    ],
    "America/Grand_Turk": [
        ["284.5333333333333", "-", "LMT", "-2493072000000"],
        ["307.18333333333334", "-", "KMT", "-1827705600000"],
        ["300", "-", "EST", "315446400000"],
        ["300", "US", "E%sT", "1414893600000"],
        ["240", "-", "AST"]
    ],
    "US/Pacific-New": "America/Los_Angeles", "America/Argentina/Buenos_Aires": [
        ["233.8", "-", "LMT", "-2372112000000"],
        ["256.8", "-", "CMT", "-1567468800000"],
        ["240", "-", "ART", "-1233446400000"],
        ["240", "Arg", "AR%sT", "-7603200000"],
        ["180", "Arg", "AR%sT", "938908800000"],
        ["240", "Arg", "AR%sT", "952041600000"],
        ["180", "Arg", "AR%sT"]
    ],
    "America/Argentina/Cordoba": [
        ["256.8", "-", "LMT", "-2372112000000"],
        ["256.8", "-", "CMT", "-1567468800000"],
        ["240", "-", "ART", "-1233446400000"],
        ["240", "Arg", "AR%sT", "-7603200000"],
        ["180", "Arg", "AR%sT", "667958400000"],
        ["240", "-", "WART", "687916800000"],
        ["180", "Arg", "AR%sT", "938908800000"],
        ["240", "Arg", "AR%sT", "952041600000"],
        ["180", "Arg", "AR%sT"]
    ],
    "America/Argentina/Salta": [
        ["261.66666666666663", "-", "LMT", "-2372112000000"],
        ["256.8", "-", "CMT", "-1567468800000"],
        ["240", "-", "ART", "-1233446400000"],
        ["240", "Arg", "AR%sT", "-7603200000"],
        ["180", "Arg", "AR%sT", "667958400000"],
        ["240", "-", "WART", "687916800000"],
        ["180", "Arg", "AR%sT", "938908800000"],
        ["240", "Arg", "AR%sT", "952041600000"],
        ["180", "Arg", "AR%sT", "1224288000000"],
        ["180", "-", "ART"]
    ],
    "America/Argentina/Tucuman": [
        ["260.8666666666667", "-", "LMT", "-2372112000000"],
        ["256.8", "-", "CMT", "-1567468800000"],
        ["240", "-", "ART", "-1233446400000"],
        ["240", "Arg", "AR%sT", "-7603200000"],
        ["180", "Arg", "AR%sT", "667958400000"],
        ["240", "-", "WART", "687916800000"],
        ["180", "Arg", "AR%sT", "938908800000"],
        ["240", "Arg", "AR%sT", "952041600000"],
        ["180", "-", "ART", "1086048000000"],
        ["240", "-", "WART", "1087084800000"],
        ["180", "Arg", "AR%sT"]
    ],
    "America/Argentina/La_Rioja": [
        ["267.4", "-", "LMT", "-2372112000000"],
        ["256.8", "-", "CMT", "-1567468800000"],
        ["240", "-", "ART", "-1233446400000"],
        ["240", "Arg", "AR%sT", "-7603200000"],
        ["180", "Arg", "AR%sT", "667785600000"],
        ["240", "-", "WART", "673574400000"],
        ["180", "Arg", "AR%sT", "938908800000"],
        ["240", "Arg", "AR%sT", "952041600000"],
        ["180", "-", "ART", "1086048000000"],
        ["240", "-", "WART", "1087689600000"],
        ["180", "Arg", "AR%sT", "1224288000000"],
        ["180", "-", "ART"]
    ],
    "America/Argentina/San_Juan": [
        ["274.06666666666666", "-", "LMT", "-2372112000000"],
        ["256.8", "-", "CMT", "-1567468800000"],
        ["240", "-", "ART", "-1233446400000"],
        ["240", "Arg", "AR%sT", "-7603200000"],
        ["180", "Arg", "AR%sT", "667785600000"],
        ["240", "-", "WART", "673574400000"],
        ["180", "Arg", "AR%sT", "938908800000"],
        ["240", "Arg", "AR%sT", "952041600000"],
        ["180", "-", "ART", "1085961600000"],
        ["240", "-", "WART", "1090713600000"],
        ["180", "Arg", "AR%sT", "1224288000000"],
        ["180", "-", "ART"]
    ],
    "America/Argentina/Jujuy": [
        ["261.2", "-", "LMT", "-2372112000000"],
        ["256.8", "-", "CMT", "-1567468800000"],
        ["240", "-", "ART", "-1233446400000"],
        ["240", "Arg", "AR%sT", "-7603200000"],
        ["180", "Arg", "AR%sT", "636508800000"],
        ["240", "-", "WART", "657072000000"],
        ["240", "1:00", "WARST", "669168000000"],
        ["240", "-", "WART", "686707200000"],
        ["180", "1:00", "ARST", "725760000000"],
        ["180", "Arg", "AR%sT", "938908800000"],
        ["240", "Arg", "AR%sT", "952041600000"],
        ["180", "Arg", "AR%sT", "1224288000000"],
        ["180", "-", "ART"]
    ],
    "America/Argentina/Catamarca": [
        ["263.1333333333333", "-", "LMT", "-2372112000000"],
        ["256.8", "-", "CMT", "-1567468800000"],
        ["240", "-", "ART", "-1233446400000"],
        ["240", "Arg", "AR%sT", "-7603200000"],
        ["180", "Arg", "AR%sT", "667958400000"],
        ["240", "-", "WART", "687916800000"],
        ["180", "Arg", "AR%sT", "938908800000"],
        ["240", "Arg", "AR%sT", "952041600000"],
        ["180", "-", "ART", "1086048000000"],
        ["240", "-", "WART", "1087689600000"],
        ["180", "Arg", "AR%sT", "1224288000000"],
        ["180", "-", "ART"]
    ],
    "America/Argentina/Mendoza": [
        ["275.2666666666667", "-", "LMT", "-2372112000000"],
        ["256.8", "-", "CMT", "-1567468800000"],
        ["240", "-", "ART", "-1233446400000"],
        ["240", "Arg", "AR%sT", "-7603200000"],
        ["180", "Arg", "AR%sT", "636508800000"],
        ["240", "-", "WART", "655948800000"],
        ["240", "1:00", "WARST", "667785600000"],
        ["240", "-", "WART", "687484800000"],
        ["240", "1:00", "WARST", "699408000000"],
        ["240", "-", "WART", "719366400000"],
        ["180", "Arg", "AR%sT", "938908800000"],
        ["240", "Arg", "AR%sT", "952041600000"],
        ["180", "-", "ART", "1085270400000"],
        ["240", "-", "WART", "1096156800000"],
        ["180", "Arg", "AR%sT", "1224288000000"],
        ["180", "-", "ART"]
    ],
    "America/Argentina/San_Luis": [
        ["265.4", "-", "LMT", "-2372112000000"],
        ["256.8", "-", "CMT", "-1567468800000"],
        ["240", "-", "ART", "-1233446400000"],
        ["240", "Arg", "AR%sT", "-7603200000"],
        ["180", "Arg", "AR%sT", "662601600000"],
        ["180", "1:00", "ARST", "637372800000"],
        ["240", "-", "WART", "655948800000"],
        ["240", "1:00", "WARST", "667785600000"],
        ["240", "-", "WART", "675734400000"],
        ["180", "-", "ART", "938908800000"],
        ["240", "1:00", "WARST", "952041600000"],
        ["180", "-", "ART", "1085961600000"],
        ["240", "-", "WART", "1090713600000"],
        ["180", "Arg", "AR%sT", "1200873600000"],
        ["240", "SanLuis", "WAR%sT", "1255219200000"],
        ["180", "-", "ART"]
    ],
    "America/Argentina/Rio_Gallegos": [
        ["276.8666666666667", "-", "LMT", "-2372112000000"],
        ["256.8", "-", "CMT", "-1567468800000"],
        ["240", "-", "ART", "-1233446400000"],
        ["240", "Arg", "AR%sT", "-7603200000"],
        ["180", "Arg", "AR%sT", "938908800000"],
        ["240", "Arg", "AR%sT", "952041600000"],
        ["180", "-", "ART", "1086048000000"],
        ["240", "-", "WART", "1087689600000"],
        ["180", "Arg", "AR%sT", "1224288000000"],
        ["180", "-", "ART"]
    ],
    "America/Argentina/Ushuaia": [
        ["273.2", "-", "LMT", "-2372112000000"],
        ["256.8", "-", "CMT", "-1567468800000"],
        ["240", "-", "ART", "-1233446400000"],
        ["240", "Arg", "AR%sT", "-7603200000"],
        ["180", "Arg", "AR%sT", "938908800000"],
        ["240", "Arg", "AR%sT", "952041600000"],
        ["180", "-", "ART", "1085875200000"],
        ["240", "-", "WART", "1087689600000"],
        ["180", "Arg", "AR%sT", "1224288000000"],
        ["180", "-", "ART"]
    ],
    "America/Aruba": "America/Curacao", "America/La_Paz": [
        ["272.6", "-", "LMT", "-2493072000000"],
        ["272.6", "-", "CMT", "-1205971200000"],
        ["272.6", "1:00", "BOST", "-1192320000000"],
        ["240", "-", "BOT"]
    ],
    "America/Noronha": [
        ["129.66666666666669", "-", "LMT", "-1735776000000"],
        ["120", "Brazil", "FN%sT", "653529600000"],
        ["120", "-", "FNT", "938649600000"],
        ["120", "Brazil", "FN%sT", "971568000000"],
        ["120", "-", "FNT", "1000339200000"],
        ["120", "Brazil", "FN%sT", "1033430400000"],
        ["120", "-", "FNT"]
    ],
    "America/Belem": [
        ["193.93333333333334", "-", "LMT", "-1735776000000"],
        ["180", "Brazil", "BR%sT", "590025600000"],
        ["180", "-", "BRT"]
    ],
    "America/Santarem": [
        ["218.8", "-", "LMT", "-1735776000000"],
        ["240", "Brazil", "AM%sT", "590025600000"],
        ["240", "-", "AMT", "1214265600000"],
        ["180", "-", "BRT"]
    ],
    "America/Fortaleza": [
        ["154", "-", "LMT", "-1735776000000"],
        ["180", "Brazil", "BR%sT", "653529600000"],
        ["180", "-", "BRT", "938649600000"],
        ["180", "Brazil", "BR%sT", "972172800000"],
        ["180", "-", "BRT", "1000339200000"],
        ["180", "Brazil", "BR%sT", "1033430400000"],
        ["180", "-", "BRT"]
    ],
    "America/Recife": [
        ["139.6", "-", "LMT", "-1735776000000"],
        ["180", "Brazil", "BR%sT", "653529600000"],
        ["180", "-", "BRT", "938649600000"],
        ["180", "Brazil", "BR%sT", "971568000000"],
        ["180", "-", "BRT", "1000339200000"],
        ["180", "Brazil", "BR%sT", "1033430400000"],
        ["180", "-", "BRT"]
    ],
    "America/Araguaina": [
        ["192.8", "-", "LMT", "-1735776000000"],
        ["180", "Brazil", "BR%sT", "653529600000"],
        ["180", "-", "BRT", "811036800000"],
        ["180", "Brazil", "BR%sT", "1064361600000"],
        ["180", "-", "BRT", "1350777600000"],
        ["180", "Brazil", "BR%sT", "1377993600000"],
        ["180", "-", "BRT"]
    ],
    "America/Maceio": [
        ["142.86666666666665", "-", "LMT", "-1735776000000"],
        ["180", "Brazil", "BR%sT", "653529600000"],
        ["180", "-", "BRT", "813542400000"],
        ["180", "Brazil", "BR%sT", "841795200000"],
        ["180", "-", "BRT", "938649600000"],
        ["180", "Brazil", "BR%sT", "972172800000"],
        ["180", "-", "BRT", "1000339200000"],
        ["180", "Brazil", "BR%sT", "1033430400000"],
        ["180", "-", "BRT"]
    ],
    "America/Bahia": [
        ["154.06666666666666", "-", "LMT", "-1735776000000"],
        ["180", "Brazil", "BR%sT", "1064361600000"],
        ["180", "-", "BRT", "1318723200000"],
        ["180", "Brazil", "BR%sT", "1350777600000"],
        ["180", "-", "BRT"]
    ],
    "America/Sao_Paulo": [
        ["186.46666666666667", "-", "LMT", "-1735776000000"],
        ["180", "Brazil", "BR%sT", "-195436800000"],
        ["180", "1:00", "BRST", "-157852800000"],
        ["180", "Brazil", "BR%sT"]
    ],
    "America/Campo_Grande": [
        ["218.46666666666667", "-", "LMT", "-1735776000000"],
        ["240", "Brazil", "AM%sT"]
    ],
    "America/Cuiaba": [
        ["224.33333333333334", "-", "LMT", "-1735776000000"],
        ["240", "Brazil", "AM%sT", "1064361600000"],
        ["240", "-", "AMT", "1096588800000"],
        ["240", "Brazil", "AM%sT"]
    ],
    "America/Porto_Velho": [
        ["255.6", "-", "LMT", "-1735776000000"],
        ["240", "Brazil", "AM%sT", "590025600000"],
        ["240", "-", "AMT"]
    ],
    "America/Boa_Vista": [
        ["242.66666666666666", "-", "LMT", "-1735776000000"],
        ["240", "Brazil", "AM%sT", "590025600000"],
        ["240", "-", "AMT", "938649600000"],
        ["240", "Brazil", "AM%sT", "971568000000"],
        ["240", "-", "AMT"]
    ],
    "America/Manaus": [
        ["240.06666666666666", "-", "LMT", "-1735776000000"],
        ["240", "Brazil", "AM%sT", "590025600000"],
        ["240", "-", "AMT", "749174400000"],
        ["240", "Brazil", "AM%sT", "780192000000"],
        ["240", "-", "AMT"]
    ],
    "America/Eirunepe": [
        ["279.4666666666667", "-", "LMT", "-1735776000000"],
        ["300", "Brazil", "AC%sT", "590025600000"],
        ["300", "-", "ACT", "749174400000"],
        ["300", "Brazil", "AC%sT", "780192000000"],
        ["300", "-", "ACT", "1214265600000"],
        ["240", "-", "AMT", "1384041600000"],
        ["300", "-", "ACT"]
    ],
    "America/Rio_Branco": [
        ["271.2", "-", "LMT", "-1735776000000"],
        ["300", "Brazil", "AC%sT", "590025600000"],
        ["300", "-", "ACT", "1214265600000"],
        ["240", "-", "AMT", "1384041600000"],
        ["300", "-", "ACT"]
    ],
    "America/Santiago": [
        ["282.7666666666667", "-", "LMT", "-2493072000000"],
        ["282.7666666666667", "-", "SMT", "-1862006400000"],
        ["300", "-", "CLT", "-1688428800000"],
        ["282.7666666666667", "-", "SMT", "-1620000000000"],
        ["240", "-", "CLT", "-1593820800000"],
        ["282.7666666666667", "-", "SMT", "-1336003200000"],
        ["300", "Chile", "CL%sT", "-713664000000"],
        ["240", "Chile", "CL%sT"]
    ],
    "Pacific/Easter": [
        ["437.7333333333333", "-", "LMT", "-2493072000000"],
        ["437.4666666666667", "-", "EMT", "-1178150400000"],
        ["420", "Chile", "EAS%sT", "384901200000"],
        ["360", "Chile", "EAS%sT"]
    ],
    "America/Bogota": [
        ["296.2666666666667", "-", "LMT", "-2707689600000"],
        ["296.2666666666667", "-", "BMT", "-1739059200000"],
        ["300", "CO", "CO%sT"]
    ],
    "America/Curacao": [
        ["275.7833333333333", "-", "LMT", "-1826755200000"],
        ["270", "-", "ANT", "-126316800000"],
        ["240", "-", "AST"]
    ],
    "America/Lower_Princes": "America/Curacao",
    "America/Kralendijk": "America/Curacao",
    "America/Guayaquil": [
        ["319.3333333333333", "-", "LMT", "-2493072000000"],
        ["314", "-", "QMT", "-1199318400000"],
        ["300", "-", "ECT"]
    ],
    "Pacific/Galapagos": [
        ["358.4", "-", "LMT", "-1199318400000"],
        ["300", "-", "ECT", "536371200000"],
        ["360", "-", "GALT"]
    ],
    "Atlantic/Stanley": [
        ["231.4", "-", "LMT", "-2493072000000"],
        ["231.4", "-", "SMT", "-1824249600000"],
        ["240", "Falk", "FK%sT", "420595200000"],
        ["180", "Falk", "FK%sT", "495590400000"],
        ["240", "Falk", "FK%sT", "1283652000000"],
        ["180", "-", "FKST"]
    ],
    "America/Cayenne": [
        ["209.33333333333334", "-", "LMT", "-1846281600000"],
        ["240", "-", "GFT", "-71107200000"],
        ["180", "-", "GFT"]
    ],
    "America/Guyana": [
        ["232.66666666666666", "-", "LMT", "-1730592000000"],
        ["225", "-", "GBGT", "-113702400000"],
        ["225", "-", "GYT", "175996800000"],
        ["180", "-", "GYT", "694137600000"],
        ["240", "-", "GYT"]
    ],
    "America/Asuncion": [
        ["230.66666666666666", "-", "LMT", "-2493072000000"],
        ["230.66666666666666", "-", "AMT", "-1206403200000"],
        ["240", "-", "PYT", "86745600000"],
        ["180", "-", "PYT", "134006400000"],
        ["240", "Para", "PY%sT"]
    ],
    "America/Lima": [
        ["308.2", "-", "LMT", "-2493072000000"],
        ["308.6", "-", "LMT", "-1938556800000"],
        ["300", "Peru", "PE%sT"]
    ],
    "Atlantic/South_Georgia": [
        ["146.13333333333335", "-", "LMT", "-2493072000000"],
        ["120", "-", "GST"]
    ],
    "America/Paramaribo": [
        ["220.66666666666666", "-", "LMT", "-1830470400000"],
        ["220.86666666666665", "-", "PMT", "-1073088000000"],
        ["220.6", "-", "PMT", "-765331200000"],
        ["210", "-", "NEGT", "185673600000"],
        ["210", "-", "SRT", "465436800000"],
        ["180", "-", "SRT"]
    ],
    "America/Port_of_Spain": [
        ["246.06666666666666", "-", "LMT", "-1825113600000"],
        ["240", "-", "AST"]
    ],
    "America/Anguilla": "America/Port_of_Spain",
    "America/Dominica": "America/Port_of_Spain",
    "America/Grenada": "America/Port_of_Spain",
    "America/Guadeloupe": "America/Port_of_Spain",
    "America/Marigot": "America/Port_of_Spain",
    "America/Montserrat": "America/Port_of_Spain",
    "America/St_Barthelemy": "America/Port_of_Spain",
    "America/St_Kitts": "America/Port_of_Spain",
    "America/St_Lucia": "America/Port_of_Spain",
    "America/St_Thomas": "America/Port_of_Spain",
    "America/St_Vincent": "America/Port_of_Spain",
    "America/Tortola": "America/Port_of_Spain",
    "America/Montevideo": [
        ["224.73333333333335", "-", "LMT", "-2256681600000"],
        ["224.73333333333335", "-", "MMT", "-1567468800000"],
        ["210", "Uruguay", "UY%sT", "-853632000000"],
        ["180", "Uruguay", "UY%sT"]
    ],
    "America/Caracas": [
        ["267.7333333333333", "-", "LMT", "-2493072000000"],
        ["267.6666666666667", "-", "CMT", "-1826755200000"],
        ["270", "-", "VET", "-126316800000"],
        ["240", "-", "VET", "1197169200000"],
        ["270", "-", "VET"]
    ]
};
exports.rules = {
    "Algeria": [
        ["1916", "only", "-", "Jun", "14", ["23", "0", "0", "s"], "60", "S"],
        ["1916", "1919", "-", "Oct", "Sun>=1", ["23", "0", "0", "s"], "0", "-"],
        ["1917", "only", "-", "Mar", "24", ["23", "0", "0", "s"], "60", "S"],
        ["1918", "only", "-", "Mar", "9", ["23", "0", "0", "s"], "60", "S"],
        ["1919", "only", "-", "Mar", "1", ["23", "0", "0", "s"], "60", "S"],
        ["1920", "only", "-", "Feb", "14", ["23", "0", "0", "s"], "60", "S"],
        ["1920", "only", "-", "Oct", "23", ["23", "0", "0", "s"], "0", "-"],
        ["1921", "only", "-", "Mar", "14", ["23", "0", "0", "s"], "60", "S"],
        ["1921", "only", "-", "Jun", "21", ["23", "0", "0", "s"], "0", "-"],
        ["1939", "only", "-", "Sep", "11", ["23", "0", "0", "s"], "60", "S"],
        ["1939", "only", "-", "Nov", "19", ["1", "0", "0"], "0", "-"],
        ["1944", "1945", "-", "Apr", "Mon>=1", ["2", "0", "0"], "60", "S"],
        ["1944", "only", "-", "Oct", "8", ["2", "0", "0"], "0", "-"],
        ["1945", "only", "-", "Sep", "16", ["1", "0", "0"], "0", "-"],
        ["1971", "only", "-", "Apr", "25", ["23", "0", "0", "s"], "60", "S"],
        ["1971", "only", "-", "Sep", "26", ["23", "0", "0", "s"], "0", "-"],
        ["1977", "only", "-", "May", "6", ["0", "0", "0"], "60", "S"],
        ["1977", "only", "-", "Oct", "21", ["0", "0", "0"], "0", "-"],
        ["1978", "only", "-", "Mar", "24", ["1", "0", "0"], "60", "S"],
        ["1978", "only", "-", "Sep", "22", ["3", "0", "0"], "0", "-"],
        ["1980", "only", "-", "Apr", "25", ["0", "0", "0"], "60", "S"],
        ["1980", "only", "-", "Oct", "31", ["2", "0", "0"], "0", "-"]
    ],
    "Egypt": [
        ["1940", "only", "-", "Jul", "15", ["0", "0", "0"], "60", "S"],
        ["1940", "only", "-", "Oct", "1", ["0", "0", "0"], "0", "-"],
        ["1941", "only", "-", "Apr", "15", ["0", "0", "0"], "60", "S"],
        ["1941", "only", "-", "Sep", "16", ["0", "0", "0"], "0", "-"],
        ["1942", "1944", "-", "Apr", "1", ["0", "0", "0"], "60", "S"],
        ["1942", "only", "-", "Oct", "27", ["0", "0", "0"], "0", "-"],
        ["1943", "1945", "-", "Nov", "1", ["0", "0", "0"], "0", "-"],
        ["1945", "only", "-", "Apr", "16", ["0", "0", "0"], "60", "S"],
        ["1957", "only", "-", "May", "10", ["0", "0", "0"], "60", "S"],
        ["1957", "1958", "-", "Oct", "1", ["0", "0", "0"], "0", "-"],
        ["1958", "only", "-", "May", "1", ["0", "0", "0"], "60", "S"],
        ["1959", "1981", "-", "May", "1", ["1", "0", "0"], "60", "S"],
        ["1959", "1965", "-", "Sep", "30", ["3", "0", "0"], "0", "-"],
        ["1966", "1994", "-", "Oct", "1", ["3", "0", "0"], "0", "-"],
        ["1982", "only", "-", "Jul", "25", ["1", "0", "0"], "60", "S"],
        ["1983", "only", "-", "Jul", "12", ["1", "0", "0"], "60", "S"],
        ["1984", "1988", "-", "May", "1", ["1", "0", "0"], "60", "S"],
        ["1989", "only", "-", "May", "6", ["1", "0", "0"], "60", "S"],
        ["1990", "1994", "-", "May", "1", ["1", "0", "0"], "60", "S"],
        ["1995", "2010", "-", "Apr", "lastFri", ["0", "0", "0", "s"], "60", "S"],
        ["1995", "2005", "-", "Sep", "lastThu", ["24", "0", "0"], "0", "-"],
        ["2006", "only", "-", "Sep", "21", ["24", "0", "0"], "0", "-"],
        ["2007", "only", "-", "Sep", "Thu>=1", ["24", "0", "0"], "0", "-"],
        ["2008", "only", "-", "Aug", "lastThu", ["24", "0", "0"], "0", "-"],
        ["2009", "only", "-", "Aug", "20", ["24", "0", "0"], "0", "-"],
        ["2010", "only", "-", "Aug", "10", ["24", "0", "0"], "0", "-"],
        ["2010", "only", "-", "Sep", "9", ["24", "0", "0"], "60", "S"],
        ["2010", "only", "-", "Sep", "lastThu", ["24", "0", "0"], "0", "-"],
        ["2014", "only", "-", "May", "15", ["24", "0", "0"], "60", "S"],
        ["2014", "only", "-", "Jun", "26", ["24", "0", "0"], "0", "-"],
        ["2014", "only", "-", "Jul", "31", ["24", "0", "0"], "60", "S"],
        ["2014", "max", "-", "Sep", "lastThu", ["24", "0", "0"], "0", "-"],
        ["2015", "2019", "-", "Apr", "lastFri", ["0", "0", "0", "s"], "60", "S"],
        ["2015", "only", "-", "Jun", "11", ["24", "0", "0"], "0", "-"],
        ["2015", "only", "-", "Jul", "23", ["24", "0", "0"], "60", "S"],
        ["2016", "only", "-", "Jun", "2", ["24", "0", "0"], "0", "-"],
        ["2016", "only", "-", "Jul", "7", ["24", "0", "0"], "60", "S"],
        ["2017", "only", "-", "May", "25", ["24", "0", "0"], "0", "-"],
        ["2017", "only", "-", "Jun", "29", ["24", "0", "0"], "60", "S"],
        ["2018", "only", "-", "May", "10", ["24", "0", "0"], "0", "-"],
        ["2018", "only", "-", "Jun", "14", ["24", "0", "0"], "60", "S"],
        ["2019", "only", "-", "May", "2", ["24", "0", "0"], "0", "-"],
        ["2019", "only", "-", "Jun", "6", ["24", "0", "0"], "60", "S"],
        ["2020", "only", "-", "May", "28", ["24", "0", "0"], "60", "S"],
        ["2021", "only", "-", "May", "13", ["24", "0", "0"], "60", "S"],
        ["2022", "only", "-", "May", "5", ["24", "0", "0"], "60", "S"],
        ["2023", "max", "-", "Apr", "lastFri", ["0", "0", "0", "s"], "60", "S"]
    ],
    "Ghana": [
        ["1920", "1942", "-", "Sep", "1", ["0", "0", "0"], "20", "GHST"],
        ["1920", "1942", "-", "Dec", "31", ["0", "0", "0"], "0", "GMT"]
    ],
    "Libya": [
        ["1951", "only", "-", "Oct", "14", ["2", "0", "0"], "60", "S"],
        ["1952", "only", "-", "Jan", "1", ["0", "0", "0"], "0", "-"],
        ["1953", "only", "-", "Oct", "9", ["2", "0", "0"], "60", "S"],
        ["1954", "only", "-", "Jan", "1", ["0", "0", "0"], "0", "-"],
        ["1955", "only", "-", "Sep", "30", ["0", "0", "0"], "60", "S"],
        ["1956", "only", "-", "Jan", "1", ["0", "0", "0"], "0", "-"],
        ["1982", "1984", "-", "Apr", "1", ["0", "0", "0"], "60", "S"],
        ["1982", "1985", "-", "Oct", "1", ["0", "0", "0"], "0", "-"],
        ["1985", "only", "-", "Apr", "6", ["0", "0", "0"], "60", "S"],
        ["1986", "only", "-", "Apr", "4", ["0", "0", "0"], "60", "S"],
        ["1986", "only", "-", "Oct", "3", ["0", "0", "0"], "0", "-"],
        ["1987", "1989", "-", "Apr", "1", ["0", "0", "0"], "60", "S"],
        ["1987", "1989", "-", "Oct", "1", ["0", "0", "0"], "0", "-"],
        ["1997", "only", "-", "Apr", "4", ["0", "0", "0"], "60", "S"],
        ["1997", "only", "-", "Oct", "4", ["0", "0", "0"], "0", "-"],
        ["2013", "only", "-", "Mar", "lastFri", ["1", "0", "0"], "60", "S"],
        ["2013", "only", "-", "Oct", "lastFri", ["2", "0", "0"], "0", "-"]
    ],
    "Mauritius": [
        ["1982", "only", "-", "Oct", "10", ["0", "0", "0"], "60", "S"],
        ["1983", "only", "-", "Mar", "21", ["0", "0", "0"], "0", "-"],
        ["2008", "only", "-", "Oct", "lastSun", ["2", "0", "0"], "60", "S"],
        ["2009", "only", "-", "Mar", "lastSun", ["2", "0", "0"], "0", "-"]
    ],
    "Morocco": [
        ["1939", "only", "-", "Sep", "12", ["0", "0", "0"], "60", "S"],
        ["1939", "only", "-", "Nov", "19", ["0", "0", "0"], "0", "-"],
        ["1940", "only", "-", "Feb", "25", ["0", "0", "0"], "60", "S"],
        ["1945", "only", "-", "Nov", "18", ["0", "0", "0"], "0", "-"],
        ["1950", "only", "-", "Jun", "11", ["0", "0", "0"], "60", "S"],
        ["1950", "only", "-", "Oct", "29", ["0", "0", "0"], "0", "-"],
        ["1967", "only", "-", "Jun", "3", ["12", "0", "0"], "60", "S"],
        ["1967", "only", "-", "Oct", "1", ["0", "0", "0"], "0", "-"],
        ["1974", "only", "-", "Jun", "24", ["0", "0", "0"], "60", "S"],
        ["1974", "only", "-", "Sep", "1", ["0", "0", "0"], "0", "-"],
        ["1976", "1977", "-", "May", "1", ["0", "0", "0"], "60", "S"],
        ["1976", "only", "-", "Aug", "1", ["0", "0", "0"], "0", "-"],
        ["1977", "only", "-", "Sep", "28", ["0", "0", "0"], "0", "-"],
        ["1978", "only", "-", "Jun", "1", ["0", "0", "0"], "60", "S"],
        ["1978", "only", "-", "Aug", "4", ["0", "0", "0"], "0", "-"],
        ["2008", "only", "-", "Jun", "1", ["0", "0", "0"], "60", "S"],
        ["2008", "only", "-", "Sep", "1", ["0", "0", "0"], "0", "-"],
        ["2009", "only", "-", "Jun", "1", ["0", "0", "0"], "60", "S"],
        ["2009", "only", "-", "Aug", "21", ["0", "0", "0"], "0", "-"],
        ["2010", "only", "-", "May", "2", ["0", "0", "0"], "60", "S"],
        ["2010", "only", "-", "Aug", "8", ["0", "0", "0"], "0", "-"],
        ["2011", "only", "-", "Apr", "3", ["0", "0", "0"], "60", "S"],
        ["2011", "only", "-", "Jul", "31", ["0", "0", "0"], "0", "-"],
        ["2012", "2013", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "S"],
        ["2012", "only", "-", "Sep", "30", ["3", "0", "0"], "0", "-"],
        ["2012", "only", "-", "Jul", "20", ["3", "0", "0"], "0", "-"],
        ["2012", "only", "-", "Aug", "20", ["2", "0", "0"], "60", "S"],
        ["2013", "only", "-", "Jul", "7", ["3", "0", "0"], "0", "-"],
        ["2013", "only", "-", "Aug", "10", ["2", "0", "0"], "60", "S"],
        ["2013", "max", "-", "Oct", "lastSun", ["3", "0", "0"], "0", "-"],
        ["2014", "2022", "-", "Mar", "lastSun", ["2", "0", "0"], "60", "S"],
        ["2014", "only", "-", "Jun", "28", ["3", "0", "0"], "0", "-"],
        ["2014", "only", "-", "Aug", "2", ["2", "0", "0"], "60", "S"],
        ["2015", "only", "-", "Jun", "13", ["3", "0", "0"], "0", "-"],
        ["2015", "only", "-", "Jul", "18", ["2", "0", "0"], "60", "S"],
        ["2016", "only", "-", "Jun", "4", ["3", "0", "0"], "0", "-"],
        ["2016", "only", "-", "Jul", "9", ["2", "0", "0"], "60", "S"],
        ["2017", "only", "-", "May", "20", ["3", "0", "0"], "0", "-"],
        ["2017", "only", "-", "Jul", "1", ["2", "0", "0"], "60", "S"],
        ["2018", "only", "-", "May", "12", ["3", "0", "0"], "0", "-"],
        ["2018", "only", "-", "Jun", "16", ["2", "0", "0"], "60", "S"],
        ["2019", "only", "-", "May", "4", ["3", "0", "0"], "0", "-"],
        ["2019", "only", "-", "Jun", "8", ["2", "0", "0"], "60", "S"],
        ["2020", "only", "-", "Apr", "18", ["3", "0", "0"], "0", "-"],
        ["2020", "only", "-", "May", "30", ["2", "0", "0"], "60", "S"],
        ["2021", "only", "-", "Apr", "10", ["3", "0", "0"], "0", "-"],
        ["2021", "only", "-", "May", "15", ["2", "0", "0"], "60", "S"],
        ["2022", "only", "-", "Apr", "2", ["3", "0", "0"], "0", "-"],
        ["2022", "only", "-", "May", "7", ["2", "0", "0"], "60", "S"],
        ["2023", "only", "-", "Apr", "22", ["2", "0", "0"], "60", "S"],
        ["2024", "only", "-", "Apr", "13", ["2", "0", "0"], "60", "S"],
        ["2025", "only", "-", "Apr", "5", ["2", "0", "0"], "60", "S"],
        ["2026", "max", "-", "Mar", "lastSun", ["2", "0", "0"], "60", "S"],
        ["2035", "only", "-", "Oct", "27", ["3", "0", "0"], "0", "-"],
        ["2036", "only", "-", "Oct", "18", ["3", "0", "0"], "0", "-"],
        ["2037", "only", "-", "Oct", "10", ["3", "0", "0"], "0", "-"]
    ],
    "Namibia": [
        ["1994", "max", "-", "Sep", "Sun>=1", ["2", "0", "0"], "60", "S"],
        ["1995", "max", "-", "Apr", "Sun>=1", ["2", "0", "0"], "0", "-"]
    ],
    "SA": [
        ["1942", "1943", "-", "Sep", "Sun>=15", ["2", "0", "0"], "60", "-"],
        ["1943", "1944", "-", "Mar", "Sun>=15", ["2", "0", "0"], "0", "-"]
    ],
    "Sudan": [
        ["1970", "only", "-", "May", "1", ["0", "0", "0"], "60", "S"],
        ["1970", "1985", "-", "Oct", "15", ["0", "0", "0"], "0", "-"],
        ["1971", "only", "-", "Apr", "30", ["0", "0", "0"], "60", "S"],
        ["1972", "1985", "-", "Apr", "lastSun", ["0", "0", "0"], "60", "S"]
    ],
    "Tunisia": [
        ["1939", "only", "-", "Apr", "15", ["23", "0", "0", "s"], "60", "S"],
        ["1939", "only", "-", "Nov", "18", ["23", "0", "0", "s"], "0", "-"],
        ["1940", "only", "-", "Feb", "25", ["23", "0", "0", "s"], "60", "S"],
        ["1941", "only", "-", "Oct", "6", ["0", "0", "0"], "0", "-"],
        ["1942", "only", "-", "Mar", "9", ["0", "0", "0"], "60", "S"],
        ["1942", "only", "-", "Nov", "2", ["3", "0", "0"], "0", "-"],
        ["1943", "only", "-", "Mar", "29", ["2", "0", "0"], "60", "S"],
        ["1943", "only", "-", "Apr", "17", ["2", "0", "0"], "0", "-"],
        ["1943", "only", "-", "Apr", "25", ["2", "0", "0"], "60", "S"],
        ["1943", "only", "-", "Oct", "4", ["2", "0", "0"], "0", "-"],
        ["1944", "1945", "-", "Apr", "Mon>=1", ["2", "0", "0"], "60", "S"],
        ["1944", "only", "-", "Oct", "8", ["0", "0", "0"], "0", "-"],
        ["1945", "only", "-", "Sep", "16", ["0", "0", "0"], "0", "-"],
        ["1977", "only", "-", "Apr", "30", ["0", "0", "0", "s"], "60", "S"],
        ["1977", "only", "-", "Sep", "24", ["0", "0", "0", "s"], "0", "-"],
        ["1978", "only", "-", "May", "1", ["0", "0", "0", "s"], "60", "S"],
        ["1978", "only", "-", "Oct", "1", ["0", "0", "0", "s"], "0", "-"],
        ["1988", "only", "-", "Jun", "1", ["0", "0", "0", "s"], "60", "S"],
        ["1988", "1990", "-", "Sep", "lastSun", ["0", "0", "0", "s"], "0", "-"],
        ["1989", "only", "-", "Mar", "26", ["0", "0", "0", "s"], "60", "S"],
        ["1990", "only", "-", "May", "1", ["0", "0", "0", "s"], "60", "S"],
        ["2005", "only", "-", "May", "1", ["0", "0", "0", "s"], "60", "S"],
        ["2005", "only", "-", "Sep", "30", ["1", "0", "0", "s"], "0", "-"],
        ["2006", "2008", "-", "Mar", "lastSun", ["2", "0", "0", "s"], "60", "S"],
        ["2006", "2008", "-", "Oct", "lastSun", ["2", "0", "0", "s"], "0", "-"]
    ],
    "ArgAQ": [
        ["1964", "1966", "-", "Mar", "1", ["0", "0", "0"], "0", "-"],
        ["1964", "1966", "-", "Oct", "15", ["0", "0", "0"], "60", "S"],
        ["1967", "only", "-", "Apr", "2", ["0", "0", "0"], "0", "-"],
        ["1967", "1968", "-", "Oct", "Sun>=1", ["0", "0", "0"], "60", "S"],
        ["1968", "1969", "-", "Apr", "Sun>=1", ["0", "0", "0"], "0", "-"],
        ["1974", "only", "-", "Jan", "23", ["0", "0", "0"], "60", "S"],
        ["1974", "only", "-", "May", "1", ["0", "0", "0"], "0", "-"]
    ],
    "ChileAQ": [
        ["1972", "1986", "-", "Mar", "Sun>=9", ["3", "0", "0", "u"], "0", "-"],
        ["1974", "1987", "-", "Oct", "Sun>=9", ["4", "0", "0", "u"], "60", "S"],
        ["1987", "only", "-", "Apr", "12", ["3", "0", "0", "u"], "0", "-"],
        ["1988", "1989", "-", "Mar", "Sun>=9", ["3", "0", "0", "u"], "0", "-"],
        ["1988", "only", "-", "Oct", "Sun>=1", ["4", "0", "0", "u"], "60", "S"],
        ["1989", "only", "-", "Oct", "Sun>=9", ["4", "0", "0", "u"], "60", "S"],
        ["1990", "only", "-", "Mar", "18", ["3", "0", "0", "u"], "0", "-"],
        ["1990", "only", "-", "Sep", "16", ["4", "0", "0", "u"], "60", "S"],
        ["1991", "1996", "-", "Mar", "Sun>=9", ["3", "0", "0", "u"], "0", "-"],
        ["1991", "1997", "-", "Oct", "Sun>=9", ["4", "0", "0", "u"], "60", "S"],
        ["1997", "only", "-", "Mar", "30", ["3", "0", "0", "u"], "0", "-"],
        ["1998", "only", "-", "Mar", "Sun>=9", ["3", "0", "0", "u"], "0", "-"],
        ["1998", "only", "-", "Sep", "27", ["4", "0", "0", "u"], "60", "S"],
        ["1999", "only", "-", "Apr", "4", ["3", "0", "0", "u"], "0", "-"],
        ["1999", "2010", "-", "Oct", "Sun>=9", ["4", "0", "0", "u"], "60", "S"],
        ["2000", "2007", "-", "Mar", "Sun>=9", ["3", "0", "0", "u"], "0", "-"],
        ["2008", "only", "-", "Mar", "30", ["3", "0", "0", "u"], "0", "-"],
        ["2009", "only", "-", "Mar", "Sun>=9", ["3", "0", "0", "u"], "0", "-"],
        ["2010", "only", "-", "Apr", "Sun>=1", ["3", "0", "0", "u"], "0", "-"],
        ["2011", "only", "-", "May", "Sun>=2", ["3", "0", "0", "u"], "0", "-"],
        ["2011", "only", "-", "Aug", "Sun>=16", ["4", "0", "0", "u"], "60", "S"],
        ["2012", "max", "-", "Apr", "Sun>=23", ["3", "0", "0", "u"], "0", "-"],
        ["2012", "max", "-", "Sep", "Sun>=2", ["4", "0", "0", "u"], "60", "S"]
    ],
    "Troll": [
        ["2005", "max", "-", "Mar", "lastSun", ["1", "0", "0", "u"], "120", "CEST"],
        ["2004", "max", "-", "Oct", "lastSun", ["1", "0", "0", "u"], "0", "UTC"]
    ],
    "EUAsia": [
        ["1981", "max", "-", "Mar", "lastSun", ["1", "0", "0", "u"], "60", "S"],
        ["1979", "1995", "-", "Sep", "lastSun", ["1", "0", "0", "u"], "0", "-"],
        ["1996", "max", "-", "Oct", "lastSun", ["1", "0", "0", "u"], "0", "-"]
    ],
    "E-EurAsia": [
        ["1981", "max", "-", "Mar", "lastSun", ["0", "0", "0"], "60", "S"],
        ["1979", "1995", "-", "Sep", "lastSun", ["0", "0", "0"], "0", "-"],
        ["1996", "max", "-", "Oct", "lastSun", ["0", "0", "0"], "0", "-"]
    ],
    "RussiaAsia": [
        ["1981", "1984", "-", "Apr", "1", ["0", "0", "0"], "60", "S"],
        ["1981", "1983", "-", "Oct", "1", ["0", "0", "0"], "0", "-"],
        ["1984", "1991", "-", "Sep", "lastSun", ["2", "0", "0", "s"], "0", "-"],
        ["1985", "1991", "-", "Mar", "lastSun", ["2", "0", "0", "s"], "60", "S"],
        ["1992", "only", "-", "Mar", "lastSat", ["23", "0", "0"], "60", "S"],
        ["1992", "only", "-", "Sep", "lastSat", ["23", "0", "0"], "0", "-"],
        ["1993", "max", "-", "Mar", "lastSun", ["2", "0", "0", "s"], "60", "S"],
        ["1993", "1995", "-", "Sep", "lastSun", ["2", "0", "0", "s"], "0", "-"],
        ["1996", "max", "-", "Oct", "lastSun", ["2", "0", "0", "s"], "0", "-"]
    ],
    "Azer": [
        ["1997", "max", "-", "Mar", "lastSun", ["4", "0", "0"], "60", "S"],
        ["1997", "max", "-", "Oct", "lastSun", ["5", "0", "0"], "0", "-"]
    ],
    "Dhaka": [
        ["2009", "only", "-", "Jun", "19", ["23", "0", "0"], "60", "S"],
        ["2009", "only", "-", "Dec", "31", ["24", "0", "0"], "0", "-"]
    ],
    "Shang": [
        ["1940", "only", "-", "Jun", "3", ["0", "0", "0"], "60", "D"],
        ["1940", "1941", "-", "Oct", "1", ["0", "0", "0"], "0", "S"],
        ["1941", "only", "-", "Mar", "16", ["0", "0", "0"], "60", "D"]
    ],
    "PRC": [
        ["1986", "only", "-", "May", "4", ["0", "0", "0"], "60", "D"],
        ["1986", "1991", "-", "Sep", "Sun>=11", ["0", "0", "0"], "0", "S"],
        ["1987", "1991", "-", "Apr", "Sun>=10", ["0", "0", "0"], "60", "D"]
    ],
    "HK": [
        ["1941", "only", "-", "Apr", "1", ["3", "30", "0"], "60", "S"],
        ["1941", "only", "-", "Sep", "30", ["3", "30", "0"], "0", "-"],
        ["1946", "only", "-", "Apr", "20", ["3", "30", "0"], "60", "S"],
        ["1946", "only", "-", "Dec", "1", ["3", "30", "0"], "0", "-"],
        ["1947", "only", "-", "Apr", "13", ["3", "30", "0"], "60", "S"],
        ["1947", "only", "-", "Dec", "30", ["3", "30", "0"], "0", "-"],
        ["1948", "only", "-", "May", "2", ["3", "30", "0"], "60", "S"],
        ["1948", "1951", "-", "Oct", "lastSun", ["3", "30", "0"], "0", "-"],
        ["1952", "only", "-", "Oct", "25", ["3", "30", "0"], "0", "-"],
        ["1949", "1953", "-", "Apr", "Sun>=1", ["3", "30", "0"], "60", "S"],
        ["1953", "only", "-", "Nov", "1", ["3", "30", "0"], "0", "-"],
        ["1954", "1964", "-", "Mar", "Sun>=18", ["3", "30", "0"], "60", "S"],
        ["1954", "only", "-", "Oct", "31", ["3", "30", "0"], "0", "-"],
        ["1955", "1964", "-", "Nov", "Sun>=1", ["3", "30", "0"], "0", "-"],
        ["1965", "1976", "-", "Apr", "Sun>=16", ["3", "30", "0"], "60", "S"],
        ["1965", "1976", "-", "Oct", "Sun>=16", ["3", "30", "0"], "0", "-"],
        ["1973", "only", "-", "Dec", "30", ["3", "30", "0"], "60", "S"],
        ["1979", "only", "-", "May", "Sun>=8", ["3", "30", "0"], "60", "S"],
        ["1979", "only", "-", "Oct", "Sun>=16", ["3", "30", "0"], "0", "-"]
    ],
    "Taiwan": [
        ["1946", "only", "-", "May", "15", ["0", "0", "0"], "60", "D"],
        ["1946", "only", "-", "Oct", "1", ["0", "0", "0"], "0", "S"],
        ["1947", "only", "-", "Apr", "15", ["0", "0", "0"], "60", "D"],
        ["1947", "only", "-", "Nov", "1", ["0", "0", "0"], "0", "S"],
        ["1948", "1951", "-", "May", "1", ["0", "0", "0"], "60", "D"],
        ["1948", "1951", "-", "Oct", "1", ["0", "0", "0"], "0", "S"],
        ["1952", "only", "-", "Mar", "1", ["0", "0", "0"], "60", "D"],
        ["1952", "1954", "-", "Nov", "1", ["0", "0", "0"], "0", "S"],
        ["1953", "1959", "-", "Apr", "1", ["0", "0", "0"], "60", "D"],
        ["1955", "1961", "-", "Oct", "1", ["0", "0", "0"], "0", "S"],
        ["1960", "1961", "-", "Jun", "1", ["0", "0", "0"], "60", "D"],
        ["1974", "1975", "-", "Apr", "1", ["0", "0", "0"], "60", "D"],
        ["1974", "1975", "-", "Oct", "1", ["0", "0", "0"], "0", "S"],
        ["1979", "only", "-", "Jul", "1", ["0", "0", "0"], "60", "D"],
        ["1979", "only", "-", "Oct", "1", ["0", "0", "0"], "0", "S"]
    ],
    "Macau": [
        ["1961", "1962", "-", "Mar", "Sun>=16", ["3", "30", "0"], "60", "S"],
        ["1961", "1964", "-", "Nov", "Sun>=1", ["3", "30", "0"], "0", "-"],
        ["1963", "only", "-", "Mar", "Sun>=16", ["0", "0", "0"], "60", "S"],
        ["1964", "only", "-", "Mar", "Sun>=16", ["3", "30", "0"], "60", "S"],
        ["1965", "only", "-", "Mar", "Sun>=16", ["0", "0", "0"], "60", "S"],
        ["1965", "only", "-", "Oct", "31", ["0", "0", "0"], "0", "-"],
        ["1966", "1971", "-", "Apr", "Sun>=16", ["3", "30", "0"], "60", "S"],
        ["1966", "1971", "-", "Oct", "Sun>=16", ["3", "30", "0"], "0", "-"],
        ["1972", "1974", "-", "Apr", "Sun>=15", ["0", "0", "0"], "60", "S"],
        ["1972", "1973", "-", "Oct", "Sun>=15", ["0", "0", "0"], "0", "-"],
        ["1974", "1977", "-", "Oct", "Sun>=15", ["3", "30", "0"], "0", "-"],
        ["1975", "1977", "-", "Apr", "Sun>=15", ["3", "30", "0"], "60", "S"],
        ["1978", "1980", "-", "Apr", "Sun>=15", ["0", "0", "0"], "60", "S"],
        ["1978", "1980", "-", "Oct", "Sun>=15", ["0", "0", "0"], "0", "-"]
    ],
    "Cyprus": [
        ["1975", "only", "-", "Apr", "13", ["0", "0", "0"], "60", "S"],
        ["1975", "only", "-", "Oct", "12", ["0", "0", "0"], "0", "-"],
        ["1976", "only", "-", "May", "15", ["0", "0", "0"], "60", "S"],
        ["1976", "only", "-", "Oct", "11", ["0", "0", "0"], "0", "-"],
        ["1977", "1980", "-", "Apr", "Sun>=1", ["0", "0", "0"], "60", "S"],
        ["1977", "only", "-", "Sep", "25", ["0", "0", "0"], "0", "-"],
        ["1978", "only", "-", "Oct", "2", ["0", "0", "0"], "0", "-"],
        ["1979", "1997", "-", "Sep", "lastSun", ["0", "0", "0"], "0", "-"],
        ["1981", "1998", "-", "Mar", "lastSun", ["0", "0", "0"], "60", "S"]
    ],
    "Iran": [
        ["1978", "1980", "-", "Mar", "21", ["0", "0", "0"], "60", "D"],
        ["1978", "only", "-", "Oct", "21", ["0", "0", "0"], "0", "S"],
        ["1979", "only", "-", "Sep", "19", ["0", "0", "0"], "0", "S"],
        ["1980", "only", "-", "Sep", "23", ["0", "0", "0"], "0", "S"],
        ["1991", "only", "-", "May", "3", ["0", "0", "0"], "60", "D"],
        ["1992", "1995", "-", "Mar", "22", ["0", "0", "0"], "60", "D"],
        ["1991", "1995", "-", "Sep", "22", ["0", "0", "0"], "0", "S"],
        ["1996", "only", "-", "Mar", "21", ["0", "0", "0"], "60", "D"],
        ["1996", "only", "-", "Sep", "21", ["0", "0", "0"], "0", "S"],
        ["1997", "1999", "-", "Mar", "22", ["0", "0", "0"], "60", "D"],
        ["1997", "1999", "-", "Sep", "22", ["0", "0", "0"], "0", "S"],
        ["2000", "only", "-", "Mar", "21", ["0", "0", "0"], "60", "D"],
        ["2000", "only", "-", "Sep", "21", ["0", "0", "0"], "0", "S"],
        ["2001", "2003", "-", "Mar", "22", ["0", "0", "0"], "60", "D"],
        ["2001", "2003", "-", "Sep", "22", ["0", "0", "0"], "0", "S"],
        ["2004", "only", "-", "Mar", "21", ["0", "0", "0"], "60", "D"],
        ["2004", "only", "-", "Sep", "21", ["0", "0", "0"], "0", "S"],
        ["2005", "only", "-", "Mar", "22", ["0", "0", "0"], "60", "D"],
        ["2005", "only", "-", "Sep", "22", ["0", "0", "0"], "0", "S"],
        ["2008", "only", "-", "Mar", "21", ["0", "0", "0"], "60", "D"],
        ["2008", "only", "-", "Sep", "21", ["0", "0", "0"], "0", "S"],
        ["2009", "2011", "-", "Mar", "22", ["0", "0", "0"], "60", "D"],
        ["2009", "2011", "-", "Sep", "22", ["0", "0", "0"], "0", "S"],
        ["2012", "only", "-", "Mar", "21", ["0", "0", "0"], "60", "D"],
        ["2012", "only", "-", "Sep", "21", ["0", "0", "0"], "0", "S"],
        ["2013", "2015", "-", "Mar", "22", ["0", "0", "0"], "60", "D"],
        ["2013", "2015", "-", "Sep", "22", ["0", "0", "0"], "0", "S"],
        ["2016", "only", "-", "Mar", "21", ["0", "0", "0"], "60", "D"],
        ["2016", "only", "-", "Sep", "21", ["0", "0", "0"], "0", "S"],
        ["2017", "2019", "-", "Mar", "22", ["0", "0", "0"], "60", "D"],
        ["2017", "2019", "-", "Sep", "22", ["0", "0", "0"], "0", "S"],
        ["2020", "only", "-", "Mar", "21", ["0", "0", "0"], "60", "D"],
        ["2020", "only", "-", "Sep", "21", ["0", "0", "0"], "0", "S"],
        ["2021", "2023", "-", "Mar", "22", ["0", "0", "0"], "60", "D"],
        ["2021", "2023", "-", "Sep", "22", ["0", "0", "0"], "0", "S"],
        ["2024", "only", "-", "Mar", "21", ["0", "0", "0"], "60", "D"],
        ["2024", "only", "-", "Sep", "21", ["0", "0", "0"], "0", "S"],
        ["2025", "2027", "-", "Mar", "22", ["0", "0", "0"], "60", "D"],
        ["2025", "2027", "-", "Sep", "22", ["0", "0", "0"], "0", "S"],
        ["2028", "2029", "-", "Mar", "21", ["0", "0", "0"], "60", "D"],
        ["2028", "2029", "-", "Sep", "21", ["0", "0", "0"], "0", "S"],
        ["2030", "2031", "-", "Mar", "22", ["0", "0", "0"], "60", "D"],
        ["2030", "2031", "-", "Sep", "22", ["0", "0", "0"], "0", "S"],
        ["2032", "2033", "-", "Mar", "21", ["0", "0", "0"], "60", "D"],
        ["2032", "2033", "-", "Sep", "21", ["0", "0", "0"], "0", "S"],
        ["2034", "2035", "-", "Mar", "22", ["0", "0", "0"], "60", "D"],
        ["2034", "2035", "-", "Sep", "22", ["0", "0", "0"], "0", "S"],
        ["2036", "2037", "-", "Mar", "21", ["0", "0", "0"], "60", "D"],
        ["2036", "2037", "-", "Sep", "21", ["0", "0", "0"], "0", "S"]
    ],
    "Iraq": [
        ["1982", "only", "-", "May", "1", ["0", "0", "0"], "60", "D"],
        ["1982", "1984", "-", "Oct", "1", ["0", "0", "0"], "0", "S"],
        ["1983", "only", "-", "Mar", "31", ["0", "0", "0"], "60", "D"],
        ["1984", "1985", "-", "Apr", "1", ["0", "0", "0"], "60", "D"],
        ["1985", "1990", "-", "Sep", "lastSun", ["1", "0", "0", "s"], "0", "S"],
        ["1986", "1990", "-", "Mar", "lastSun", ["1", "0", "0", "s"], "60", "D"],
        ["1991", "2007", "-", "Apr", "1", ["3", "0", "0", "s"], "60", "D"],
        ["1991", "2007", "-", "Oct", "1", ["3", "0", "0", "s"], "0", "S"]
    ],
    "Zion": [
        ["1940", "only", "-", "Jun", "1", ["0", "0", "0"], "60", "D"],
        ["1942", "1944", "-", "Nov", "1", ["0", "0", "0"], "0", "S"],
        ["1943", "only", "-", "Apr", "1", ["2", "0", "0"], "60", "D"],
        ["1944", "only", "-", "Apr", "1", ["0", "0", "0"], "60", "D"],
        ["1945", "only", "-", "Apr", "16", ["0", "0", "0"], "60", "D"],
        ["1945", "only", "-", "Nov", "1", ["2", "0", "0"], "0", "S"],
        ["1946", "only", "-", "Apr", "16", ["2", "0", "0"], "60", "D"],
        ["1946", "only", "-", "Nov", "1", ["0", "0", "0"], "0", "S"],
        ["1948", "only", "-", "May", "23", ["0", "0", "0"], "120", "DD"],
        ["1948", "only", "-", "Sep", "1", ["0", "0", "0"], "60", "D"],
        ["1948", "1949", "-", "Nov", "1", ["2", "0", "0"], "0", "S"],
        ["1949", "only", "-", "May", "1", ["0", "0", "0"], "60", "D"],
        ["1950", "only", "-", "Apr", "16", ["0", "0", "0"], "60", "D"],
        ["1950", "only", "-", "Sep", "15", ["3", "0", "0"], "0", "S"],
        ["1951", "only", "-", "Apr", "1", ["0", "0", "0"], "60", "D"],
        ["1951", "only", "-", "Nov", "11", ["3", "0", "0"], "0", "S"],
        ["1952", "only", "-", "Apr", "20", ["2", "0", "0"], "60", "D"],
        ["1952", "only", "-", "Oct", "19", ["3", "0", "0"], "0", "S"],
        ["1953", "only", "-", "Apr", "12", ["2", "0", "0"], "60", "D"],
        ["1953", "only", "-", "Sep", "13", ["3", "0", "0"], "0", "S"],
        ["1954", "only", "-", "Jun", "13", ["0", "0", "0"], "60", "D"],
        ["1954", "only", "-", "Sep", "12", ["0", "0", "0"], "0", "S"],
        ["1955", "only", "-", "Jun", "11", ["2", "0", "0"], "60", "D"],
        ["1955", "only", "-", "Sep", "11", ["0", "0", "0"], "0", "S"],
        ["1956", "only", "-", "Jun", "3", ["0", "0", "0"], "60", "D"],
        ["1956", "only", "-", "Sep", "30", ["3", "0", "0"], "0", "S"],
        ["1957", "only", "-", "Apr", "29", ["2", "0", "0"], "60", "D"],
        ["1957", "only", "-", "Sep", "22", ["0", "0", "0"], "0", "S"],
        ["1974", "only", "-", "Jul", "7", ["0", "0", "0"], "60", "D"],
        ["1974", "only", "-", "Oct", "13", ["0", "0", "0"], "0", "S"],
        ["1975", "only", "-", "Apr", "20", ["0", "0", "0"], "60", "D"],
        ["1975", "only", "-", "Aug", "31", ["0", "0", "0"], "0", "S"],
        ["1985", "only", "-", "Apr", "14", ["0", "0", "0"], "60", "D"],
        ["1985", "only", "-", "Sep", "15", ["0", "0", "0"], "0", "S"],
        ["1986", "only", "-", "May", "18", ["0", "0", "0"], "60", "D"],
        ["1986", "only", "-", "Sep", "7", ["0", "0", "0"], "0", "S"],
        ["1987", "only", "-", "Apr", "15", ["0", "0", "0"], "60", "D"],
        ["1987", "only", "-", "Sep", "13", ["0", "0", "0"], "0", "S"],
        ["1988", "only", "-", "Apr", "10", ["0", "0", "0"], "60", "D"],
        ["1988", "only", "-", "Sep", "4", ["0", "0", "0"], "0", "S"],
        ["1989", "only", "-", "Apr", "30", ["0", "0", "0"], "60", "D"],
        ["1989", "only", "-", "Sep", "3", ["0", "0", "0"], "0", "S"],
        ["1990", "only", "-", "Mar", "25", ["0", "0", "0"], "60", "D"],
        ["1990", "only", "-", "Aug", "26", ["0", "0", "0"], "0", "S"],
        ["1991", "only", "-", "Mar", "24", ["0", "0", "0"], "60", "D"],
        ["1991", "only", "-", "Sep", "1", ["0", "0", "0"], "0", "S"],
        ["1992", "only", "-", "Mar", "29", ["0", "0", "0"], "60", "D"],
        ["1992", "only", "-", "Sep", "6", ["0", "0", "0"], "0", "S"],
        ["1993", "only", "-", "Apr", "2", ["0", "0", "0"], "60", "D"],
        ["1993", "only", "-", "Sep", "5", ["0", "0", "0"], "0", "S"],
        ["1994", "only", "-", "Apr", "1", ["0", "0", "0"], "60", "D"],
        ["1994", "only", "-", "Aug", "28", ["0", "0", "0"], "0", "S"],
        ["1995", "only", "-", "Mar", "31", ["0", "0", "0"], "60", "D"],
        ["1995", "only", "-", "Sep", "3", ["0", "0", "0"], "0", "S"],
        ["1996", "only", "-", "Mar", "15", ["0", "0", "0"], "60", "D"],
        ["1996", "only", "-", "Sep", "16", ["0", "0", "0"], "0", "S"],
        ["1997", "only", "-", "Mar", "21", ["0", "0", "0"], "60", "D"],
        ["1997", "only", "-", "Sep", "14", ["0", "0", "0"], "0", "S"],
        ["1998", "only", "-", "Mar", "20", ["0", "0", "0"], "60", "D"],
        ["1998", "only", "-", "Sep", "6", ["0", "0", "0"], "0", "S"],
        ["1999", "only", "-", "Apr", "2", ["2", "0", "0"], "60", "D"],
        ["1999", "only", "-", "Sep", "3", ["2", "0", "0"], "0", "S"],
        ["2000", "only", "-", "Apr", "14", ["2", "0", "0"], "60", "D"],
        ["2000", "only", "-", "Oct", "6", ["1", "0", "0"], "0", "S"],
        ["2001", "only", "-", "Apr", "9", ["1", "0", "0"], "60", "D"],
        ["2001", "only", "-", "Sep", "24", ["1", "0", "0"], "0", "S"],
        ["2002", "only", "-", "Mar", "29", ["1", "0", "0"], "60", "D"],
        ["2002", "only", "-", "Oct", "7", ["1", "0", "0"], "0", "S"],
        ["2003", "only", "-", "Mar", "28", ["1", "0", "0"], "60", "D"],
        ["2003", "only", "-", "Oct", "3", ["1", "0", "0"], "0", "S"],
        ["2004", "only", "-", "Apr", "7", ["1", "0", "0"], "60", "D"],
        ["2004", "only", "-", "Sep", "22", ["1", "0", "0"], "0", "S"],
        ["2005", "only", "-", "Apr", "1", ["2", "0", "0"], "60", "D"],
        ["2005", "only", "-", "Oct", "9", ["2", "0", "0"], "0", "S"],
        ["2006", "2010", "-", "Mar", "Fri>=26", ["2", "0", "0"], "60", "D"],
        ["2006", "only", "-", "Oct", "1", ["2", "0", "0"], "0", "S"],
        ["2007", "only", "-", "Sep", "16", ["2", "0", "0"], "0", "S"],
        ["2008", "only", "-", "Oct", "5", ["2", "0", "0"], "0", "S"],
        ["2009", "only", "-", "Sep", "27", ["2", "0", "0"], "0", "S"],
        ["2010", "only", "-", "Sep", "12", ["2", "0", "0"], "0", "S"],
        ["2011", "only", "-", "Apr", "1", ["2", "0", "0"], "60", "D"],
        ["2011", "only", "-", "Oct", "2", ["2", "0", "0"], "0", "S"],
        ["2012", "only", "-", "Mar", "Fri>=26", ["2", "0", "0"], "60", "D"],
        ["2012", "only", "-", "Sep", "23", ["2", "0", "0"], "0", "S"],
        ["2013", "max", "-", "Mar", "Fri>=23", ["2", "0", "0"], "60", "D"],
        ["2013", "max", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"]
    ],
    "Japan": [
        ["1948", "only", "-", "May", "Sun>=1", ["2", "0", "0"], "60", "D"],
        ["1948", "1951", "-", "Sep", "Sat>=8", ["2", "0", "0"], "0", "S"],
        ["1949", "only", "-", "Apr", "Sun>=1", ["2", "0", "0"], "60", "D"],
        ["1950", "1951", "-", "May", "Sun>=1", ["2", "0", "0"], "60", "D"]
    ],
    "Jordan": [
        ["1973", "only", "-", "Jun", "6", ["0", "0", "0"], "60", "S"],
        ["1973", "1975", "-", "Oct", "1", ["0", "0", "0"], "0", "-"],
        ["1974", "1977", "-", "May", "1", ["0", "0", "0"], "60", "S"],
        ["1976", "only", "-", "Nov", "1", ["0", "0", "0"], "0", "-"],
        ["1977", "only", "-", "Oct", "1", ["0", "0", "0"], "0", "-"],
        ["1978", "only", "-", "Apr", "30", ["0", "0", "0"], "60", "S"],
        ["1978", "only", "-", "Sep", "30", ["0", "0", "0"], "0", "-"],
        ["1985", "only", "-", "Apr", "1", ["0", "0", "0"], "60", "S"],
        ["1985", "only", "-", "Oct", "1", ["0", "0", "0"], "0", "-"],
        ["1986", "1988", "-", "Apr", "Fri>=1", ["0", "0", "0"], "60", "S"],
        ["1986", "1990", "-", "Oct", "Fri>=1", ["0", "0", "0"], "0", "-"],
        ["1989", "only", "-", "May", "8", ["0", "0", "0"], "60", "S"],
        ["1990", "only", "-", "Apr", "27", ["0", "0", "0"], "60", "S"],
        ["1991", "only", "-", "Apr", "17", ["0", "0", "0"], "60", "S"],
        ["1991", "only", "-", "Sep", "27", ["0", "0", "0"], "0", "-"],
        ["1992", "only", "-", "Apr", "10", ["0", "0", "0"], "60", "S"],
        ["1992", "1993", "-", "Oct", "Fri>=1", ["0", "0", "0"], "0", "-"],
        ["1993", "1998", "-", "Apr", "Fri>=1", ["0", "0", "0"], "60", "S"],
        ["1994", "only", "-", "Sep", "Fri>=15", ["0", "0", "0"], "0", "-"],
        ["1995", "1998", "-", "Sep", "Fri>=15", ["0", "0", "0", "s"], "0", "-"],
        ["1999", "only", "-", "Jul", "1", ["0", "0", "0", "s"], "60", "S"],
        ["1999", "2002", "-", "Sep", "lastFri", ["0", "0", "0", "s"], "0", "-"],
        ["2000", "2001", "-", "Mar", "lastThu", ["0", "0", "0", "s"], "60", "S"],
        ["2002", "2012", "-", "Mar", "lastThu", ["24", "0", "0"], "60", "S"],
        ["2003", "only", "-", "Oct", "24", ["0", "0", "0", "s"], "0", "-"],
        ["2004", "only", "-", "Oct", "15", ["0", "0", "0", "s"], "0", "-"],
        ["2005", "only", "-", "Sep", "lastFri", ["0", "0", "0", "s"], "0", "-"],
        ["2006", "2011", "-", "Oct", "lastFri", ["0", "0", "0", "s"], "0", "-"],
        ["2013", "only", "-", "Dec", "20", ["0", "0", "0"], "0", "-"],
        ["2014", "max", "-", "Mar", "lastThu", ["24", "0", "0"], "60", "S"],
        ["2014", "max", "-", "Oct", "lastFri", ["0", "0", "0", "s"], "0", "-"]
    ],
    "Kyrgyz": [
        ["1992", "1996", "-", "Apr", "Sun>=7", ["0", "0", "0", "s"], "60", "S"],
        ["1992", "1996", "-", "Sep", "lastSun", ["0", "0", "0"], "0", "-"],
        ["1997", "2005", "-", "Mar", "lastSun", ["2", "30", "0"], "60", "S"],
        ["1997", "2004", "-", "Oct", "lastSun", ["2", "30", "0"], "0", "-"]
    ],
    "ROK": [
        ["1960", "only", "-", "May", "15", ["0", "0", "0"], "60", "D"],
        ["1960", "only", "-", "Sep", "13", ["0", "0", "0"], "0", "S"],
        ["1987", "1988", "-", "May", "Sun>=8", ["0", "0", "0"], "60", "D"],
        ["1987", "1988", "-", "Oct", "Sun>=8", ["0", "0", "0"], "0", "S"]
    ],
    "Lebanon": [
        ["1920", "only", "-", "Mar", "28", ["0", "0", "0"], "60", "S"],
        ["1920", "only", "-", "Oct", "25", ["0", "0", "0"], "0", "-"],
        ["1921", "only", "-", "Apr", "3", ["0", "0", "0"], "60", "S"],
        ["1921", "only", "-", "Oct", "3", ["0", "0", "0"], "0", "-"],
        ["1922", "only", "-", "Mar", "26", ["0", "0", "0"], "60", "S"],
        ["1922", "only", "-", "Oct", "8", ["0", "0", "0"], "0", "-"],
        ["1923", "only", "-", "Apr", "22", ["0", "0", "0"], "60", "S"],
        ["1923", "only", "-", "Sep", "16", ["0", "0", "0"], "0", "-"],
        ["1957", "1961", "-", "May", "1", ["0", "0", "0"], "60", "S"],
        ["1957", "1961", "-", "Oct", "1", ["0", "0", "0"], "0", "-"],
        ["1972", "only", "-", "Jun", "22", ["0", "0", "0"], "60", "S"],
        ["1972", "1977", "-", "Oct", "1", ["0", "0", "0"], "0", "-"],
        ["1973", "1977", "-", "May", "1", ["0", "0", "0"], "60", "S"],
        ["1978", "only", "-", "Apr", "30", ["0", "0", "0"], "60", "S"],
        ["1978", "only", "-", "Sep", "30", ["0", "0", "0"], "0", "-"],
        ["1984", "1987", "-", "May", "1", ["0", "0", "0"], "60", "S"],
        ["1984", "1991", "-", "Oct", "16", ["0", "0", "0"], "0", "-"],
        ["1988", "only", "-", "Jun", "1", ["0", "0", "0"], "60", "S"],
        ["1989", "only", "-", "May", "10", ["0", "0", "0"], "60", "S"],
        ["1990", "1992", "-", "May", "1", ["0", "0", "0"], "60", "S"],
        ["1992", "only", "-", "Oct", "4", ["0", "0", "0"], "0", "-"],
        ["1993", "max", "-", "Mar", "lastSun", ["0", "0", "0"], "60", "S"],
        ["1993", "1998", "-", "Sep", "lastSun", ["0", "0", "0"], "0", "-"],
        ["1999", "max", "-", "Oct", "lastSun", ["0", "0", "0"], "0", "-"]
    ],
    "NBorneo": [
        ["1935", "1941", "-", "Sep", "14", ["0", "0", "0"], "20", "TS", ""],
        ["1935", "1941", "-", "Dec", "14", ["0", "0", "0"], "0", "-"]
    ],
    "Mongol": [
        ["1983", "1984", "-", "Apr", "1", ["0", "0", "0"], "60", "S"],
        ["1983", "only", "-", "Oct", "1", ["0", "0", "0"], "0", "-"],
        ["1985", "1998", "-", "Mar", "lastSun", ["0", "0", "0"], "60", "S"],
        ["1984", "1998", "-", "Sep", "lastSun", ["0", "0", "0"], "0", "-"],
        ["2001", "only", "-", "Apr", "lastSat", ["2", "0", "0"], "60", "S"],
        ["2001", "2006", "-", "Sep", "lastSat", ["2", "0", "0"], "0", "-"],
        ["2002", "2006", "-", "Mar", "lastSat", ["2", "0", "0"], "60", "S"]
    ],
    "Pakistan": [
        ["2002", "only", "-", "Apr", "Sun>=2", ["0", "1", "0"], "60", "S"],
        ["2002", "only", "-", "Oct", "Sun>=2", ["0", "1", "0"], "0", "-"],
        ["2008", "only", "-", "Jun", "1", ["0", "0", "0"], "60", "S"],
        ["2008", "2009", "-", "Nov", "1", ["0", "0", "0"], "0", "-"],
        ["2009", "only", "-", "Apr", "15", ["0", "0", "0"], "60", "S"]
    ],
    "EgyptAsia": [
        ["1957", "only", "-", "May", "10", ["0", "0", "0"], "60", "S"],
        ["1957", "1958", "-", "Oct", "1", ["0", "0", "0"], "0", "-"],
        ["1958", "only", "-", "May", "1", ["0", "0", "0"], "60", "S"],
        ["1959", "1967", "-", "May", "1", ["1", "0", "0"], "60", "S"],
        ["1959", "1965", "-", "Sep", "30", ["3", "0", "0"], "0", "-"],
        ["1966", "only", "-", "Oct", "1", ["3", "0", "0"], "0", "-"]
    ],
    "Palestine": [
        ["1999", "2005", "-", "Apr", "Fri>=15", ["0", "0", "0"], "60", "S"],
        ["1999", "2003", "-", "Oct", "Fri>=15", ["0", "0", "0"], "0", "-"],
        ["2004", "only", "-", "Oct", "1", ["1", "0", "0"], "0", "-"],
        ["2005", "only", "-", "Oct", "4", ["2", "0", "0"], "0", "-"],
        ["2006", "2007", "-", "Apr", "1", ["0", "0", "0"], "60", "S"],
        ["2006", "only", "-", "Sep", "22", ["0", "0", "0"], "0", "-"],
        ["2007", "only", "-", "Sep", "Thu>=8", ["2", "0", "0"], "0", "-"],
        ["2008", "2009", "-", "Mar", "lastFri", ["0", "0", "0"], "60", "S"],
        ["2008", "only", "-", "Sep", "1", ["0", "0", "0"], "0", "-"],
        ["2009", "only", "-", "Sep", "Fri>=1", ["1", "0", "0"], "0", "-"],
        ["2010", "only", "-", "Mar", "26", ["0", "0", "0"], "60", "S"],
        ["2010", "only", "-", "Aug", "11", ["0", "0", "0"], "0", "-"],
        ["2011", "only", "-", "Apr", "1", ["0", "1", "0"], "60", "S"],
        ["2011", "only", "-", "Aug", "1", ["0", "0", "0"], "0", "-"],
        ["2011", "only", "-", "Aug", "30", ["0", "0", "0"], "60", "S"],
        ["2011", "only", "-", "Sep", "30", ["0", "0", "0"], "0", "-"],
        ["2012", "max", "-", "Mar", "lastThu", ["24", "0", "0"], "60", "S"],
        ["2012", "only", "-", "Sep", "21", ["1", "0", "0"], "0", "-"],
        ["2013", "max", "-", "Sep", "Fri>=21", ["0", "0", "0"], "0", "-"]
    ],
    "Phil": [
        ["1936", "only", "-", "Nov", "1", ["0", "0", "0"], "60", "S"],
        ["1937", "only", "-", "Feb", "1", ["0", "0", "0"], "0", "-"],
        ["1954", "only", "-", "Apr", "12", ["0", "0", "0"], "60", "S"],
        ["1954", "only", "-", "Jul", "1", ["0", "0", "0"], "0", "-"],
        ["1978", "only", "-", "Mar", "22", ["0", "0", "0"], "60", "S"],
        ["1978", "only", "-", "Sep", "21", ["0", "0", "0"], "0", "-"]
    ],
    "Syria": [
        ["1920", "1923", "-", "Apr", "Sun>=15", ["2", "0", "0"], "60", "S"],
        ["1920", "1923", "-", "Oct", "Sun>=1", ["2", "0", "0"], "0", "-"],
        ["1962", "only", "-", "Apr", "29", ["2", "0", "0"], "60", "S"],
        ["1962", "only", "-", "Oct", "1", ["2", "0", "0"], "0", "-"],
        ["1963", "1965", "-", "May", "1", ["2", "0", "0"], "60", "S"],
        ["1963", "only", "-", "Sep", "30", ["2", "0", "0"], "0", "-"],
        ["1964", "only", "-", "Oct", "1", ["2", "0", "0"], "0", "-"],
        ["1965", "only", "-", "Sep", "30", ["2", "0", "0"], "0", "-"],
        ["1966", "only", "-", "Apr", "24", ["2", "0", "0"], "60", "S"],
        ["1966", "1976", "-", "Oct", "1", ["2", "0", "0"], "0", "-"],
        ["1967", "1978", "-", "May", "1", ["2", "0", "0"], "60", "S"],
        ["1977", "1978", "-", "Sep", "1", ["2", "0", "0"], "0", "-"],
        ["1983", "1984", "-", "Apr", "9", ["2", "0", "0"], "60", "S"],
        ["1983", "1984", "-", "Oct", "1", ["2", "0", "0"], "0", "-"],
        ["1986", "only", "-", "Feb", "16", ["2", "0", "0"], "60", "S"],
        ["1986", "only", "-", "Oct", "9", ["2", "0", "0"], "0", "-"],
        ["1987", "only", "-", "Mar", "1", ["2", "0", "0"], "60", "S"],
        ["1987", "1988", "-", "Oct", "31", ["2", "0", "0"], "0", "-"],
        ["1988", "only", "-", "Mar", "15", ["2", "0", "0"], "60", "S"],
        ["1989", "only", "-", "Mar", "31", ["2", "0", "0"], "60", "S"],
        ["1989", "only", "-", "Oct", "1", ["2", "0", "0"], "0", "-"],
        ["1990", "only", "-", "Apr", "1", ["2", "0", "0"], "60", "S"],
        ["1990", "only", "-", "Sep", "30", ["2", "0", "0"], "0", "-"],
        ["1991", "only", "-", "Apr", "1", ["0", "0", "0"], "60", "S"],
        ["1991", "1992", "-", "Oct", "1", ["0", "0", "0"], "0", "-"],
        ["1992", "only", "-", "Apr", "8", ["0", "0", "0"], "60", "S"],
        ["1993", "only", "-", "Mar", "26", ["0", "0", "0"], "60", "S"],
        ["1993", "only", "-", "Sep", "25", ["0", "0", "0"], "0", "-"],
        ["1994", "1996", "-", "Apr", "1", ["0", "0", "0"], "60", "S"],
        ["1994", "2005", "-", "Oct", "1", ["0", "0", "0"], "0", "-"],
        ["1997", "1998", "-", "Mar", "lastMon", ["0", "0", "0"], "60", "S"],
        ["1999", "2006", "-", "Apr", "1", ["0", "0", "0"], "60", "S"],
        ["2006", "only", "-", "Sep", "22", ["0", "0", "0"], "0", "-"],
        ["2007", "only", "-", "Mar", "lastFri", ["0", "0", "0"], "60", "S"],
        ["2007", "only", "-", "Nov", "Fri>=1", ["0", "0", "0"], "0", "-"],
        ["2008", "only", "-", "Apr", "Fri>=1", ["0", "0", "0"], "60", "S"],
        ["2008", "only", "-", "Nov", "1", ["0", "0", "0"], "0", "-"],
        ["2009", "only", "-", "Mar", "lastFri", ["0", "0", "0"], "60", "S"],
        ["2010", "2011", "-", "Apr", "Fri>=1", ["0", "0", "0"], "60", "S"],
        ["2012", "max", "-", "Mar", "lastFri", ["0", "0", "0"], "60", "S"],
        ["2009", "max", "-", "Oct", "lastFri", ["0", "0", "0"], "0", "-"]
    ],
    "Aus": [
        ["1917", "only", "-", "Jan", "1", ["0", "1", "0"], "60", "D"],
        ["1917", "only", "-", "Mar", "25", ["2", "0", "0"], "0", "S"],
        ["1942", "only", "-", "Jan", "1", ["2", "0", "0"], "60", "D"],
        ["1942", "only", "-", "Mar", "29", ["2", "0", "0"], "0", "S"],
        ["1942", "only", "-", "Sep", "27", ["2", "0", "0"], "60", "D"],
        ["1943", "1944", "-", "Mar", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1943", "only", "-", "Oct", "3", ["2", "0", "0"], "60", "D"]
    ],
    "AW": [
        ["1974", "only", "-", "Oct", "lastSun", ["2", "0", "0", "s"], "60", "D"],
        ["1975", "only", "-", "Mar", "Sun>=1", ["2", "0", "0", "s"], "0", "S"],
        ["1983", "only", "-", "Oct", "lastSun", ["2", "0", "0", "s"], "60", "D"],
        ["1984", "only", "-", "Mar", "Sun>=1", ["2", "0", "0", "s"], "0", "S"],
        ["1991", "only", "-", "Nov", "17", ["2", "0", "0", "s"], "60", "D"],
        ["1992", "only", "-", "Mar", "Sun>=1", ["2", "0", "0", "s"], "0", "S"],
        ["2006", "only", "-", "Dec", "3", ["2", "0", "0", "s"], "60", "D"],
        ["2007", "2009", "-", "Mar", "lastSun", ["2", "0", "0", "s"], "0", "S"],
        ["2007", "2008", "-", "Oct", "lastSun", ["2", "0", "0", "s"], "60", "D"]
    ],
    "AQ": [
        ["1971", "only", "-", "Oct", "lastSun", ["2", "0", "0", "s"], "60", "D"],
        ["1972", "only", "-", "Feb", "lastSun", ["2", "0", "0", "s"], "0", "S"],
        ["1989", "1991", "-", "Oct", "lastSun", ["2", "0", "0", "s"], "60", "D"],
        ["1990", "1992", "-", "Mar", "Sun>=1", ["2", "0", "0", "s"], "0", "S"]
    ],
    "Holiday": [
        ["1992", "1993", "-", "Oct", "lastSun", ["2", "0", "0", "s"], "60", "D"],
        ["1993", "1994", "-", "Mar", "Sun>=1", ["2", "0", "0", "s"], "0", "S"]
    ],
    "AS": [
        ["1971", "1985", "-", "Oct", "lastSun", ["2", "0", "0", "s"], "60", "D"],
        ["1986", "only", "-", "Oct", "19", ["2", "0", "0", "s"], "60", "D"],
        ["1987", "2007", "-", "Oct", "lastSun", ["2", "0", "0", "s"], "60", "D"],
        ["1972", "only", "-", "Feb", "27", ["2", "0", "0", "s"], "0", "S"],
        ["1973", "1985", "-", "Mar", "Sun>=1", ["2", "0", "0", "s"], "0", "S"],
        ["1986", "1990", "-", "Mar", "Sun>=15", ["2", "0", "0", "s"], "0", "S"],
        ["1991", "only", "-", "Mar", "3", ["2", "0", "0", "s"], "0", "S"],
        ["1992", "only", "-", "Mar", "22", ["2", "0", "0", "s"], "0", "S"],
        ["1993", "only", "-", "Mar", "7", ["2", "0", "0", "s"], "0", "S"],
        ["1994", "only", "-", "Mar", "20", ["2", "0", "0", "s"], "0", "S"],
        ["1995", "2005", "-", "Mar", "lastSun", ["2", "0", "0", "s"], "0", "S"],
        ["2006", "only", "-", "Apr", "2", ["2", "0", "0", "s"], "0", "S"],
        ["2007", "only", "-", "Mar", "lastSun", ["2", "0", "0", "s"], "0", "S"],
        ["2008", "max", "-", "Apr", "Sun>=1", ["2", "0", "0", "s"], "0", "S"],
        ["2008", "max", "-", "Oct", "Sun>=1", ["2", "0", "0", "s"], "60", "D"]
    ],
    "AT": [
        ["1967", "only", "-", "Oct", "Sun>=1", ["2", "0", "0", "s"], "60", "D"],
        ["1968", "only", "-", "Mar", "lastSun", ["2", "0", "0", "s"], "0", "S"],
        ["1968", "1985", "-", "Oct", "lastSun", ["2", "0", "0", "s"], "60", "D"],
        ["1969", "1971", "-", "Mar", "Sun>=8", ["2", "0", "0", "s"], "0", "S"],
        ["1972", "only", "-", "Feb", "lastSun", ["2", "0", "0", "s"], "0", "S"],
        ["1973", "1981", "-", "Mar", "Sun>=1", ["2", "0", "0", "s"], "0", "S"],
        ["1982", "1983", "-", "Mar", "lastSun", ["2", "0", "0", "s"], "0", "S"],
        ["1984", "1986", "-", "Mar", "Sun>=1", ["2", "0", "0", "s"], "0", "S"],
        ["1986", "only", "-", "Oct", "Sun>=15", ["2", "0", "0", "s"], "60", "D"],
        ["1987", "1990", "-", "Mar", "Sun>=15", ["2", "0", "0", "s"], "0", "S"],
        ["1987", "only", "-", "Oct", "Sun>=22", ["2", "0", "0", "s"], "60", "D"],
        ["1988", "1990", "-", "Oct", "lastSun", ["2", "0", "0", "s"], "60", "D"],
        ["1991", "1999", "-", "Oct", "Sun>=1", ["2", "0", "0", "s"], "60", "D"],
        ["1991", "2005", "-", "Mar", "lastSun", ["2", "0", "0", "s"], "0", "S"],
        ["2000", "only", "-", "Aug", "lastSun", ["2", "0", "0", "s"], "60", "D"],
        ["2001", "max", "-", "Oct", "Sun>=1", ["2", "0", "0", "s"], "60", "D"],
        ["2006", "only", "-", "Apr", "Sun>=1", ["2", "0", "0", "s"], "0", "S"],
        ["2007", "only", "-", "Mar", "lastSun", ["2", "0", "0", "s"], "0", "S"],
        ["2008", "max", "-", "Apr", "Sun>=1", ["2", "0", "0", "s"], "0", "S"]
    ],
    "AV": [
        ["1971", "1985", "-", "Oct", "lastSun", ["2", "0", "0", "s"], "60", "D"],
        ["1972", "only", "-", "Feb", "lastSun", ["2", "0", "0", "s"], "0", "S"],
        ["1973", "1985", "-", "Mar", "Sun>=1", ["2", "0", "0", "s"], "0", "S"],
        ["1986", "1990", "-", "Mar", "Sun>=15", ["2", "0", "0", "s"], "0", "S"],
        ["1986", "1987", "-", "Oct", "Sun>=15", ["2", "0", "0", "s"], "60", "D"],
        ["1988", "1999", "-", "Oct", "lastSun", ["2", "0", "0", "s"], "60", "D"],
        ["1991", "1994", "-", "Mar", "Sun>=1", ["2", "0", "0", "s"], "0", "S"],
        ["1995", "2005", "-", "Mar", "lastSun", ["2", "0", "0", "s"], "0", "S"],
        ["2000", "only", "-", "Aug", "lastSun", ["2", "0", "0", "s"], "60", "D"],
        ["2001", "2007", "-", "Oct", "lastSun", ["2", "0", "0", "s"], "60", "D"],
        ["2006", "only", "-", "Apr", "Sun>=1", ["2", "0", "0", "s"], "0", "S"],
        ["2007", "only", "-", "Mar", "lastSun", ["2", "0", "0", "s"], "0", "S"],
        ["2008", "max", "-", "Apr", "Sun>=1", ["2", "0", "0", "s"], "0", "S"],
        ["2008", "max", "-", "Oct", "Sun>=1", ["2", "0", "0", "s"], "60", "D"]
    ],
    "AN": [
        ["1971", "1985", "-", "Oct", "lastSun", ["2", "0", "0", "s"], "60", "D"],
        ["1972", "only", "-", "Feb", "27", ["2", "0", "0", "s"], "0", "S"],
        ["1973", "1981", "-", "Mar", "Sun>=1", ["2", "0", "0", "s"], "0", "S"],
        ["1982", "only", "-", "Apr", "Sun>=1", ["2", "0", "0", "s"], "0", "S"],
        ["1983", "1985", "-", "Mar", "Sun>=1", ["2", "0", "0", "s"], "0", "S"],
        ["1986", "1989", "-", "Mar", "Sun>=15", ["2", "0", "0", "s"], "0", "S"],
        ["1986", "only", "-", "Oct", "19", ["2", "0", "0", "s"], "60", "D"],
        ["1987", "1999", "-", "Oct", "lastSun", ["2", "0", "0", "s"], "60", "D"],
        ["1990", "1995", "-", "Mar", "Sun>=1", ["2", "0", "0", "s"], "0", "S"],
        ["1996", "2005", "-", "Mar", "lastSun", ["2", "0", "0", "s"], "0", "S"],
        ["2000", "only", "-", "Aug", "lastSun", ["2", "0", "0", "s"], "60", "D"],
        ["2001", "2007", "-", "Oct", "lastSun", ["2", "0", "0", "s"], "60", "D"],
        ["2006", "only", "-", "Apr", "Sun>=1", ["2", "0", "0", "s"], "0", "S"],
        ["2007", "only", "-", "Mar", "lastSun", ["2", "0", "0", "s"], "0", "S"],
        ["2008", "max", "-", "Apr", "Sun>=1", ["2", "0", "0", "s"], "0", "S"],
        ["2008", "max", "-", "Oct", "Sun>=1", ["2", "0", "0", "s"], "60", "D"]
    ],
    "LH": [
        ["1981", "1984", "-", "Oct", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1982", "1985", "-", "Mar", "Sun>=1", ["2", "0", "0"], "0", "S"],
        ["1985", "only", "-", "Oct", "lastSun", ["2", "0", "0"], "30", "D"],
        ["1986", "1989", "-", "Mar", "Sun>=15", ["2", "0", "0"], "0", "S"],
        ["1986", "only", "-", "Oct", "19", ["2", "0", "0"], "30", "D"],
        ["1987", "1999", "-", "Oct", "lastSun", ["2", "0", "0"], "30", "D"],
        ["1990", "1995", "-", "Mar", "Sun>=1", ["2", "0", "0"], "0", "S"],
        ["1996", "2005", "-", "Mar", "lastSun", ["2", "0", "0"], "0", "S"],
        ["2000", "only", "-", "Aug", "lastSun", ["2", "0", "0"], "30", "D"],
        ["2001", "2007", "-", "Oct", "lastSun", ["2", "0", "0"], "30", "D"],
        ["2006", "only", "-", "Apr", "Sun>=1", ["2", "0", "0"], "0", "S"],
        ["2007", "only", "-", "Mar", "lastSun", ["2", "0", "0"], "0", "S"],
        ["2008", "max", "-", "Apr", "Sun>=1", ["2", "0", "0"], "0", "S"],
        ["2008", "max", "-", "Oct", "Sun>=1", ["2", "0", "0"], "30", "D"]
    ],
    "Fiji": [
        ["1998", "1999", "-", "Nov", "Sun>=1", ["2", "0", "0"], "60", "S"],
        ["1999", "2000", "-", "Feb", "lastSun", ["3", "0", "0"], "0", "-"],
        ["2009", "only", "-", "Nov", "29", ["2", "0", "0"], "60", "S"],
        ["2010", "only", "-", "Mar", "lastSun", ["3", "0", "0"], "0", "-"],
        ["2010", "max", "-", "Oct", "Sun>=21", ["2", "0", "0"], "60", "S"],
        ["2011", "only", "-", "Mar", "Sun>=1", ["3", "0", "0"], "0", "-"],
        ["2012", "2013", "-", "Jan", "Sun>=18", ["3", "0", "0"], "0", "-"],
        ["2014", "max", "-", "Jan", "Sun>=18", ["2", "0", "0"], "0", "-"]
    ],
    "NC": [
        ["1977", "1978", "-", "Dec", "Sun>=1", ["0", "0", "0"], "60", "S"],
        ["1978", "1979", "-", "Feb", "27", ["0", "0", "0"], "0", "-"],
        ["1996", "only", "-", "Dec", "1", ["2", "0", "0", "s"], "60", "S"],
        ["1997", "only", "-", "Mar", "2", ["2", "0", "0", "s"], "0", "-"]
    ],
    "NZ": [
        ["1927", "only", "-", "Nov", "6", ["2", "0", "0"], "60", "S"],
        ["1928", "only", "-", "Mar", "4", ["2", "0", "0"], "0", "M"],
        ["1928", "1933", "-", "Oct", "Sun>=8", ["2", "0", "0"], "30", "S"],
        ["1929", "1933", "-", "Mar", "Sun>=15", ["2", "0", "0"], "0", "M"],
        ["1934", "1940", "-", "Apr", "lastSun", ["2", "0", "0"], "0", "M"],
        ["1934", "1940", "-", "Sep", "lastSun", ["2", "0", "0"], "30", "S"],
        ["1946", "only", "-", "Jan", "1", ["0", "0", "0"], "0", "S"],
        ["1974", "only", "-", "Nov", "Sun>=1", ["2", "0", "0", "s"], "60", "D"],
        ["1975", "only", "-", "Feb", "lastSun", ["2", "0", "0", "s"], "0", "S"],
        ["1975", "1988", "-", "Oct", "lastSun", ["2", "0", "0", "s"], "60", "D"],
        ["1976", "1989", "-", "Mar", "Sun>=1", ["2", "0", "0", "s"], "0", "S"],
        ["1989", "only", "-", "Oct", "Sun>=8", ["2", "0", "0", "s"], "60", "D"],
        ["1990", "2006", "-", "Oct", "Sun>=1", ["2", "0", "0", "s"], "60", "D"],
        ["1990", "2007", "-", "Mar", "Sun>=15", ["2", "0", "0", "s"], "0", "S"],
        ["2007", "max", "-", "Sep", "lastSun", ["2", "0", "0", "s"], "60", "D"],
        ["2008", "max", "-", "Apr", "Sun>=1", ["2", "0", "0", "s"], "0", "S"]
    ],
    "Chatham": [
        ["1974", "only", "-", "Nov", "Sun>=1", ["2", "45", "0", "s"], "60", "D"],
        ["1975", "only", "-", "Feb", "lastSun", ["2", "45", "0", "s"], "0", "S"],
        ["1975", "1988", "-", "Oct", "lastSun", ["2", "45", "0", "s"], "60", "D"],
        ["1976", "1989", "-", "Mar", "Sun>=1", ["2", "45", "0", "s"], "0", "S"],
        ["1989", "only", "-", "Oct", "Sun>=8", ["2", "45", "0", "s"], "60", "D"],
        ["1990", "2006", "-", "Oct", "Sun>=1", ["2", "45", "0", "s"], "60", "D"],
        ["1990", "2007", "-", "Mar", "Sun>=15", ["2", "45", "0", "s"], "0", "S"],
        ["2007", "max", "-", "Sep", "lastSun", ["2", "45", "0", "s"], "60", "D"],
        ["2008", "max", "-", "Apr", "Sun>=1", ["2", "45", "0", "s"], "0", "S"]
    ],
    "Cook": [
        ["1978", "only", "-", "Nov", "12", ["0", "0", "0"], "30", "HS"],
        ["1979", "1991", "-", "Mar", "Sun>=1", ["0", "0", "0"], "0", "-"],
        ["1979", "1990", "-", "Oct", "lastSun", ["0", "0", "0"], "30", "HS"]
    ],
    "WS": [
        ["2010", "only", "-", "Sep", "lastSun", ["0", "0", "0"], "60", "D"],
        ["2011", "only", "-", "Apr", "Sat>=1", ["4", "0", "0"], "0", "S"],
        ["2011", "only", "-", "Sep", "lastSat", ["3", "0", "0"], "60", "D"],
        ["2012", "max", "-", "Apr", "Sun>=1", ["4", "0", "0"], "0", "S"],
        ["2012", "max", "-", "Sep", "lastSun", ["3", "0", "0"], "60", "D"]
    ],
    "Tonga": [
        ["1999", "only", "-", "Oct", "7", ["2", "0", "0", "s"], "60", "S"],
        ["2000", "only", "-", "Mar", "19", ["2", "0", "0", "s"], "0", "-"],
        ["2000", "2001", "-", "Nov", "Sun>=1", ["2", "0", "0"], "60", "S"],
        ["2001", "2002", "-", "Jan", "lastSun", ["2", "0", "0"], "0", "-"]
    ],
    "Vanuatu": [
        ["1983", "only", "-", "Sep", "25", ["0", "0", "0"], "60", "S"],
        ["1984", "1991", "-", "Mar", "Sun>=23", ["0", "0", "0"], "0", "-"],
        ["1984", "only", "-", "Oct", "23", ["0", "0", "0"], "60", "S"],
        ["1985", "1991", "-", "Sep", "Sun>=23", ["0", "0", "0"], "60", "S"],
        ["1992", "1993", "-", "Jan", "Sun>=23", ["0", "0", "0"], "0", "-"],
        ["1992", "only", "-", "Oct", "Sun>=23", ["0", "0", "0"], "60", "S"]
    ],
    "GB-Eire": [
        ["1916", "only", "-", "May", "21", ["2", "0", "0", "s"], "60", "BST"],
        ["1916", "only", "-", "Oct", "1", ["2", "0", "0", "s"], "0", "GMT"],
        ["1917", "only", "-", "Apr", "8", ["2", "0", "0", "s"], "60", "BST"],
        ["1917", "only", "-", "Sep", "17", ["2", "0", "0", "s"], "0", "GMT"],
        ["1918", "only", "-", "Mar", "24", ["2", "0", "0", "s"], "60", "BST"],
        ["1918", "only", "-", "Sep", "30", ["2", "0", "0", "s"], "0", "GMT"],
        ["1919", "only", "-", "Mar", "30", ["2", "0", "0", "s"], "60", "BST"],
        ["1919", "only", "-", "Sep", "29", ["2", "0", "0", "s"], "0", "GMT"],
        ["1920", "only", "-", "Mar", "28", ["2", "0", "0", "s"], "60", "BST"],
        ["1920", "only", "-", "Oct", "25", ["2", "0", "0", "s"], "0", "GMT"],
        ["1921", "only", "-", "Apr", "3", ["2", "0", "0", "s"], "60", "BST"],
        ["1921", "only", "-", "Oct", "3", ["2", "0", "0", "s"], "0", "GMT"],
        ["1922", "only", "-", "Mar", "26", ["2", "0", "0", "s"], "60", "BST"],
        ["1922", "only", "-", "Oct", "8", ["2", "0", "0", "s"], "0", "GMT"],
        ["1923", "only", "-", "Apr", "Sun>=16", ["2", "0", "0", "s"], "60", "BST"],
        ["1923", "1924", "-", "Sep", "Sun>=16", ["2", "0", "0", "s"], "0", "GMT"],
        ["1924", "only", "-", "Apr", "Sun>=9", ["2", "0", "0", "s"], "60", "BST"],
        ["1925", "1926", "-", "Apr", "Sun>=16", ["2", "0", "0", "s"], "60", "BST"],
        ["1925", "1938", "-", "Oct", "Sun>=2", ["2", "0", "0", "s"], "0", "GMT"],
        ["1927", "only", "-", "Apr", "Sun>=9", ["2", "0", "0", "s"], "60", "BST"],
        ["1928", "1929", "-", "Apr", "Sun>=16", ["2", "0", "0", "s"], "60", "BST"],
        ["1930", "only", "-", "Apr", "Sun>=9", ["2", "0", "0", "s"], "60", "BST"],
        ["1931", "1932", "-", "Apr", "Sun>=16", ["2", "0", "0", "s"], "60", "BST"],
        ["1933", "only", "-", "Apr", "Sun>=9", ["2", "0", "0", "s"], "60", "BST"],
        ["1934", "only", "-", "Apr", "Sun>=16", ["2", "0", "0", "s"], "60", "BST"],
        ["1935", "only", "-", "Apr", "Sun>=9", ["2", "0", "0", "s"], "60", "BST"],
        ["1936", "1937", "-", "Apr", "Sun>=16", ["2", "0", "0", "s"], "60", "BST"],
        ["1938", "only", "-", "Apr", "Sun>=9", ["2", "0", "0", "s"], "60", "BST"],
        ["1939", "only", "-", "Apr", "Sun>=16", ["2", "0", "0", "s"], "60", "BST"],
        ["1939", "only", "-", "Nov", "Sun>=16", ["2", "0", "0", "s"], "0", "GMT"],
        ["1940", "only", "-", "Feb", "Sun>=23", ["2", "0", "0", "s"], "60", "BST"],
        ["1941", "only", "-", "May", "Sun>=2", ["1", "0", "0", "s"], "120", "BDST"],
        ["1941", "1943", "-", "Aug", "Sun>=9", ["1", "0", "0", "s"], "60", "BST"],
        ["1942", "1944", "-", "Apr", "Sun>=2", ["1", "0", "0", "s"], "120", "BDST"],
        ["1944", "only", "-", "Sep", "Sun>=16", ["1", "0", "0", "s"], "60", "BST"],
        ["1945", "only", "-", "Apr", "Mon>=2", ["1", "0", "0", "s"], "120", "BDST"],
        ["1945", "only", "-", "Jul", "Sun>=9", ["1", "0", "0", "s"], "60", "BST"],
        ["1945", "1946", "-", "Oct", "Sun>=2", ["2", "0", "0", "s"], "0", "GMT"],
        ["1946", "only", "-", "Apr", "Sun>=9", ["2", "0", "0", "s"], "60", "BST"],
        ["1947", "only", "-", "Mar", "16", ["2", "0", "0", "s"], "60", "BST"],
        ["1947", "only", "-", "Apr", "13", ["1", "0", "0", "s"], "120", "BDST"],
        ["1947", "only", "-", "Aug", "10", ["1", "0", "0", "s"], "60", "BST"],
        ["1947", "only", "-", "Nov", "2", ["2", "0", "0", "s"], "0", "GMT"],
        ["1948", "only", "-", "Mar", "14", ["2", "0", "0", "s"], "60", "BST"],
        ["1948", "only", "-", "Oct", "31", ["2", "0", "0", "s"], "0", "GMT"],
        ["1949", "only", "-", "Apr", "3", ["2", "0", "0", "s"], "60", "BST"],
        ["1949", "only", "-", "Oct", "30", ["2", "0", "0", "s"], "0", "GMT"],
        ["1950", "1952", "-", "Apr", "Sun>=14", ["2", "0", "0", "s"], "60", "BST"],
        ["1950", "1952", "-", "Oct", "Sun>=21", ["2", "0", "0", "s"], "0", "GMT"],
        ["1953", "only", "-", "Apr", "Sun>=16", ["2", "0", "0", "s"], "60", "BST"],
        ["1953", "1960", "-", "Oct", "Sun>=2", ["2", "0", "0", "s"], "0", "GMT"],
        ["1954", "only", "-", "Apr", "Sun>=9", ["2", "0", "0", "s"], "60", "BST"],
        ["1955", "1956", "-", "Apr", "Sun>=16", ["2", "0", "0", "s"], "60", "BST"],
        ["1957", "only", "-", "Apr", "Sun>=9", ["2", "0", "0", "s"], "60", "BST"],
        ["1958", "1959", "-", "Apr", "Sun>=16", ["2", "0", "0", "s"], "60", "BST"],
        ["1960", "only", "-", "Apr", "Sun>=9", ["2", "0", "0", "s"], "60", "BST"],
        ["1961", "1963", "-", "Mar", "lastSun", ["2", "0", "0", "s"], "60", "BST"],
        ["1961", "1968", "-", "Oct", "Sun>=23", ["2", "0", "0", "s"], "0", "GMT"],
        ["1964", "1967", "-", "Mar", "Sun>=19", ["2", "0", "0", "s"], "60", "BST"],
        ["1968", "only", "-", "Feb", "18", ["2", "0", "0", "s"], "60", "BST"],
        ["1972", "1980", "-", "Mar", "Sun>=16", ["2", "0", "0", "s"], "60", "BST"],
        ["1972", "1980", "-", "Oct", "Sun>=23", ["2", "0", "0", "s"], "0", "GMT"],
        ["1981", "1995", "-", "Mar", "lastSun", ["1", "0", "0", "u"], "60", "BST"],
        ["1981", "1989", "-", "Oct", "Sun>=23", ["1", "0", "0", "u"], "0", "GMT"],
        ["1990", "1995", "-", "Oct", "Sun>=22", ["1", "0", "0", "u"], "0", "GMT"]
    ],
    "EU": [
        ["1977", "1980", "-", "Apr", "Sun>=1", ["1", "0", "0", "u"], "60", "S"],
        ["1977", "only", "-", "Sep", "lastSun", ["1", "0", "0", "u"], "0", "-"],
        ["1978", "only", "-", "Oct", "1", ["1", "0", "0", "u"], "0", "-"],
        ["1979", "1995", "-", "Sep", "lastSun", ["1", "0", "0", "u"], "0", "-"],
        ["1981", "max", "-", "Mar", "lastSun", ["1", "0", "0", "u"], "60", "S"],
        ["1996", "max", "-", "Oct", "lastSun", ["1", "0", "0", "u"], "0", "-"]
    ],
    "W-Eur": [
        ["1977", "1980", "-", "Apr", "Sun>=1", ["1", "0", "0", "s"], "60", "S"],
        ["1977", "only", "-", "Sep", "lastSun", ["1", "0", "0", "s"], "0", "-"],
        ["1978", "only", "-", "Oct", "1", ["1", "0", "0", "s"], "0", "-"],
        ["1979", "1995", "-", "Sep", "lastSun", ["1", "0", "0", "s"], "0", "-"],
        ["1981", "max", "-", "Mar", "lastSun", ["1", "0", "0", "s"], "60", "S"],
        ["1996", "max", "-", "Oct", "lastSun", ["1", "0", "0", "s"], "0", "-"]
    ],
    "C-Eur": [
        ["1916", "only", "-", "Apr", "30", ["23", "0", "0"], "60", "S"],
        ["1916", "only", "-", "Oct", "1", ["1", "0", "0"], "0", "-"],
        ["1917", "1918", "-", "Apr", "Mon>=15", ["2", "0", "0", "s"], "60", "S"],
        ["1917", "1918", "-", "Sep", "Mon>=15", ["2", "0", "0", "s"], "0", "-"],
        ["1940", "only", "-", "Apr", "1", ["2", "0", "0", "s"], "60", "S"],
        ["1942", "only", "-", "Nov", "2", ["2", "0", "0", "s"], "0", "-"],
        ["1943", "only", "-", "Mar", "29", ["2", "0", "0", "s"], "60", "S"],
        ["1943", "only", "-", "Oct", "4", ["2", "0", "0", "s"], "0", "-"],
        ["1944", "1945", "-", "Apr", "Mon>=1", ["2", "0", "0", "s"], "60", "S"],
        ["1944", "only", "-", "Oct", "2", ["2", "0", "0", "s"], "0", "-"],
        ["1945", "only", "-", "Sep", "16", ["2", "0", "0", "s"], "0", "-"],
        ["1977", "1980", "-", "Apr", "Sun>=1", ["2", "0", "0", "s"], "60", "S"],
        ["1977", "only", "-", "Sep", "lastSun", ["2", "0", "0", "s"], "0", "-"],
        ["1978", "only", "-", "Oct", "1", ["2", "0", "0", "s"], "0", "-"],
        ["1979", "1995", "-", "Sep", "lastSun", ["2", "0", "0", "s"], "0", "-"],
        ["1981", "max", "-", "Mar", "lastSun", ["2", "0", "0", "s"], "60", "S"],
        ["1996", "max", "-", "Oct", "lastSun", ["2", "0", "0", "s"], "0", "-"]
    ],
    "E-Eur": [
        ["1977", "1980", "-", "Apr", "Sun>=1", ["0", "0", "0"], "60", "S"],
        ["1977", "only", "-", "Sep", "lastSun", ["0", "0", "0"], "0", "-"],
        ["1978", "only", "-", "Oct", "1", ["0", "0", "0"], "0", "-"],
        ["1979", "1995", "-", "Sep", "lastSun", ["0", "0", "0"], "0", "-"],
        ["1981", "max", "-", "Mar", "lastSun", ["0", "0", "0"], "60", "S"],
        ["1996", "max", "-", "Oct", "lastSun", ["0", "0", "0"], "0", "-"]
    ],
    "Russia": [
        ["1917", "only", "-", "Jul", "1", ["23", "0", "0"], "60", "MST", ""],
        ["1917", "only", "-", "Dec", "28", ["0", "0", "0"], "0", "MMT", ""],
        ["1918", "only", "-", "May", "31", ["22", "0", "0"], "120", "MDST", ""],
        ["1918", "only", "-", "Sep", "16", ["1", "0", "0"], "60", "MST"],
        ["1919", "only", "-", "May", "31", ["23", "0", "0"], "120", "MDST"],
        ["1919", "only", "-", "Jul", "1", ["2", "0", "0"], "60", "MSD"],
        ["1919", "only", "-", "Aug", "16", ["0", "0", "0"], "0", "MSK"],
        ["1921", "only", "-", "Feb", "14", ["23", "0", "0"], "60", "MSD"],
        ["1921", "only", "-", "Mar", "20", ["23", "0", "0"], "120", "MSM", ""],
        ["1921", "only", "-", "Sep", "1", ["0", "0", "0"], "60", "MSD"],
        ["1921", "only", "-", "Oct", "1", ["0", "0", "0"], "0", "-"],
        ["1981", "1984", "-", "Apr", "1", ["0", "0", "0"], "60", "S"],
        ["1981", "1983", "-", "Oct", "1", ["0", "0", "0"], "0", "-"],
        ["1984", "1991", "-", "Sep", "lastSun", ["2", "0", "0", "s"], "0", "-"],
        ["1985", "1991", "-", "Mar", "lastSun", ["2", "0", "0", "s"], "60", "S"],
        ["1992", "only", "-", "Mar", "lastSat", ["23", "0", "0"], "60", "S"],
        ["1992", "only", "-", "Sep", "lastSat", ["23", "0", "0"], "0", "-"],
        ["1993", "2010", "-", "Mar", "lastSun", ["2", "0", "0", "s"], "60", "S"],
        ["1993", "1995", "-", "Sep", "lastSun", ["2", "0", "0", "s"], "0", "-"],
        ["1996", "2010", "-", "Oct", "lastSun", ["2", "0", "0", "s"], "0", "-"]
    ],
    "Albania": [
        ["1940", "only", "-", "Jun", "16", ["0", "0", "0"], "60", "S"],
        ["1942", "only", "-", "Nov", "2", ["3", "0", "0"], "0", "-"],
        ["1943", "only", "-", "Mar", "29", ["2", "0", "0"], "60", "S"],
        ["1943", "only", "-", "Apr", "10", ["3", "0", "0"], "0", "-"],
        ["1974", "only", "-", "May", "4", ["0", "0", "0"], "60", "S"],
        ["1974", "only", "-", "Oct", "2", ["0", "0", "0"], "0", "-"],
        ["1975", "only", "-", "May", "1", ["0", "0", "0"], "60", "S"],
        ["1975", "only", "-", "Oct", "2", ["0", "0", "0"], "0", "-"],
        ["1976", "only", "-", "May", "2", ["0", "0", "0"], "60", "S"],
        ["1976", "only", "-", "Oct", "3", ["0", "0", "0"], "0", "-"],
        ["1977", "only", "-", "May", "8", ["0", "0", "0"], "60", "S"],
        ["1977", "only", "-", "Oct", "2", ["0", "0", "0"], "0", "-"],
        ["1978", "only", "-", "May", "6", ["0", "0", "0"], "60", "S"],
        ["1978", "only", "-", "Oct", "1", ["0", "0", "0"], "0", "-"],
        ["1979", "only", "-", "May", "5", ["0", "0", "0"], "60", "S"],
        ["1979", "only", "-", "Sep", "30", ["0", "0", "0"], "0", "-"],
        ["1980", "only", "-", "May", "3", ["0", "0", "0"], "60", "S"],
        ["1980", "only", "-", "Oct", "4", ["0", "0", "0"], "0", "-"],
        ["1981", "only", "-", "Apr", "26", ["0", "0", "0"], "60", "S"],
        ["1981", "only", "-", "Sep", "27", ["0", "0", "0"], "0", "-"],
        ["1982", "only", "-", "May", "2", ["0", "0", "0"], "60", "S"],
        ["1982", "only", "-", "Oct", "3", ["0", "0", "0"], "0", "-"],
        ["1983", "only", "-", "Apr", "18", ["0", "0", "0"], "60", "S"],
        ["1983", "only", "-", "Oct", "1", ["0", "0", "0"], "0", "-"],
        ["1984", "only", "-", "Apr", "1", ["0", "0", "0"], "60", "S"]
    ],
    "Austria": [
        ["1920", "only", "-", "Apr", "5", ["2", "0", "0", "s"], "60", "S"],
        ["1920", "only", "-", "Sep", "13", ["2", "0", "0", "s"], "0", "-"],
        ["1946", "only", "-", "Apr", "14", ["2", "0", "0", "s"], "60", "S"],
        ["1946", "1948", "-", "Oct", "Sun>=1", ["2", "0", "0", "s"], "0", "-"],
        ["1947", "only", "-", "Apr", "6", ["2", "0", "0", "s"], "60", "S"],
        ["1948", "only", "-", "Apr", "18", ["2", "0", "0", "s"], "60", "S"],
        ["1980", "only", "-", "Apr", "6", ["0", "0", "0"], "60", "S"],
        ["1980", "only", "-", "Sep", "28", ["0", "0", "0"], "0", "-"]
    ],
    "Belgium": [
        ["1918", "only", "-", "Mar", "9", ["0", "0", "0", "s"], "60", "S"],
        ["1918", "1919", "-", "Oct", "Sat>=1", ["23", "0", "0", "s"], "0", "-"],
        ["1919", "only", "-", "Mar", "1", ["23", "0", "0", "s"], "60", "S"],
        ["1920", "only", "-", "Feb", "14", ["23", "0", "0", "s"], "60", "S"],
        ["1920", "only", "-", "Oct", "23", ["23", "0", "0", "s"], "0", "-"],
        ["1921", "only", "-", "Mar", "14", ["23", "0", "0", "s"], "60", "S"],
        ["1921", "only", "-", "Oct", "25", ["23", "0", "0", "s"], "0", "-"],
        ["1922", "only", "-", "Mar", "25", ["23", "0", "0", "s"], "60", "S"],
        ["1922", "1927", "-", "Oct", "Sat>=1", ["23", "0", "0", "s"], "0", "-"],
        ["1923", "only", "-", "Apr", "21", ["23", "0", "0", "s"], "60", "S"],
        ["1924", "only", "-", "Mar", "29", ["23", "0", "0", "s"], "60", "S"],
        ["1925", "only", "-", "Apr", "4", ["23", "0", "0", "s"], "60", "S"],
        ["1926", "only", "-", "Apr", "17", ["23", "0", "0", "s"], "60", "S"],
        ["1927", "only", "-", "Apr", "9", ["23", "0", "0", "s"], "60", "S"],
        ["1928", "only", "-", "Apr", "14", ["23", "0", "0", "s"], "60", "S"],
        ["1928", "1938", "-", "Oct", "Sun>=2", ["2", "0", "0", "s"], "0", "-"],
        ["1929", "only", "-", "Apr", "21", ["2", "0", "0", "s"], "60", "S"],
        ["1930", "only", "-", "Apr", "13", ["2", "0", "0", "s"], "60", "S"],
        ["1931", "only", "-", "Apr", "19", ["2", "0", "0", "s"], "60", "S"],
        ["1932", "only", "-", "Apr", "3", ["2", "0", "0", "s"], "60", "S"],
        ["1933", "only", "-", "Mar", "26", ["2", "0", "0", "s"], "60", "S"],
        ["1934", "only", "-", "Apr", "8", ["2", "0", "0", "s"], "60", "S"],
        ["1935", "only", "-", "Mar", "31", ["2", "0", "0", "s"], "60", "S"],
        ["1936", "only", "-", "Apr", "19", ["2", "0", "0", "s"], "60", "S"],
        ["1937", "only", "-", "Apr", "4", ["2", "0", "0", "s"], "60", "S"],
        ["1938", "only", "-", "Mar", "27", ["2", "0", "0", "s"], "60", "S"],
        ["1939", "only", "-", "Apr", "16", ["2", "0", "0", "s"], "60", "S"],
        ["1939", "only", "-", "Nov", "19", ["2", "0", "0", "s"], "0", "-"],
        ["1940", "only", "-", "Feb", "25", ["2", "0", "0", "s"], "60", "S"],
        ["1944", "only", "-", "Sep", "17", ["2", "0", "0", "s"], "0", "-"],
        ["1945", "only", "-", "Apr", "2", ["2", "0", "0", "s"], "60", "S"],
        ["1945", "only", "-", "Sep", "16", ["2", "0", "0", "s"], "0", "-"],
        ["1946", "only", "-", "May", "19", ["2", "0", "0", "s"], "60", "S"],
        ["1946", "only", "-", "Oct", "7", ["2", "0", "0", "s"], "0", "-"]
    ],
    "Bulg": [
        ["1979", "only", "-", "Mar", "31", ["23", "0", "0"], "60", "S"],
        ["1979", "only", "-", "Oct", "1", ["1", "0", "0"], "0", "-"],
        ["1980", "1982", "-", "Apr", "Sat>=1", ["23", "0", "0"], "60", "S"],
        ["1980", "only", "-", "Sep", "29", ["1", "0", "0"], "0", "-"],
        ["1981", "only", "-", "Sep", "27", ["2", "0", "0"], "0", "-"]
    ],
    "Czech": [
        ["1945", "only", "-", "Apr", "8", ["2", "0", "0", "s"], "60", "S"],
        ["1945", "only", "-", "Nov", "18", ["2", "0", "0", "s"], "0", "-"],
        ["1946", "only", "-", "May", "6", ["2", "0", "0", "s"], "60", "S"],
        ["1946", "1949", "-", "Oct", "Sun>=1", ["2", "0", "0", "s"], "0", "-"],
        ["1947", "only", "-", "Apr", "20", ["2", "0", "0", "s"], "60", "S"],
        ["1948", "only", "-", "Apr", "18", ["2", "0", "0", "s"], "60", "S"],
        ["1949", "only", "-", "Apr", "9", ["2", "0", "0", "s"], "60", "S"]
    ],
    "Denmark": [
        ["1916", "only", "-", "May", "14", ["23", "0", "0"], "60", "S"],
        ["1916", "only", "-", "Sep", "30", ["23", "0", "0"], "0", "-"],
        ["1940", "only", "-", "May", "15", ["0", "0", "0"], "60", "S"],
        ["1945", "only", "-", "Apr", "2", ["2", "0", "0", "s"], "60", "S"],
        ["1945", "only", "-", "Aug", "15", ["2", "0", "0", "s"], "0", "-"],
        ["1946", "only", "-", "May", "1", ["2", "0", "0", "s"], "60", "S"],
        ["1946", "only", "-", "Sep", "1", ["2", "0", "0", "s"], "0", "-"],
        ["1947", "only", "-", "May", "4", ["2", "0", "0", "s"], "60", "S"],
        ["1947", "only", "-", "Aug", "10", ["2", "0", "0", "s"], "0", "-"],
        ["1948", "only", "-", "May", "9", ["2", "0", "0", "s"], "60", "S"],
        ["1948", "only", "-", "Aug", "8", ["2", "0", "0", "s"], "0", "-"]
    ],
    "Thule": [
        ["1991", "1992", "-", "Mar", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1991", "1992", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1993", "2006", "-", "Apr", "Sun>=1", ["2", "0", "0"], "60", "D"],
        ["1993", "2006", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"],
        ["2007", "max", "-", "Mar", "Sun>=8", ["2", "0", "0"], "60", "D"],
        ["2007", "max", "-", "Nov", "Sun>=1", ["2", "0", "0"], "0", "S"]
    ],
    "Finland": [
        ["1942", "only", "-", "Apr", "2", ["24", "0", "0"], "60", "S"],
        ["1942", "only", "-", "Oct", "4", ["1", "0", "0"], "0", "-"],
        ["1981", "1982", "-", "Mar", "lastSun", ["2", "0", "0"], "60", "S"],
        ["1981", "1982", "-", "Sep", "lastSun", ["3", "0", "0"], "0", "-"]
    ],
    "France": [
        ["1916", "only", "-", "Jun", "14", ["23", "0", "0", "s"], "60", "S"],
        ["1916", "1919", "-", "Oct", "Sun>=1", ["23", "0", "0", "s"], "0", "-"],
        ["1917", "only", "-", "Mar", "24", ["23", "0", "0", "s"], "60", "S"],
        ["1918", "only", "-", "Mar", "9", ["23", "0", "0", "s"], "60", "S"],
        ["1919", "only", "-", "Mar", "1", ["23", "0", "0", "s"], "60", "S"],
        ["1920", "only", "-", "Feb", "14", ["23", "0", "0", "s"], "60", "S"],
        ["1920", "only", "-", "Oct", "23", ["23", "0", "0", "s"], "0", "-"],
        ["1921", "only", "-", "Mar", "14", ["23", "0", "0", "s"], "60", "S"],
        ["1921", "only", "-", "Oct", "25", ["23", "0", "0", "s"], "0", "-"],
        ["1922", "only", "-", "Mar", "25", ["23", "0", "0", "s"], "60", "S"],
        ["1922", "1938", "-", "Oct", "Sat>=1", ["23", "0", "0", "s"], "0", "-"],
        ["1923", "only", "-", "May", "26", ["23", "0", "0", "s"], "60", "S"],
        ["1924", "only", "-", "Mar", "29", ["23", "0", "0", "s"], "60", "S"],
        ["1925", "only", "-", "Apr", "4", ["23", "0", "0", "s"], "60", "S"],
        ["1926", "only", "-", "Apr", "17", ["23", "0", "0", "s"], "60", "S"],
        ["1927", "only", "-", "Apr", "9", ["23", "0", "0", "s"], "60", "S"],
        ["1928", "only", "-", "Apr", "14", ["23", "0", "0", "s"], "60", "S"],
        ["1929", "only", "-", "Apr", "20", ["23", "0", "0", "s"], "60", "S"],
        ["1930", "only", "-", "Apr", "12", ["23", "0", "0", "s"], "60", "S"],
        ["1931", "only", "-", "Apr", "18", ["23", "0", "0", "s"], "60", "S"],
        ["1932", "only", "-", "Apr", "2", ["23", "0", "0", "s"], "60", "S"],
        ["1933", "only", "-", "Mar", "25", ["23", "0", "0", "s"], "60", "S"],
        ["1934", "only", "-", "Apr", "7", ["23", "0", "0", "s"], "60", "S"],
        ["1935", "only", "-", "Mar", "30", ["23", "0", "0", "s"], "60", "S"],
        ["1936", "only", "-", "Apr", "18", ["23", "0", "0", "s"], "60", "S"],
        ["1937", "only", "-", "Apr", "3", ["23", "0", "0", "s"], "60", "S"],
        ["1938", "only", "-", "Mar", "26", ["23", "0", "0", "s"], "60", "S"],
        ["1939", "only", "-", "Apr", "15", ["23", "0", "0", "s"], "60", "S"],
        ["1939", "only", "-", "Nov", "18", ["23", "0", "0", "s"], "0", "-"],
        ["1940", "only", "-", "Feb", "25", ["2", "0", "0"], "60", "S"],
        ["1941", "only", "-", "May", "5", ["0", "0", "0"], "120", "M", ""],
        ["1941", "only", "-", "Oct", "6", ["0", "0", "0"], "60", "S"],
        ["1942", "only", "-", "Mar", "9", ["0", "0", "0"], "120", "M"],
        ["1942", "only", "-", "Nov", "2", ["3", "0", "0"], "60", "S"],
        ["1943", "only", "-", "Mar", "29", ["2", "0", "0"], "120", "M"],
        ["1943", "only", "-", "Oct", "4", ["3", "0", "0"], "60", "S"],
        ["1944", "only", "-", "Apr", "3", ["2", "0", "0"], "120", "M"],
        ["1944", "only", "-", "Oct", "8", ["1", "0", "0"], "60", "S"],
        ["1945", "only", "-", "Apr", "2", ["2", "0", "0"], "120", "M"],
        ["1945", "only", "-", "Sep", "16", ["3", "0", "0"], "0", "-"],
        ["1976", "only", "-", "Mar", "28", ["1", "0", "0"], "60", "S"],
        ["1976", "only", "-", "Sep", "26", ["1", "0", "0"], "0", "-"]
    ],
    "Germany": [
        ["1946", "only", "-", "Apr", "14", ["2", "0", "0", "s"], "60", "S"],
        ["1946", "only", "-", "Oct", "7", ["2", "0", "0", "s"], "0", "-"],
        ["1947", "1949", "-", "Oct", "Sun>=1", ["2", "0", "0", "s"], "0", "-"],
        ["1947", "only", "-", "Apr", "6", ["3", "0", "0", "s"], "60", "S"],
        ["1947", "only", "-", "May", "11", ["2", "0", "0", "s"], "120", "M"],
        ["1947", "only", "-", "Jun", "29", ["3", "0", "0"], "60", "S"],
        ["1948", "only", "-", "Apr", "18", ["2", "0", "0", "s"], "60", "S"],
        ["1949", "only", "-", "Apr", "10", ["2", "0", "0", "s"], "60", "S"]
    ],
    "SovietZone": [
        ["1945", "only", "-", "May", "24", ["2", "0", "0"], "120", "M", ""],
        ["1945", "only", "-", "Sep", "24", ["3", "0", "0"], "60", "S"],
        ["1945", "only", "-", "Nov", "18", ["2", "0", "0", "s"], "0", "-"]
    ],
    "Greece": [
        ["1932", "only", "-", "Jul", "7", ["0", "0", "0"], "60", "S"],
        ["1932", "only", "-", "Sep", "1", ["0", "0", "0"], "0", "-"],
        ["1941", "only", "-", "Apr", "7", ["0", "0", "0"], "60", "S"],
        ["1942", "only", "-", "Nov", "2", ["3", "0", "0"], "0", "-"],
        ["1943", "only", "-", "Mar", "30", ["0", "0", "0"], "60", "S"],
        ["1943", "only", "-", "Oct", "4", ["0", "0", "0"], "0", "-"],
        ["1952", "only", "-", "Jul", "1", ["0", "0", "0"], "60", "S"],
        ["1952", "only", "-", "Nov", "2", ["0", "0", "0"], "0", "-"],
        ["1975", "only", "-", "Apr", "12", ["0", "0", "0", "s"], "60", "S"],
        ["1975", "only", "-", "Nov", "26", ["0", "0", "0", "s"], "0", "-"],
        ["1976", "only", "-", "Apr", "11", ["2", "0", "0", "s"], "60", "S"],
        ["1976", "only", "-", "Oct", "10", ["2", "0", "0", "s"], "0", "-"],
        ["1977", "1978", "-", "Apr", "Sun>=1", ["2", "0", "0", "s"], "60", "S"],
        ["1977", "only", "-", "Sep", "26", ["2", "0", "0", "s"], "0", "-"],
        ["1978", "only", "-", "Sep", "24", ["4", "0", "0"], "0", "-"],
        ["1979", "only", "-", "Apr", "1", ["9", "0", "0"], "60", "S"],
        ["1979", "only", "-", "Sep", "29", ["2", "0", "0"], "0", "-"],
        ["1980", "only", "-", "Apr", "1", ["0", "0", "0"], "60", "S"],
        ["1980", "only", "-", "Sep", "28", ["0", "0", "0"], "0", "-"]
    ],
    "Hungary": [
        ["1918", "only", "-", "Apr", "1", ["3", "0", "0"], "60", "S"],
        ["1918", "only", "-", "Sep", "16", ["3", "0", "0"], "0", "-"],
        ["1919", "only", "-", "Apr", "15", ["3", "0", "0"], "60", "S"],
        ["1919", "only", "-", "Nov", "24", ["3", "0", "0"], "0", "-"],
        ["1945", "only", "-", "May", "1", ["23", "0", "0"], "60", "S"],
        ["1945", "only", "-", "Nov", "1", ["0", "0", "0"], "0", "-"],
        ["1946", "only", "-", "Mar", "31", ["2", "0", "0", "s"], "60", "S"],
        ["1946", "1949", "-", "Oct", "Sun>=1", ["2", "0", "0", "s"], "0", "-"],
        ["1947", "1949", "-", "Apr", "Sun>=4", ["2", "0", "0", "s"], "60", "S"],
        ["1950", "only", "-", "Apr", "17", ["2", "0", "0", "s"], "60", "S"],
        ["1950", "only", "-", "Oct", "23", ["2", "0", "0", "s"], "0", "-"],
        ["1954", "1955", "-", "May", "23", ["0", "0", "0"], "60", "S"],
        ["1954", "1955", "-", "Oct", "3", ["0", "0", "0"], "0", "-"],
        ["1956", "only", "-", "Jun", "Sun>=1", ["0", "0", "0"], "60", "S"],
        ["1956", "only", "-", "Sep", "lastSun", ["0", "0", "0"], "0", "-"],
        ["1957", "only", "-", "Jun", "Sun>=1", ["1", "0", "0"], "60", "S"],
        ["1957", "only", "-", "Sep", "lastSun", ["3", "0", "0"], "0", "-"],
        ["1980", "only", "-", "Apr", "6", ["1", "0", "0"], "60", "S"]
    ],
    "Iceland": [
        ["1917", "1918", "-", "Feb", "19", ["23", "0", "0"], "60", "S"],
        ["1917", "only", "-", "Oct", "21", ["1", "0", "0"], "0", "-"],
        ["1918", "only", "-", "Nov", "16", ["1", "0", "0"], "0", "-"],
        ["1939", "only", "-", "Apr", "29", ["23", "0", "0"], "60", "S"],
        ["1939", "only", "-", "Nov", "29", ["2", "0", "0"], "0", "-"],
        ["1940", "only", "-", "Feb", "25", ["2", "0", "0"], "60", "S"],
        ["1940", "only", "-", "Nov", "3", ["2", "0", "0"], "0", "-"],
        ["1941", "only", "-", "Mar", "2", ["1", "0", "0", "s"], "60", "S"],
        ["1941", "only", "-", "Nov", "2", ["1", "0", "0", "s"], "0", "-"],
        ["1942", "only", "-", "Mar", "8", ["1", "0", "0", "s"], "60", "S"],
        ["1942", "only", "-", "Oct", "25", ["1", "0", "0", "s"], "0", "-"],
        ["1943", "1946", "-", "Mar", "Sun>=1", ["1", "0", "0", "s"], "60", "S"],
        ["1943", "1948", "-", "Oct", "Sun>=22", ["1", "0", "0", "s"], "0", "-"],
        ["1947", "1967", "-", "Apr", "Sun>=1", ["1", "0", "0", "s"], "60", "S"],
        ["1949", "only", "-", "Oct", "30", ["1", "0", "0", "s"], "0", "-"],
        ["1950", "1966", "-", "Oct", "Sun>=22", ["1", "0", "0", "s"], "0", "-"],
        ["1967", "only", "-", "Oct", "29", ["1", "0", "0", "s"], "0", "-"]
    ],
    "Italy": [
        ["1916", "only", "-", "Jun", "3", ["0", "0", "0", "s"], "60", "S"],
        ["1916", "only", "-", "Oct", "1", ["0", "0", "0", "s"], "0", "-"],
        ["1917", "only", "-", "Apr", "1", ["0", "0", "0", "s"], "60", "S"],
        ["1917", "only", "-", "Sep", "30", ["0", "0", "0", "s"], "0", "-"],
        ["1918", "only", "-", "Mar", "10", ["0", "0", "0", "s"], "60", "S"],
        ["1918", "1919", "-", "Oct", "Sun>=1", ["0", "0", "0", "s"], "0", "-"],
        ["1919", "only", "-", "Mar", "2", ["0", "0", "0", "s"], "60", "S"],
        ["1920", "only", "-", "Mar", "21", ["0", "0", "0", "s"], "60", "S"],
        ["1920", "only", "-", "Sep", "19", ["0", "0", "0", "s"], "0", "-"],
        ["1940", "only", "-", "Jun", "15", ["0", "0", "0", "s"], "60", "S"],
        ["1944", "only", "-", "Sep", "17", ["0", "0", "0", "s"], "0", "-"],
        ["1945", "only", "-", "Apr", "2", ["2", "0", "0"], "60", "S"],
        ["1945", "only", "-", "Sep", "15", ["0", "0", "0", "s"], "0", "-"],
        ["1946", "only", "-", "Mar", "17", ["2", "0", "0", "s"], "60", "S"],
        ["1946", "only", "-", "Oct", "6", ["2", "0", "0", "s"], "0", "-"],
        ["1947", "only", "-", "Mar", "16", ["0", "0", "0", "s"], "60", "S"],
        ["1947", "only", "-", "Oct", "5", ["0", "0", "0", "s"], "0", "-"],
        ["1948", "only", "-", "Feb", "29", ["2", "0", "0", "s"], "60", "S"],
        ["1948", "only", "-", "Oct", "3", ["2", "0", "0", "s"], "0", "-"],
        ["1966", "1968", "-", "May", "Sun>=22", ["0", "0", "0"], "60", "S"],
        ["1966", "1969", "-", "Sep", "Sun>=22", ["0", "0", "0"], "0", "-"],
        ["1969", "only", "-", "Jun", "1", ["0", "0", "0"], "60", "S"],
        ["1970", "only", "-", "May", "31", ["0", "0", "0"], "60", "S"],
        ["1970", "only", "-", "Sep", "lastSun", ["0", "0", "0"], "0", "-"],
        ["1971", "1972", "-", "May", "Sun>=22", ["0", "0", "0"], "60", "S"],
        ["1971", "only", "-", "Sep", "lastSun", ["1", "0", "0"], "0", "-"],
        ["1972", "only", "-", "Oct", "1", ["0", "0", "0"], "0", "-"],
        ["1973", "only", "-", "Jun", "3", ["0", "0", "0"], "60", "S"],
        ["1973", "1974", "-", "Sep", "lastSun", ["0", "0", "0"], "0", "-"],
        ["1974", "only", "-", "May", "26", ["0", "0", "0"], "60", "S"],
        ["1975", "only", "-", "Jun", "1", ["0", "0", "0", "s"], "60", "S"],
        ["1975", "1977", "-", "Sep", "lastSun", ["0", "0", "0", "s"], "0", "-"],
        ["1976", "only", "-", "May", "30", ["0", "0", "0", "s"], "60", "S"],
        ["1977", "1979", "-", "May", "Sun>=22", ["0", "0", "0", "s"], "60", "S"],
        ["1978", "only", "-", "Oct", "1", ["0", "0", "0", "s"], "0", "-"],
        ["1979", "only", "-", "Sep", "30", ["0", "0", "0", "s"], "0", "-"]
    ],
    "Latvia": [
        ["1989", "1996", "-", "Mar", "lastSun", ["2", "0", "0", "s"], "60", "S"],
        ["1989", "1996", "-", "Sep", "lastSun", ["2", "0", "0", "s"], "0", "-"]
    ],
    "Lux": [
        ["1916", "only", "-", "May", "14", ["23", "0", "0"], "60", "S"],
        ["1916", "only", "-", "Oct", "1", ["1", "0", "0"], "0", "-"],
        ["1917", "only", "-", "Apr", "28", ["23", "0", "0"], "60", "S"],
        ["1917", "only", "-", "Sep", "17", ["1", "0", "0"], "0", "-"],
        ["1918", "only", "-", "Apr", "Mon>=15", ["2", "0", "0", "s"], "60", "S"],
        ["1918", "only", "-", "Sep", "Mon>=15", ["2", "0", "0", "s"], "0", "-"],
        ["1919", "only", "-", "Mar", "1", ["23", "0", "0"], "60", "S"],
        ["1919", "only", "-", "Oct", "5", ["3", "0", "0"], "0", "-"],
        ["1920", "only", "-", "Feb", "14", ["23", "0", "0"], "60", "S"],
        ["1920", "only", "-", "Oct", "24", ["2", "0", "0"], "0", "-"],
        ["1921", "only", "-", "Mar", "14", ["23", "0", "0"], "60", "S"],
        ["1921", "only", "-", "Oct", "26", ["2", "0", "0"], "0", "-"],
        ["1922", "only", "-", "Mar", "25", ["23", "0", "0"], "60", "S"],
        ["1922", "only", "-", "Oct", "Sun>=2", ["1", "0", "0"], "0", "-"],
        ["1923", "only", "-", "Apr", "21", ["23", "0", "0"], "60", "S"],
        ["1923", "only", "-", "Oct", "Sun>=2", ["2", "0", "0"], "0", "-"],
        ["1924", "only", "-", "Mar", "29", ["23", "0", "0"], "60", "S"],
        ["1924", "1928", "-", "Oct", "Sun>=2", ["1", "0", "0"], "0", "-"],
        ["1925", "only", "-", "Apr", "5", ["23", "0", "0"], "60", "S"],
        ["1926", "only", "-", "Apr", "17", ["23", "0", "0"], "60", "S"],
        ["1927", "only", "-", "Apr", "9", ["23", "0", "0"], "60", "S"],
        ["1928", "only", "-", "Apr", "14", ["23", "0", "0"], "60", "S"],
        ["1929", "only", "-", "Apr", "20", ["23", "0", "0"], "60", "S"]
    ],
    "Malta": [
        ["1973", "only", "-", "Mar", "31", ["0", "0", "0", "s"], "60", "S"],
        ["1973", "only", "-", "Sep", "29", ["0", "0", "0", "s"], "0", "-"],
        ["1974", "only", "-", "Apr", "21", ["0", "0", "0", "s"], "60", "S"],
        ["1974", "only", "-", "Sep", "16", ["0", "0", "0", "s"], "0", "-"],
        ["1975", "1979", "-", "Apr", "Sun>=15", ["2", "0", "0"], "60", "S"],
        ["1975", "1980", "-", "Sep", "Sun>=15", ["2", "0", "0"], "0", "-"],
        ["1980", "only", "-", "Mar", "31", ["2", "0", "0"], "60", "S"]
    ],
    "Neth": [
        ["1916", "only", "-", "May", "1", ["0", "0", "0"], "60", "NST", ""],
        ["1916", "only", "-", "Oct", "1", ["0", "0", "0"], "0", "AMT", ""],
        ["1917", "only", "-", "Apr", "16", ["2", "0", "0", "s"], "60", "NST"],
        ["1917", "only", "-", "Sep", "17", ["2", "0", "0", "s"], "0", "AMT"],
        ["1918", "1921", "-", "Apr", "Mon>=1", ["2", "0", "0", "s"], "60", "NST"],
        ["1918", "1921", "-", "Sep", "lastMon", ["2", "0", "0", "s"], "0", "AMT"],
        ["1922", "only", "-", "Mar", "lastSun", ["2", "0", "0", "s"], "60", "NST"],
        ["1922", "1936", "-", "Oct", "Sun>=2", ["2", "0", "0", "s"], "0", "AMT"],
        ["1923", "only", "-", "Jun", "Fri>=1", ["2", "0", "0", "s"], "60", "NST"],
        ["1924", "only", "-", "Mar", "lastSun", ["2", "0", "0", "s"], "60", "NST"],
        ["1925", "only", "-", "Jun", "Fri>=1", ["2", "0", "0", "s"], "60", "NST"],
        ["1926", "1931", "-", "May", "15", ["2", "0", "0", "s"], "60", "NST"],
        ["1932", "only", "-", "May", "22", ["2", "0", "0", "s"], "60", "NST"],
        ["1933", "1936", "-", "May", "15", ["2", "0", "0", "s"], "60", "NST"],
        ["1937", "only", "-", "May", "22", ["2", "0", "0", "s"], "60", "NST"],
        ["1937", "only", "-", "Jul", "1", ["0", "0", "0"], "60", "S"],
        ["1937", "1939", "-", "Oct", "Sun>=2", ["2", "0", "0", "s"], "0", "-"],
        ["1938", "1939", "-", "May", "15", ["2", "0", "0", "s"], "60", "S"],
        ["1945", "only", "-", "Apr", "2", ["2", "0", "0", "s"], "60", "S"],
        ["1945", "only", "-", "Sep", "16", ["2", "0", "0", "s"], "0", "-"]
    ],
    "Norway": [
        ["1916", "only", "-", "May", "22", ["1", "0", "0"], "60", "S"],
        ["1916", "only", "-", "Sep", "30", ["0", "0", "0"], "0", "-"],
        ["1945", "only", "-", "Apr", "2", ["2", "0", "0", "s"], "60", "S"],
        ["1945", "only", "-", "Oct", "1", ["2", "0", "0", "s"], "0", "-"],
        ["1959", "1964", "-", "Mar", "Sun>=15", ["2", "0", "0", "s"], "60", "S"],
        ["1959", "1965", "-", "Sep", "Sun>=15", ["2", "0", "0", "s"], "0", "-"],
        ["1965", "only", "-", "Apr", "25", ["2", "0", "0", "s"], "60", "S"]
    ],
    "Poland": [
        ["1918", "1919", "-", "Sep", "16", ["2", "0", "0", "s"], "0", "-"],
        ["1919", "only", "-", "Apr", "15", ["2", "0", "0", "s"], "60", "S"],
        ["1944", "only", "-", "Apr", "3", ["2", "0", "0", "s"], "60", "S"],
        ["1944", "only", "-", "Oct", "4", ["2", "0", "0"], "0", "-"],
        ["1945", "only", "-", "Apr", "29", ["0", "0", "0"], "60", "S"],
        ["1945", "only", "-", "Nov", "1", ["0", "0", "0"], "0", "-"],
        ["1946", "only", "-", "Apr", "14", ["0", "0", "0", "s"], "60", "S"],
        ["1946", "only", "-", "Oct", "7", ["2", "0", "0", "s"], "0", "-"],
        ["1947", "only", "-", "May", "4", ["2", "0", "0", "s"], "60", "S"],
        ["1947", "1949", "-", "Oct", "Sun>=1", ["2", "0", "0", "s"], "0", "-"],
        ["1948", "only", "-", "Apr", "18", ["2", "0", "0", "s"], "60", "S"],
        ["1949", "only", "-", "Apr", "10", ["2", "0", "0", "s"], "60", "S"],
        ["1957", "only", "-", "Jun", "2", ["1", "0", "0", "s"], "60", "S"],
        ["1957", "1958", "-", "Sep", "lastSun", ["1", "0", "0", "s"], "0", "-"],
        ["1958", "only", "-", "Mar", "30", ["1", "0", "0", "s"], "60", "S"],
        ["1959", "only", "-", "May", "31", ["1", "0", "0", "s"], "60", "S"],
        ["1959", "1961", "-", "Oct", "Sun>=1", ["1", "0", "0", "s"], "0", "-"],
        ["1960", "only", "-", "Apr", "3", ["1", "0", "0", "s"], "60", "S"],
        ["1961", "1964", "-", "May", "lastSun", ["1", "0", "0", "s"], "60", "S"],
        ["1962", "1964", "-", "Sep", "lastSun", ["1", "0", "0", "s"], "0", "-"]
    ],
    "Port": [
        ["1916", "only", "-", "Jun", "17", ["23", "0", "0"], "60", "S"],
        ["1916", "only", "-", "Nov", "1", ["1", "0", "0"], "0", "-"],
        ["1917", "only", "-", "Feb", "28", ["23", "0", "0", "s"], "60", "S"],
        ["1917", "1921", "-", "Oct", "14", ["23", "0", "0", "s"], "0", "-"],
        ["1918", "only", "-", "Mar", "1", ["23", "0", "0", "s"], "60", "S"],
        ["1919", "only", "-", "Feb", "28", ["23", "0", "0", "s"], "60", "S"],
        ["1920", "only", "-", "Feb", "29", ["23", "0", "0", "s"], "60", "S"],
        ["1921", "only", "-", "Feb", "28", ["23", "0", "0", "s"], "60", "S"],
        ["1924", "only", "-", "Apr", "16", ["23", "0", "0", "s"], "60", "S"],
        ["1924", "only", "-", "Oct", "14", ["23", "0", "0", "s"], "0", "-"],
        ["1926", "only", "-", "Apr", "17", ["23", "0", "0", "s"], "60", "S"],
        ["1926", "1929", "-", "Oct", "Sat>=1", ["23", "0", "0", "s"], "0", "-"],
        ["1927", "only", "-", "Apr", "9", ["23", "0", "0", "s"], "60", "S"],
        ["1928", "only", "-", "Apr", "14", ["23", "0", "0", "s"], "60", "S"],
        ["1929", "only", "-", "Apr", "20", ["23", "0", "0", "s"], "60", "S"],
        ["1931", "only", "-", "Apr", "18", ["23", "0", "0", "s"], "60", "S"],
        ["1931", "1932", "-", "Oct", "Sat>=1", ["23", "0", "0", "s"], "0", "-"],
        ["1932", "only", "-", "Apr", "2", ["23", "0", "0", "s"], "60", "S"],
        ["1934", "only", "-", "Apr", "7", ["23", "0", "0", "s"], "60", "S"],
        ["1934", "1938", "-", "Oct", "Sat>=1", ["23", "0", "0", "s"], "0", "-"],
        ["1935", "only", "-", "Mar", "30", ["23", "0", "0", "s"], "60", "S"],
        ["1936", "only", "-", "Apr", "18", ["23", "0", "0", "s"], "60", "S"],
        ["1937", "only", "-", "Apr", "3", ["23", "0", "0", "s"], "60", "S"],
        ["1938", "only", "-", "Mar", "26", ["23", "0", "0", "s"], "60", "S"],
        ["1939", "only", "-", "Apr", "15", ["23", "0", "0", "s"], "60", "S"],
        ["1939", "only", "-", "Nov", "18", ["23", "0", "0", "s"], "0", "-"],
        ["1940", "only", "-", "Feb", "24", ["23", "0", "0", "s"], "60", "S"],
        ["1940", "1941", "-", "Oct", "5", ["23", "0", "0", "s"], "0", "-"],
        ["1941", "only", "-", "Apr", "5", ["23", "0", "0", "s"], "60", "S"],
        ["1942", "1945", "-", "Mar", "Sat>=8", ["23", "0", "0", "s"], "60", "S"],
        ["1942", "only", "-", "Apr", "25", ["22", "0", "0", "s"], "120", "M", ""],
        ["1942", "only", "-", "Aug", "15", ["22", "0", "0", "s"], "60", "S"],
        ["1942", "1945", "-", "Oct", "Sat>=24", ["23", "0", "0", "s"], "0", "-"],
        ["1943", "only", "-", "Apr", "17", ["22", "0", "0", "s"], "120", "M"],
        ["1943", "1945", "-", "Aug", "Sat>=25", ["22", "0", "0", "s"], "60", "S"],
        ["1944", "1945", "-", "Apr", "Sat>=21", ["22", "0", "0", "s"], "120", "M"],
        ["1946", "only", "-", "Apr", "Sat>=1", ["23", "0", "0", "s"], "60", "S"],
        ["1946", "only", "-", "Oct", "Sat>=1", ["23", "0", "0", "s"], "0", "-"],
        ["1947", "1949", "-", "Apr", "Sun>=1", ["2", "0", "0", "s"], "60", "S"],
        ["1947", "1949", "-", "Oct", "Sun>=1", ["2", "0", "0", "s"], "0", "-"],
        ["1951", "1965", "-", "Apr", "Sun>=1", ["2", "0", "0", "s"], "60", "S"],
        ["1951", "1965", "-", "Oct", "Sun>=1", ["2", "0", "0", "s"], "0", "-"],
        ["1977", "only", "-", "Mar", "27", ["0", "0", "0", "s"], "60", "S"],
        ["1977", "only", "-", "Sep", "25", ["0", "0", "0", "s"], "0", "-"],
        ["1978", "1979", "-", "Apr", "Sun>=1", ["0", "0", "0", "s"], "60", "S"],
        ["1978", "only", "-", "Oct", "1", ["0", "0", "0", "s"], "0", "-"],
        ["1979", "1982", "-", "Sep", "lastSun", ["1", "0", "0", "s"], "0", "-"],
        ["1980", "only", "-", "Mar", "lastSun", ["0", "0", "0", "s"], "60", "S"],
        ["1981", "1982", "-", "Mar", "lastSun", ["1", "0", "0", "s"], "60", "S"],
        ["1983", "only", "-", "Mar", "lastSun", ["2", "0", "0", "s"], "60", "S"]
    ],
    "Romania": [
        ["1932", "only", "-", "May", "21", ["0", "0", "0", "s"], "60", "S"],
        ["1932", "1939", "-", "Oct", "Sun>=1", ["0", "0", "0", "s"], "0", "-"],
        ["1933", "1939", "-", "Apr", "Sun>=2", ["0", "0", "0", "s"], "60", "S"],
        ["1979", "only", "-", "May", "27", ["0", "0", "0"], "60", "S"],
        ["1979", "only", "-", "Sep", "lastSun", ["0", "0", "0"], "0", "-"],
        ["1980", "only", "-", "Apr", "5", ["23", "0", "0"], "60", "S"],
        ["1980", "only", "-", "Sep", "lastSun", ["1", "0", "0"], "0", "-"],
        ["1991", "1993", "-", "Mar", "lastSun", ["0", "0", "0", "s"], "60", "S"],
        ["1991", "1993", "-", "Sep", "lastSun", ["0", "0", "0", "s"], "0", "-"]
    ],
    "Spain": [
        ["1917", "only", "-", "May", "5", ["23", "0", "0", "s"], "60", "S"],
        ["1917", "1919", "-", "Oct", "6", ["23", "0", "0", "s"], "0", "-"],
        ["1918", "only", "-", "Apr", "15", ["23", "0", "0", "s"], "60", "S"],
        ["1919", "only", "-", "Apr", "5", ["23", "0", "0", "s"], "60", "S"],
        ["1924", "only", "-", "Apr", "16", ["23", "0", "0", "s"], "60", "S"],
        ["1924", "only", "-", "Oct", "4", ["23", "0", "0", "s"], "0", "-"],
        ["1926", "only", "-", "Apr", "17", ["23", "0", "0", "s"], "60", "S"],
        ["1926", "1929", "-", "Oct", "Sat>=1", ["23", "0", "0", "s"], "0", "-"],
        ["1927", "only", "-", "Apr", "9", ["23", "0", "0", "s"], "60", "S"],
        ["1928", "only", "-", "Apr", "14", ["23", "0", "0", "s"], "60", "S"],
        ["1929", "only", "-", "Apr", "20", ["23", "0", "0", "s"], "60", "S"],
        ["1937", "only", "-", "May", "22", ["23", "0", "0", "s"], "60", "S"],
        ["1937", "1939", "-", "Oct", "Sat>=1", ["23", "0", "0", "s"], "0", "-"],
        ["1938", "only", "-", "Mar", "22", ["23", "0", "0", "s"], "60", "S"],
        ["1939", "only", "-", "Apr", "15", ["23", "0", "0", "s"], "60", "S"],
        ["1940", "only", "-", "Mar", "16", ["23", "0", "0", "s"], "60", "S"],
        ["1942", "only", "-", "May", "2", ["22", "0", "0", "s"], "120", "M", ""],
        ["1942", "only", "-", "Sep", "1", ["22", "0", "0", "s"], "60", "S"],
        ["1943", "1946", "-", "Apr", "Sat>=13", ["22", "0", "0", "s"], "120", "M"],
        ["1943", "only", "-", "Oct", "3", ["22", "0", "0", "s"], "60", "S"],
        ["1944", "only", "-", "Oct", "10", ["22", "0", "0", "s"], "60", "S"],
        ["1945", "only", "-", "Sep", "30", ["1", "0", "0"], "60", "S"],
        ["1946", "only", "-", "Sep", "30", ["0", "0", "0"], "0", "-"],
        ["1949", "only", "-", "Apr", "30", ["23", "0", "0"], "60", "S"],
        ["1949", "only", "-", "Sep", "30", ["1", "0", "0"], "0", "-"],
        ["1974", "1975", "-", "Apr", "Sat>=13", ["23", "0", "0"], "60", "S"],
        ["1974", "1975", "-", "Oct", "Sun>=1", ["1", "0", "0"], "0", "-"],
        ["1976", "only", "-", "Mar", "27", ["23", "0", "0"], "60", "S"],
        ["1976", "1977", "-", "Sep", "lastSun", ["1", "0", "0"], "0", "-"],
        ["1977", "1978", "-", "Apr", "2", ["23", "0", "0"], "60", "S"],
        ["1978", "only", "-", "Oct", "1", ["1", "0", "0"], "0", "-"]
    ],
    "SpainAfrica": [
        ["1967", "only", "-", "Jun", "3", ["12", "0", "0"], "60", "S"],
        ["1967", "only", "-", "Oct", "1", ["0", "0", "0"], "0", "-"],
        ["1974", "only", "-", "Jun", "24", ["0", "0", "0"], "60", "S"],
        ["1974", "only", "-", "Sep", "1", ["0", "0", "0"], "0", "-"],
        ["1976", "1977", "-", "May", "1", ["0", "0", "0"], "60", "S"],
        ["1976", "only", "-", "Aug", "1", ["0", "0", "0"], "0", "-"],
        ["1977", "only", "-", "Sep", "28", ["0", "0", "0"], "0", "-"],
        ["1978", "only", "-", "Jun", "1", ["0", "0", "0"], "60", "S"],
        ["1978", "only", "-", "Aug", "4", ["0", "0", "0"], "0", "-"]
    ],
    "Swiss": [
        ["1941", "1942", "-", "May", "Mon>=1", ["1", "0", "0"], "60", "S"],
        ["1941", "1942", "-", "Oct", "Mon>=1", ["2", "0", "0"], "0", "-"]
    ],
    "Turkey": [
        ["1916", "only", "-", "May", "1", ["0", "0", "0"], "60", "S"],
        ["1916", "only", "-", "Oct", "1", ["0", "0", "0"], "0", "-"],
        ["1920", "only", "-", "Mar", "28", ["0", "0", "0"], "60", "S"],
        ["1920", "only", "-", "Oct", "25", ["0", "0", "0"], "0", "-"],
        ["1921", "only", "-", "Apr", "3", ["0", "0", "0"], "60", "S"],
        ["1921", "only", "-", "Oct", "3", ["0", "0", "0"], "0", "-"],
        ["1922", "only", "-", "Mar", "26", ["0", "0", "0"], "60", "S"],
        ["1922", "only", "-", "Oct", "8", ["0", "0", "0"], "0", "-"],
        ["1924", "only", "-", "May", "13", ["0", "0", "0"], "60", "S"],
        ["1924", "1925", "-", "Oct", "1", ["0", "0", "0"], "0", "-"],
        ["1925", "only", "-", "May", "1", ["0", "0", "0"], "60", "S"],
        ["1940", "only", "-", "Jun", "30", ["0", "0", "0"], "60", "S"],
        ["1940", "only", "-", "Oct", "5", ["0", "0", "0"], "0", "-"],
        ["1940", "only", "-", "Dec", "1", ["0", "0", "0"], "60", "S"],
        ["1941", "only", "-", "Sep", "21", ["0", "0", "0"], "0", "-"],
        ["1942", "only", "-", "Apr", "1", ["0", "0", "0"], "60", "S"],
        ["1942", "only", "-", "Nov", "1", ["0", "0", "0"], "0", "-"],
        ["1945", "only", "-", "Apr", "2", ["0", "0", "0"], "60", "S"],
        ["1945", "only", "-", "Oct", "8", ["0", "0", "0"], "0", "-"],
        ["1946", "only", "-", "Jun", "1", ["0", "0", "0"], "60", "S"],
        ["1946", "only", "-", "Oct", "1", ["0", "0", "0"], "0", "-"],
        ["1947", "1948", "-", "Apr", "Sun>=16", ["0", "0", "0"], "60", "S"],
        ["1947", "1950", "-", "Oct", "Sun>=2", ["0", "0", "0"], "0", "-"],
        ["1949", "only", "-", "Apr", "10", ["0", "0", "0"], "60", "S"],
        ["1950", "only", "-", "Apr", "19", ["0", "0", "0"], "60", "S"],
        ["1951", "only", "-", "Apr", "22", ["0", "0", "0"], "60", "S"],
        ["1951", "only", "-", "Oct", "8", ["0", "0", "0"], "0", "-"],
        ["1962", "only", "-", "Jul", "15", ["0", "0", "0"], "60", "S"],
        ["1962", "only", "-", "Oct", "8", ["0", "0", "0"], "0", "-"],
        ["1964", "only", "-", "May", "15", ["0", "0", "0"], "60", "S"],
        ["1964", "only", "-", "Oct", "1", ["0", "0", "0"], "0", "-"],
        ["1970", "1972", "-", "May", "Sun>=2", ["0", "0", "0"], "60", "S"],
        ["1970", "1972", "-", "Oct", "Sun>=2", ["0", "0", "0"], "0", "-"],
        ["1973", "only", "-", "Jun", "3", ["1", "0", "0"], "60", "S"],
        ["1973", "only", "-", "Nov", "4", ["3", "0", "0"], "0", "-"],
        ["1974", "only", "-", "Mar", "31", ["2", "0", "0"], "60", "S"],
        ["1974", "only", "-", "Nov", "3", ["5", "0", "0"], "0", "-"],
        ["1975", "only", "-", "Mar", "30", ["0", "0", "0"], "60", "S"],
        ["1975", "1976", "-", "Oct", "lastSun", ["0", "0", "0"], "0", "-"],
        ["1976", "only", "-", "Jun", "1", ["0", "0", "0"], "60", "S"],
        ["1977", "1978", "-", "Apr", "Sun>=1", ["0", "0", "0"], "60", "S"],
        ["1977", "only", "-", "Oct", "16", ["0", "0", "0"], "0", "-"],
        ["1979", "1980", "-", "Apr", "Sun>=1", ["3", "0", "0"], "60", "S"],
        ["1979", "1982", "-", "Oct", "Mon>=11", ["0", "0", "0"], "0", "-"],
        ["1981", "1982", "-", "Mar", "lastSun", ["3", "0", "0"], "60", "S"],
        ["1983", "only", "-", "Jul", "31", ["0", "0", "0"], "60", "S"],
        ["1983", "only", "-", "Oct", "2", ["0", "0", "0"], "0", "-"],
        ["1985", "only", "-", "Apr", "20", ["0", "0", "0"], "60", "S"],
        ["1985", "only", "-", "Sep", "28", ["0", "0", "0"], "0", "-"],
        ["1986", "1990", "-", "Mar", "lastSun", ["2", "0", "0", "s"], "60", "S"],
        ["1986", "1990", "-", "Sep", "lastSun", ["2", "0", "0", "s"], "0", "-"],
        ["1991", "2006", "-", "Mar", "lastSun", ["1", "0", "0", "s"], "60", "S"],
        ["1991", "1995", "-", "Sep", "lastSun", ["1", "0", "0", "s"], "0", "-"],
        ["1996", "2006", "-", "Oct", "lastSun", ["1", "0", "0", "s"], "0", "-"]
    ],
    "US": [
        ["1918", "1919", "-", "Mar", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1918", "1919", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1942", "only", "-", "Feb", "9", ["2", "0", "0"], "60", "W", ""],
        ["1945", "only", "-", "Aug", "14", ["23", "0", "0", "u"], "60", "P", ""],
        ["1945", "only", "-", "Sep", "30", ["2", "0", "0"], "0", "S"],
        ["1967", "2006", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1967", "1973", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1974", "only", "-", "Jan", "6", ["2", "0", "0"], "60", "D"],
        ["1975", "only", "-", "Feb", "23", ["2", "0", "0"], "60", "D"],
        ["1976", "1986", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1987", "2006", "-", "Apr", "Sun>=1", ["2", "0", "0"], "60", "D"],
        ["2007", "max", "-", "Mar", "Sun>=8", ["2", "0", "0"], "60", "D"],
        ["2007", "max", "-", "Nov", "Sun>=1", ["2", "0", "0"], "0", "S"]
    ],
    "NYC": [
        ["1920", "only", "-", "Mar", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1920", "only", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1921", "1966", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1921", "1954", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1955", "1966", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"]
    ],
    "Chicago": [
        ["1920", "only", "-", "Jun", "13", ["2", "0", "0"], "60", "D"],
        ["1920", "1921", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1921", "only", "-", "Mar", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1922", "1966", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1922", "1954", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1955", "1966", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"]
    ],
    "Denver": [
        ["1920", "1921", "-", "Mar", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1920", "only", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1921", "only", "-", "May", "22", ["2", "0", "0"], "0", "S"],
        ["1965", "1966", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1965", "1966", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"]
    ],
    "CA": [
        ["1948", "only", "-", "Mar", "14", ["2", "0", "0"], "60", "D"],
        ["1949", "only", "-", "Jan", "1", ["2", "0", "0"], "0", "S"],
        ["1950", "1966", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1950", "1961", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1962", "1966", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"]
    ],
    "Indianapolis": [
        ["1941", "only", "-", "Jun", "22", ["2", "0", "0"], "60", "D"],
        ["1941", "1954", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1946", "1954", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"]
    ],
    "Marengo": [
        ["1951", "only", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1951", "only", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1954", "1960", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1954", "1960", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"]
    ],
    "Vincennes": [
        ["1946", "only", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1946", "only", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1953", "1954", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1953", "1959", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1955", "only", "-", "May", "1", ["0", "0", "0"], "60", "D"],
        ["1956", "1963", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1960", "only", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1961", "only", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1962", "1963", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"]
    ],
    "Perry": [
        ["1946", "only", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1946", "only", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1953", "1954", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1953", "1959", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1955", "only", "-", "May", "1", ["0", "0", "0"], "60", "D"],
        ["1956", "1963", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1960", "only", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1961", "only", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1962", "1963", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"]
    ],
    "Pike": [
        ["1955", "only", "-", "May", "1", ["0", "0", "0"], "60", "D"],
        ["1955", "1960", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1956", "1964", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1961", "1964", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"]
    ],
    "Starke": [
        ["1947", "1961", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1947", "1954", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1955", "1956", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1957", "1958", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1959", "1961", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"]
    ],
    "Pulaski": [
        ["1946", "1960", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1946", "1954", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1955", "1956", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1957", "1960", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"]
    ],
    "Louisville": [
        ["1921", "only", "-", "May", "1", ["2", "0", "0"], "60", "D"],
        ["1921", "only", "-", "Sep", "1", ["2", "0", "0"], "0", "S"],
        ["1941", "1961", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1941", "only", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1946", "only", "-", "Jun", "2", ["2", "0", "0"], "0", "S"],
        ["1950", "1955", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1956", "1960", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"]
    ],
    "Detroit": [
        ["1948", "only", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1948", "only", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1967", "only", "-", "Jun", "14", ["2", "0", "0"], "60", "D"],
        ["1967", "only", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"]
    ],
    "Menominee": [
        ["1946", "only", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1946", "only", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1966", "only", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1966", "only", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"]
    ],
    "Canada": [
        ["1918", "only", "-", "Apr", "14", ["2", "0", "0"], "60", "D"],
        ["1918", "only", "-", "Oct", "27", ["2", "0", "0"], "0", "S"],
        ["1942", "only", "-", "Feb", "9", ["2", "0", "0"], "60", "W", ""],
        ["1945", "only", "-", "Aug", "14", ["23", "0", "0", "u"], "60", "P", ""],
        ["1945", "only", "-", "Sep", "30", ["2", "0", "0"], "0", "S"],
        ["1974", "1986", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1974", "2006", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1987", "2006", "-", "Apr", "Sun>=1", ["2", "0", "0"], "60", "D"],
        ["2007", "max", "-", "Mar", "Sun>=8", ["2", "0", "0"], "60", "D"],
        ["2007", "max", "-", "Nov", "Sun>=1", ["2", "0", "0"], "0", "S"]
    ],
    "StJohns": [
        ["1917", "only", "-", "Apr", "8", ["2", "0", "0"], "60", "D"],
        ["1917", "only", "-", "Sep", "17", ["2", "0", "0"], "0", "S"],
        ["1919", "only", "-", "May", "5", ["23", "0", "0"], "60", "D"],
        ["1919", "only", "-", "Aug", "12", ["23", "0", "0"], "0", "S"],
        ["1920", "1935", "-", "May", "Sun>=1", ["23", "0", "0"], "60", "D"],
        ["1920", "1935", "-", "Oct", "lastSun", ["23", "0", "0"], "0", "S"],
        ["1936", "1941", "-", "May", "Mon>=9", ["0", "0", "0"], "60", "D"],
        ["1936", "1941", "-", "Oct", "Mon>=2", ["0", "0", "0"], "0", "S"],
        ["1946", "1950", "-", "May", "Sun>=8", ["2", "0", "0"], "60", "D"],
        ["1946", "1950", "-", "Oct", "Sun>=2", ["2", "0", "0"], "0", "S"],
        ["1951", "1986", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1951", "1959", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1960", "1986", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1987", "only", "-", "Apr", "Sun>=1", ["0", "1", "0"], "60", "D"],
        ["1987", "2006", "-", "Oct", "lastSun", ["0", "1", "0"], "0", "S"],
        ["1988", "only", "-", "Apr", "Sun>=1", ["0", "1", "0"], "120", "DD"],
        ["1989", "2006", "-", "Apr", "Sun>=1", ["0", "1", "0"], "60", "D"],
        ["2007", "2011", "-", "Mar", "Sun>=8", ["0", "1", "0"], "60", "D"],
        ["2007", "2010", "-", "Nov", "Sun>=1", ["0", "1", "0"], "0", "S"]
    ],
    "Halifax": [
        ["1916", "only", "-", "Apr", "1", ["0", "0", "0"], "60", "D"],
        ["1916", "only", "-", "Oct", "1", ["0", "0", "0"], "0", "S"],
        ["1920", "only", "-", "May", "9", ["0", "0", "0"], "60", "D"],
        ["1920", "only", "-", "Aug", "29", ["0", "0", "0"], "0", "S"],
        ["1921", "only", "-", "May", "6", ["0", "0", "0"], "60", "D"],
        ["1921", "1922", "-", "Sep", "5", ["0", "0", "0"], "0", "S"],
        ["1922", "only", "-", "Apr", "30", ["0", "0", "0"], "60", "D"],
        ["1923", "1925", "-", "May", "Sun>=1", ["0", "0", "0"], "60", "D"],
        ["1923", "only", "-", "Sep", "4", ["0", "0", "0"], "0", "S"],
        ["1924", "only", "-", "Sep", "15", ["0", "0", "0"], "0", "S"],
        ["1925", "only", "-", "Sep", "28", ["0", "0", "0"], "0", "S"],
        ["1926", "only", "-", "May", "16", ["0", "0", "0"], "60", "D"],
        ["1926", "only", "-", "Sep", "13", ["0", "0", "0"], "0", "S"],
        ["1927", "only", "-", "May", "1", ["0", "0", "0"], "60", "D"],
        ["1927", "only", "-", "Sep", "26", ["0", "0", "0"], "0", "S"],
        ["1928", "1931", "-", "May", "Sun>=8", ["0", "0", "0"], "60", "D"],
        ["1928", "only", "-", "Sep", "9", ["0", "0", "0"], "0", "S"],
        ["1929", "only", "-", "Sep", "3", ["0", "0", "0"], "0", "S"],
        ["1930", "only", "-", "Sep", "15", ["0", "0", "0"], "0", "S"],
        ["1931", "1932", "-", "Sep", "Mon>=24", ["0", "0", "0"], "0", "S"],
        ["1932", "only", "-", "May", "1", ["0", "0", "0"], "60", "D"],
        ["1933", "only", "-", "Apr", "30", ["0", "0", "0"], "60", "D"],
        ["1933", "only", "-", "Oct", "2", ["0", "0", "0"], "0", "S"],
        ["1934", "only", "-", "May", "20", ["0", "0", "0"], "60", "D"],
        ["1934", "only", "-", "Sep", "16", ["0", "0", "0"], "0", "S"],
        ["1935", "only", "-", "Jun", "2", ["0", "0", "0"], "60", "D"],
        ["1935", "only", "-", "Sep", "30", ["0", "0", "0"], "0", "S"],
        ["1936", "only", "-", "Jun", "1", ["0", "0", "0"], "60", "D"],
        ["1936", "only", "-", "Sep", "14", ["0", "0", "0"], "0", "S"],
        ["1937", "1938", "-", "May", "Sun>=1", ["0", "0", "0"], "60", "D"],
        ["1937", "1941", "-", "Sep", "Mon>=24", ["0", "0", "0"], "0", "S"],
        ["1939", "only", "-", "May", "28", ["0", "0", "0"], "60", "D"],
        ["1940", "1941", "-", "May", "Sun>=1", ["0", "0", "0"], "60", "D"],
        ["1946", "1949", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1946", "1949", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1951", "1954", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1951", "1954", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1956", "1959", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1956", "1959", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1962", "1973", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1962", "1973", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"]
    ],
    "Moncton": [
        ["1933", "1935", "-", "Jun", "Sun>=8", ["1", "0", "0"], "60", "D"],
        ["1933", "1935", "-", "Sep", "Sun>=8", ["1", "0", "0"], "0", "S"],
        ["1936", "1938", "-", "Jun", "Sun>=1", ["1", "0", "0"], "60", "D"],
        ["1936", "1938", "-", "Sep", "Sun>=1", ["1", "0", "0"], "0", "S"],
        ["1939", "only", "-", "May", "27", ["1", "0", "0"], "60", "D"],
        ["1939", "1941", "-", "Sep", "Sat>=21", ["1", "0", "0"], "0", "S"],
        ["1940", "only", "-", "May", "19", ["1", "0", "0"], "60", "D"],
        ["1941", "only", "-", "May", "4", ["1", "0", "0"], "60", "D"],
        ["1946", "1972", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1946", "1956", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1957", "1972", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1993", "2006", "-", "Apr", "Sun>=1", ["0", "1", "0"], "60", "D"],
        ["1993", "2006", "-", "Oct", "lastSun", ["0", "1", "0"], "0", "S"]
    ],
    "Mont": [
        ["1917", "only", "-", "Mar", "25", ["2", "0", "0"], "60", "D"],
        ["1917", "only", "-", "Apr", "24", ["0", "0", "0"], "0", "S"],
        ["1919", "only", "-", "Mar", "31", ["2", "30", "0"], "60", "D"],
        ["1919", "only", "-", "Oct", "25", ["2", "30", "0"], "0", "S"],
        ["1920", "only", "-", "May", "2", ["2", "30", "0"], "60", "D"],
        ["1920", "1922", "-", "Oct", "Sun>=1", ["2", "30", "0"], "0", "S"],
        ["1921", "only", "-", "May", "1", ["2", "0", "0"], "60", "D"],
        ["1922", "only", "-", "Apr", "30", ["2", "0", "0"], "60", "D"],
        ["1924", "only", "-", "May", "17", ["2", "0", "0"], "60", "D"],
        ["1924", "1926", "-", "Sep", "lastSun", ["2", "30", "0"], "0", "S"],
        ["1925", "1926", "-", "May", "Sun>=1", ["2", "0", "0"], "60", "D"],
        ["1927", "1937", "-", "Apr", "lastSat", ["24", "0", "0"], "60", "D"],
        ["1927", "1937", "-", "Sep", "lastSat", ["24", "0", "0"], "0", "S"],
        ["1938", "1940", "-", "Apr", "lastSun", ["0", "0", "0"], "60", "D"],
        ["1938", "1939", "-", "Sep", "lastSun", ["0", "0", "0"], "0", "S"],
        ["1946", "1973", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1945", "1948", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1949", "1950", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1951", "1956", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1957", "1973", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"]
    ],
    "Toronto": [
        ["1919", "only", "-", "Mar", "30", ["23", "30", "0"], "60", "D"],
        ["1919", "only", "-", "Oct", "26", ["0", "0", "0"], "0", "S"],
        ["1920", "only", "-", "May", "2", ["2", "0", "0"], "60", "D"],
        ["1920", "only", "-", "Sep", "26", ["0", "0", "0"], "0", "S"],
        ["1921", "only", "-", "May", "15", ["2", "0", "0"], "60", "D"],
        ["1921", "only", "-", "Sep", "15", ["2", "0", "0"], "0", "S"],
        ["1922", "1923", "-", "May", "Sun>=8", ["2", "0", "0"], "60", "D"],
        ["1922", "1926", "-", "Sep", "Sun>=15", ["2", "0", "0"], "0", "S"],
        ["1924", "1927", "-", "May", "Sun>=1", ["2", "0", "0"], "60", "D"],
        ["1927", "1932", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1928", "1931", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1932", "only", "-", "May", "1", ["2", "0", "0"], "60", "D"],
        ["1933", "1940", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1933", "only", "-", "Oct", "1", ["2", "0", "0"], "0", "S"],
        ["1934", "1939", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1945", "1946", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1946", "only", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1947", "1949", "-", "Apr", "lastSun", ["0", "0", "0"], "60", "D"],
        ["1947", "1948", "-", "Sep", "lastSun", ["0", "0", "0"], "0", "S"],
        ["1949", "only", "-", "Nov", "lastSun", ["0", "0", "0"], "0", "S"],
        ["1950", "1973", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1950", "only", "-", "Nov", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1951", "1956", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1957", "1973", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"]
    ],
    "Winn": [
        ["1916", "only", "-", "Apr", "23", ["0", "0", "0"], "60", "D"],
        ["1916", "only", "-", "Sep", "17", ["0", "0", "0"], "0", "S"],
        ["1918", "only", "-", "Apr", "14", ["2", "0", "0"], "60", "D"],
        ["1918", "only", "-", "Oct", "27", ["2", "0", "0"], "0", "S"],
        ["1937", "only", "-", "May", "16", ["2", "0", "0"], "60", "D"],
        ["1937", "only", "-", "Sep", "26", ["2", "0", "0"], "0", "S"],
        ["1942", "only", "-", "Feb", "9", ["2", "0", "0"], "60", "W", ""],
        ["1945", "only", "-", "Aug", "14", ["23", "0", "0", "u"], "60", "P", ""],
        ["1945", "only", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1946", "only", "-", "May", "12", ["2", "0", "0"], "60", "D"],
        ["1946", "only", "-", "Oct", "13", ["2", "0", "0"], "0", "S"],
        ["1947", "1949", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1947", "1949", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1950", "only", "-", "May", "1", ["2", "0", "0"], "60", "D"],
        ["1950", "only", "-", "Sep", "30", ["2", "0", "0"], "0", "S"],
        ["1951", "1960", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1951", "1958", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1959", "only", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1960", "only", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1963", "only", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1963", "only", "-", "Sep", "22", ["2", "0", "0"], "0", "S"],
        ["1966", "1986", "-", "Apr", "lastSun", ["2", "0", "0", "s"], "60", "D"],
        ["1966", "2005", "-", "Oct", "lastSun", ["2", "0", "0", "s"], "0", "S"],
        ["1987", "2005", "-", "Apr", "Sun>=1", ["2", "0", "0", "s"], "60", "D"]
    ],
    "Regina": [
        ["1918", "only", "-", "Apr", "14", ["2", "0", "0"], "60", "D"],
        ["1918", "only", "-", "Oct", "27", ["2", "0", "0"], "0", "S"],
        ["1930", "1934", "-", "May", "Sun>=1", ["0", "0", "0"], "60", "D"],
        ["1930", "1934", "-", "Oct", "Sun>=1", ["0", "0", "0"], "0", "S"],
        ["1937", "1941", "-", "Apr", "Sun>=8", ["0", "0", "0"], "60", "D"],
        ["1937", "only", "-", "Oct", "Sun>=8", ["0", "0", "0"], "0", "S"],
        ["1938", "only", "-", "Oct", "Sun>=1", ["0", "0", "0"], "0", "S"],
        ["1939", "1941", "-", "Oct", "Sun>=8", ["0", "0", "0"], "0", "S"],
        ["1942", "only", "-", "Feb", "9", ["2", "0", "0"], "60", "W", ""],
        ["1945", "only", "-", "Aug", "14", ["23", "0", "0", "u"], "60", "P", ""],
        ["1945", "only", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1946", "only", "-", "Apr", "Sun>=8", ["2", "0", "0"], "60", "D"],
        ["1946", "only", "-", "Oct", "Sun>=8", ["2", "0", "0"], "0", "S"],
        ["1947", "1957", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1947", "1957", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1959", "only", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1959", "only", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"]
    ],
    "Swift": [
        ["1957", "only", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1957", "only", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1959", "1961", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1959", "only", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1960", "1961", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"]
    ],
    "Edm": [
        ["1918", "1919", "-", "Apr", "Sun>=8", ["2", "0", "0"], "60", "D"],
        ["1918", "only", "-", "Oct", "27", ["2", "0", "0"], "0", "S"],
        ["1919", "only", "-", "May", "27", ["2", "0", "0"], "0", "S"],
        ["1920", "1923", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1920", "only", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1921", "1923", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1942", "only", "-", "Feb", "9", ["2", "0", "0"], "60", "W", ""],
        ["1945", "only", "-", "Aug", "14", ["23", "0", "0", "u"], "60", "P", ""],
        ["1945", "only", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1947", "only", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1947", "only", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1967", "only", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1967", "only", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1969", "only", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1969", "only", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1972", "1986", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1972", "2006", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"]
    ],
    "Vanc": [
        ["1918", "only", "-", "Apr", "14", ["2", "0", "0"], "60", "D"],
        ["1918", "only", "-", "Oct", "27", ["2", "0", "0"], "0", "S"],
        ["1942", "only", "-", "Feb", "9", ["2", "0", "0"], "60", "W", ""],
        ["1945", "only", "-", "Aug", "14", ["23", "0", "0", "u"], "60", "P", ""],
        ["1945", "only", "-", "Sep", "30", ["2", "0", "0"], "0", "S"],
        ["1946", "1986", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1946", "only", "-", "Oct", "13", ["2", "0", "0"], "0", "S"],
        ["1947", "1961", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1962", "2006", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"]
    ],
    "NT_YK": [
        ["1918", "only", "-", "Apr", "14", ["2", "0", "0"], "60", "D"],
        ["1918", "only", "-", "Oct", "27", ["2", "0", "0"], "0", "S"],
        ["1919", "only", "-", "May", "25", ["2", "0", "0"], "60", "D"],
        ["1919", "only", "-", "Nov", "1", ["0", "0", "0"], "0", "S"],
        ["1942", "only", "-", "Feb", "9", ["2", "0", "0"], "60", "W", ""],
        ["1945", "only", "-", "Aug", "14", ["23", "0", "0", "u"], "60", "P", ""],
        ["1945", "only", "-", "Sep", "30", ["2", "0", "0"], "0", "S"],
        ["1965", "only", "-", "Apr", "lastSun", ["0", "0", "0"], "120", "DD"],
        ["1965", "only", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1980", "1986", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1980", "2006", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1987", "2006", "-", "Apr", "Sun>=1", ["2", "0", "0"], "60", "D"]
    ],
    "Mexico": [
        ["1939", "only", "-", "Feb", "5", ["0", "0", "0"], "60", "D"],
        ["1939", "only", "-", "Jun", "25", ["0", "0", "0"], "0", "S"],
        ["1940", "only", "-", "Dec", "9", ["0", "0", "0"], "60", "D"],
        ["1941", "only", "-", "Apr", "1", ["0", "0", "0"], "0", "S"],
        ["1943", "only", "-", "Dec", "16", ["0", "0", "0"], "60", "W", ""],
        ["1944", "only", "-", "May", "1", ["0", "0", "0"], "0", "S"],
        ["1950", "only", "-", "Feb", "12", ["0", "0", "0"], "60", "D"],
        ["1950", "only", "-", "Jul", "30", ["0", "0", "0"], "0", "S"],
        ["1996", "2000", "-", "Apr", "Sun>=1", ["2", "0", "0"], "60", "D"],
        ["1996", "2000", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"],
        ["2001", "only", "-", "May", "Sun>=1", ["2", "0", "0"], "60", "D"],
        ["2001", "only", "-", "Sep", "lastSun", ["2", "0", "0"], "0", "S"],
        ["2002", "max", "-", "Apr", "Sun>=1", ["2", "0", "0"], "60", "D"],
        ["2002", "max", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"]
    ],
    "Bahamas": [
        ["1964", "1975", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1964", "1975", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"]
    ],
    "Barb": [
        ["1977", "only", "-", "Jun", "12", ["2", "0", "0"], "60", "D"],
        ["1977", "1978", "-", "Oct", "Sun>=1", ["2", "0", "0"], "0", "S"],
        ["1978", "1980", "-", "Apr", "Sun>=15", ["2", "0", "0"], "60", "D"],
        ["1979", "only", "-", "Sep", "30", ["2", "0", "0"], "0", "S"],
        ["1980", "only", "-", "Sep", "25", ["2", "0", "0"], "0", "S"]
    ],
    "Belize": [
        ["1918", "1942", "-", "Oct", "Sun>=2", ["0", "0", "0"], "30", "HD"],
        ["1919", "1943", "-", "Feb", "Sun>=9", ["0", "0", "0"], "0", "S"],
        ["1973", "only", "-", "Dec", "5", ["0", "0", "0"], "60", "D"],
        ["1974", "only", "-", "Feb", "9", ["0", "0", "0"], "0", "S"],
        ["1982", "only", "-", "Dec", "18", ["0", "0", "0"], "60", "D"],
        ["1983", "only", "-", "Feb", "12", ["0", "0", "0"], "0", "S"]
    ],
    "CR": [
        ["1979", "1980", "-", "Feb", "lastSun", ["0", "0", "0"], "60", "D"],
        ["1979", "1980", "-", "Jun", "Sun>=1", ["0", "0", "0"], "0", "S"],
        ["1991", "1992", "-", "Jan", "Sat>=15", ["0", "0", "0"], "60", "D"],
        ["1991", "only", "-", "Jul", "1", ["0", "0", "0"], "0", "S"],
        ["1992", "only", "-", "Mar", "15", ["0", "0", "0"], "0", "S"]
    ],
    "Cuba": [
        ["1928", "only", "-", "Jun", "10", ["0", "0", "0"], "60", "D"],
        ["1928", "only", "-", "Oct", "10", ["0", "0", "0"], "0", "S"],
        ["1940", "1942", "-", "Jun", "Sun>=1", ["0", "0", "0"], "60", "D"],
        ["1940", "1942", "-", "Sep", "Sun>=1", ["0", "0", "0"], "0", "S"],
        ["1945", "1946", "-", "Jun", "Sun>=1", ["0", "0", "0"], "60", "D"],
        ["1945", "1946", "-", "Sep", "Sun>=1", ["0", "0", "0"], "0", "S"],
        ["1965", "only", "-", "Jun", "1", ["0", "0", "0"], "60", "D"],
        ["1965", "only", "-", "Sep", "30", ["0", "0", "0"], "0", "S"],
        ["1966", "only", "-", "May", "29", ["0", "0", "0"], "60", "D"],
        ["1966", "only", "-", "Oct", "2", ["0", "0", "0"], "0", "S"],
        ["1967", "only", "-", "Apr", "8", ["0", "0", "0"], "60", "D"],
        ["1967", "1968", "-", "Sep", "Sun>=8", ["0", "0", "0"], "0", "S"],
        ["1968", "only", "-", "Apr", "14", ["0", "0", "0"], "60", "D"],
        ["1969", "1977", "-", "Apr", "lastSun", ["0", "0", "0"], "60", "D"],
        ["1969", "1971", "-", "Oct", "lastSun", ["0", "0", "0"], "0", "S"],
        ["1972", "1974", "-", "Oct", "8", ["0", "0", "0"], "0", "S"],
        ["1975", "1977", "-", "Oct", "lastSun", ["0", "0", "0"], "0", "S"],
        ["1978", "only", "-", "May", "7", ["0", "0", "0"], "60", "D"],
        ["1978", "1990", "-", "Oct", "Sun>=8", ["0", "0", "0"], "0", "S"],
        ["1979", "1980", "-", "Mar", "Sun>=15", ["0", "0", "0"], "60", "D"],
        ["1981", "1985", "-", "May", "Sun>=5", ["0", "0", "0"], "60", "D"],
        ["1986", "1989", "-", "Mar", "Sun>=14", ["0", "0", "0"], "60", "D"],
        ["1990", "1997", "-", "Apr", "Sun>=1", ["0", "0", "0"], "60", "D"],
        ["1991", "1995", "-", "Oct", "Sun>=8", ["0", "0", "0", "s"], "0", "S"],
        ["1996", "only", "-", "Oct", "6", ["0", "0", "0", "s"], "0", "S"],
        ["1997", "only", "-", "Oct", "12", ["0", "0", "0", "s"], "0", "S"],
        ["1998", "1999", "-", "Mar", "lastSun", ["0", "0", "0", "s"], "60", "D"],
        ["1998", "2003", "-", "Oct", "lastSun", ["0", "0", "0", "s"], "0", "S"],
        ["2000", "2003", "-", "Apr", "Sun>=1", ["0", "0", "0", "s"], "60", "D"],
        ["2004", "only", "-", "Mar", "lastSun", ["0", "0", "0", "s"], "60", "D"],
        ["2006", "2010", "-", "Oct", "lastSun", ["0", "0", "0", "s"], "0", "S"],
        ["2007", "only", "-", "Mar", "Sun>=8", ["0", "0", "0", "s"], "60", "D"],
        ["2008", "only", "-", "Mar", "Sun>=15", ["0", "0", "0", "s"], "60", "D"],
        ["2009", "2010", "-", "Mar", "Sun>=8", ["0", "0", "0", "s"], "60", "D"],
        ["2011", "only", "-", "Mar", "Sun>=15", ["0", "0", "0", "s"], "60", "D"],
        ["2011", "only", "-", "Nov", "13", ["0", "0", "0", "s"], "0", "S"],
        ["2012", "only", "-", "Apr", "1", ["0", "0", "0", "s"], "60", "D"],
        ["2012", "max", "-", "Nov", "Sun>=1", ["0", "0", "0", "s"], "0", "S"],
        ["2013", "max", "-", "Mar", "Sun>=8", ["0", "0", "0", "s"], "60", "D"]
    ],
    "DR": [
        ["1966", "only", "-", "Oct", "30", ["0", "0", "0"], "60", "D"],
        ["1967", "only", "-", "Feb", "28", ["0", "0", "0"], "0", "S"],
        ["1969", "1973", "-", "Oct", "lastSun", ["0", "0", "0"], "30", "HD"],
        ["1970", "only", "-", "Feb", "21", ["0", "0", "0"], "0", "S"],
        ["1971", "only", "-", "Jan", "20", ["0", "0", "0"], "0", "S"],
        ["1972", "1974", "-", "Jan", "21", ["0", "0", "0"], "0", "S"]
    ],
    "Salv": [
        ["1987", "1988", "-", "May", "Sun>=1", ["0", "0", "0"], "60", "D"],
        ["1987", "1988", "-", "Sep", "lastSun", ["0", "0", "0"], "0", "S"]
    ],
    "Guat": [
        ["1973", "only", "-", "Nov", "25", ["0", "0", "0"], "60", "D"],
        ["1974", "only", "-", "Feb", "24", ["0", "0", "0"], "0", "S"],
        ["1983", "only", "-", "May", "21", ["0", "0", "0"], "60", "D"],
        ["1983", "only", "-", "Sep", "22", ["0", "0", "0"], "0", "S"],
        ["1991", "only", "-", "Mar", "23", ["0", "0", "0"], "60", "D"],
        ["1991", "only", "-", "Sep", "7", ["0", "0", "0"], "0", "S"],
        ["2006", "only", "-", "Apr", "30", ["0", "0", "0"], "60", "D"],
        ["2006", "only", "-", "Oct", "1", ["0", "0", "0"], "0", "S"]
    ],
    "Haiti": [
        ["1983", "only", "-", "May", "8", ["0", "0", "0"], "60", "D"],
        ["1984", "1987", "-", "Apr", "lastSun", ["0", "0", "0"], "60", "D"],
        ["1983", "1987", "-", "Oct", "lastSun", ["0", "0", "0"], "0", "S"],
        ["1988", "1997", "-", "Apr", "Sun>=1", ["1", "0", "0", "s"], "60", "D"],
        ["1988", "1997", "-", "Oct", "lastSun", ["1", "0", "0", "s"], "0", "S"],
        ["2005", "2006", "-", "Apr", "Sun>=1", ["0", "0", "0"], "60", "D"],
        ["2005", "2006", "-", "Oct", "lastSun", ["0", "0", "0"], "0", "S"],
        ["2012", "max", "-", "Mar", "Sun>=8", ["2", "0", "0"], "60", "D"],
        ["2012", "max", "-", "Nov", "Sun>=1", ["2", "0", "0"], "0", "S"]
    ],
    "Hond": [
        ["1987", "1988", "-", "May", "Sun>=1", ["0", "0", "0"], "60", "D"],
        ["1987", "1988", "-", "Sep", "lastSun", ["0", "0", "0"], "0", "S"],
        ["2006", "only", "-", "May", "Sun>=1", ["0", "0", "0"], "60", "D"],
        ["2006", "only", "-", "Aug", "Mon>=1", ["0", "0", "0"], "0", "S"]
    ],
    "Nic": [
        ["1979", "1980", "-", "Mar", "Sun>=16", ["0", "0", "0"], "60", "D"],
        ["1979", "1980", "-", "Jun", "Mon>=23", ["0", "0", "0"], "0", "S"],
        ["2005", "only", "-", "Apr", "10", ["0", "0", "0"], "60", "D"],
        ["2005", "only", "-", "Oct", "Sun>=1", ["0", "0", "0"], "0", "S"],
        ["2006", "only", "-", "Apr", "30", ["2", "0", "0"], "60", "D"],
        ["2006", "only", "-", "Oct", "Sun>=1", ["1", "0", "0"], "0", "S"]
    ],
    "Arg": [
        ["1930", "only", "-", "Dec", "1", ["0", "0", "0"], "60", "S"],
        ["1931", "only", "-", "Apr", "1", ["0", "0", "0"], "0", "-"],
        ["1931", "only", "-", "Oct", "15", ["0", "0", "0"], "60", "S"],
        ["1932", "1940", "-", "Mar", "1", ["0", "0", "0"], "0", "-"],
        ["1932", "1939", "-", "Nov", "1", ["0", "0", "0"], "60", "S"],
        ["1940", "only", "-", "Jul", "1", ["0", "0", "0"], "60", "S"],
        ["1941", "only", "-", "Jun", "15", ["0", "0", "0"], "0", "-"],
        ["1941", "only", "-", "Oct", "15", ["0", "0", "0"], "60", "S"],
        ["1943", "only", "-", "Aug", "1", ["0", "0", "0"], "0", "-"],
        ["1943", "only", "-", "Oct", "15", ["0", "0", "0"], "60", "S"],
        ["1946", "only", "-", "Mar", "1", ["0", "0", "0"], "0", "-"],
        ["1946", "only", "-", "Oct", "1", ["0", "0", "0"], "60", "S"],
        ["1963", "only", "-", "Oct", "1", ["0", "0", "0"], "0", "-"],
        ["1963", "only", "-", "Dec", "15", ["0", "0", "0"], "60", "S"],
        ["1964", "1966", "-", "Mar", "1", ["0", "0", "0"], "0", "-"],
        ["1964", "1966", "-", "Oct", "15", ["0", "0", "0"], "60", "S"],
        ["1967", "only", "-", "Apr", "2", ["0", "0", "0"], "0", "-"],
        ["1967", "1968", "-", "Oct", "Sun>=1", ["0", "0", "0"], "60", "S"],
        ["1968", "1969", "-", "Apr", "Sun>=1", ["0", "0", "0"], "0", "-"],
        ["1974", "only", "-", "Jan", "23", ["0", "0", "0"], "60", "S"],
        ["1974", "only", "-", "May", "1", ["0", "0", "0"], "0", "-"],
        ["1988", "only", "-", "Dec", "1", ["0", "0", "0"], "60", "S"],
        ["1989", "1993", "-", "Mar", "Sun>=1", ["0", "0", "0"], "0", "-"],
        ["1989", "1992", "-", "Oct", "Sun>=15", ["0", "0", "0"], "60", "S"],
        ["1999", "only", "-", "Oct", "Sun>=1", ["0", "0", "0"], "60", "S"],
        ["2000", "only", "-", "Mar", "3", ["0", "0", "0"], "0", "-"],
        ["2007", "only", "-", "Dec", "30", ["0", "0", "0"], "60", "S"],
        ["2008", "2009", "-", "Mar", "Sun>=15", ["0", "0", "0"], "0", "-"],
        ["2008", "only", "-", "Oct", "Sun>=15", ["0", "0", "0"], "60", "S"]
    ],
    "SanLuis": [
        ["2008", "2009", "-", "Mar", "Sun>=8", ["0", "0", "0"], "0", "-"],
        ["2007", "2008", "-", "Oct", "Sun>=8", ["0", "0", "0"], "60", "S"]
    ],
    "Brazil": [
        ["1931", "only", "-", "Oct", "3", ["11", "0", "0"], "60", "S"],
        ["1932", "1933", "-", "Apr", "1", ["0", "0", "0"], "0", "-"],
        ["1932", "only", "-", "Oct", "3", ["0", "0", "0"], "60", "S"],
        ["1949", "1952", "-", "Dec", "1", ["0", "0", "0"], "60", "S"],
        ["1950", "only", "-", "Apr", "16", ["1", "0", "0"], "0", "-"],
        ["1951", "1952", "-", "Apr", "1", ["0", "0", "0"], "0", "-"],
        ["1953", "only", "-", "Mar", "1", ["0", "0", "0"], "0", "-"],
        ["1963", "only", "-", "Dec", "9", ["0", "0", "0"], "60", "S"],
        ["1964", "only", "-", "Mar", "1", ["0", "0", "0"], "0", "-"],
        ["1965", "only", "-", "Jan", "31", ["0", "0", "0"], "60", "S"],
        ["1965", "only", "-", "Mar", "31", ["0", "0", "0"], "0", "-"],
        ["1965", "only", "-", "Dec", "1", ["0", "0", "0"], "60", "S"],
        ["1966", "1968", "-", "Mar", "1", ["0", "0", "0"], "0", "-"],
        ["1966", "1967", "-", "Nov", "1", ["0", "0", "0"], "60", "S"],
        ["1985", "only", "-", "Nov", "2", ["0", "0", "0"], "60", "S"],
        ["1986", "only", "-", "Mar", "15", ["0", "0", "0"], "0", "-"],
        ["1986", "only", "-", "Oct", "25", ["0", "0", "0"], "60", "S"],
        ["1987", "only", "-", "Feb", "14", ["0", "0", "0"], "0", "-"],
        ["1987", "only", "-", "Oct", "25", ["0", "0", "0"], "60", "S"],
        ["1988", "only", "-", "Feb", "7", ["0", "0", "0"], "0", "-"],
        ["1988", "only", "-", "Oct", "16", ["0", "0", "0"], "60", "S"],
        ["1989", "only", "-", "Jan", "29", ["0", "0", "0"], "0", "-"],
        ["1989", "only", "-", "Oct", "15", ["0", "0", "0"], "60", "S"],
        ["1990", "only", "-", "Feb", "11", ["0", "0", "0"], "0", "-"],
        ["1990", "only", "-", "Oct", "21", ["0", "0", "0"], "60", "S"],
        ["1991", "only", "-", "Feb", "17", ["0", "0", "0"], "0", "-"],
        ["1991", "only", "-", "Oct", "20", ["0", "0", "0"], "60", "S"],
        ["1992", "only", "-", "Feb", "9", ["0", "0", "0"], "0", "-"],
        ["1992", "only", "-", "Oct", "25", ["0", "0", "0"], "60", "S"],
        ["1993", "only", "-", "Jan", "31", ["0", "0", "0"], "0", "-"],
        ["1993", "1995", "-", "Oct", "Sun>=11", ["0", "0", "0"], "60", "S"],
        ["1994", "1995", "-", "Feb", "Sun>=15", ["0", "0", "0"], "0", "-"],
        ["1996", "only", "-", "Feb", "11", ["0", "0", "0"], "0", "-"],
        ["1996", "only", "-", "Oct", "6", ["0", "0", "0"], "60", "S"],
        ["1997", "only", "-", "Feb", "16", ["0", "0", "0"], "0", "-"],
        ["1997", "only", "-", "Oct", "6", ["0", "0", "0"], "60", "S"],
        ["1998", "only", "-", "Mar", "1", ["0", "0", "0"], "0", "-"],
        ["1998", "only", "-", "Oct", "11", ["0", "0", "0"], "60", "S"],
        ["1999", "only", "-", "Feb", "21", ["0", "0", "0"], "0", "-"],
        ["1999", "only", "-", "Oct", "3", ["0", "0", "0"], "60", "S"],
        ["2000", "only", "-", "Feb", "27", ["0", "0", "0"], "0", "-"],
        ["2000", "2001", "-", "Oct", "Sun>=8", ["0", "0", "0"], "60", "S"],
        ["2001", "2006", "-", "Feb", "Sun>=15", ["0", "0", "0"], "0", "-"],
        ["2002", "only", "-", "Nov", "3", ["0", "0", "0"], "60", "S"],
        ["2003", "only", "-", "Oct", "19", ["0", "0", "0"], "60", "S"],
        ["2004", "only", "-", "Nov", "2", ["0", "0", "0"], "60", "S"],
        ["2005", "only", "-", "Oct", "16", ["0", "0", "0"], "60", "S"],
        ["2006", "only", "-", "Nov", "5", ["0", "0", "0"], "60", "S"],
        ["2007", "only", "-", "Feb", "25", ["0", "0", "0"], "0", "-"],
        ["2007", "only", "-", "Oct", "Sun>=8", ["0", "0", "0"], "60", "S"],
        ["2008", "max", "-", "Oct", "Sun>=15", ["0", "0", "0"], "60", "S"],
        ["2008", "2011", "-", "Feb", "Sun>=15", ["0", "0", "0"], "0", "-"],
        ["2012", "only", "-", "Feb", "Sun>=22", ["0", "0", "0"], "0", "-"],
        ["2013", "2014", "-", "Feb", "Sun>=15", ["0", "0", "0"], "0", "-"],
        ["2015", "only", "-", "Feb", "Sun>=22", ["0", "0", "0"], "0", "-"],
        ["2016", "2022", "-", "Feb", "Sun>=15", ["0", "0", "0"], "0", "-"],
        ["2023", "only", "-", "Feb", "Sun>=22", ["0", "0", "0"], "0", "-"],
        ["2024", "2025", "-", "Feb", "Sun>=15", ["0", "0", "0"], "0", "-"],
        ["2026", "only", "-", "Feb", "Sun>=22", ["0", "0", "0"], "0", "-"],
        ["2027", "2033", "-", "Feb", "Sun>=15", ["0", "0", "0"], "0", "-"],
        ["2034", "only", "-", "Feb", "Sun>=22", ["0", "0", "0"], "0", "-"],
        ["2035", "2036", "-", "Feb", "Sun>=15", ["0", "0", "0"], "0", "-"],
        ["2037", "only", "-", "Feb", "Sun>=22", ["0", "0", "0"], "0", "-"],
        ["2038", "max", "-", "Feb", "Sun>=15", ["0", "0", "0"], "0", "-"]
    ],
    "Chile": [
        ["1927", "1932", "-", "Sep", "1", ["0", "0", "0"], "60", "S"],
        ["1928", "1932", "-", "Apr", "1", ["0", "0", "0"], "0", "-"],
        ["1942", "only", "-", "Jun", "1", ["4", "0", "0", "u"], "0", "-"],
        ["1942", "only", "-", "Aug", "1", ["5", "0", "0", "u"], "60", "S"],
        ["1946", "only", "-", "Jul", "15", ["4", "0", "0", "u"], "60", "S"],
        ["1946", "only", "-", "Sep", "1", ["3", "0", "0", "u"], "0", "-"],
        ["1947", "only", "-", "Apr", "1", ["4", "0", "0", "u"], "0", "-"],
        ["1968", "only", "-", "Nov", "3", ["4", "0", "0", "u"], "60", "S"],
        ["1969", "only", "-", "Mar", "30", ["3", "0", "0", "u"], "0", "-"],
        ["1969", "only", "-", "Nov", "23", ["4", "0", "0", "u"], "60", "S"],
        ["1970", "only", "-", "Mar", "29", ["3", "0", "0", "u"], "0", "-"],
        ["1971", "only", "-", "Mar", "14", ["3", "0", "0", "u"], "0", "-"],
        ["1970", "1972", "-", "Oct", "Sun>=9", ["4", "0", "0", "u"], "60", "S"],
        ["1972", "1986", "-", "Mar", "Sun>=9", ["3", "0", "0", "u"], "0", "-"],
        ["1973", "only", "-", "Sep", "30", ["4", "0", "0", "u"], "60", "S"],
        ["1974", "1987", "-", "Oct", "Sun>=9", ["4", "0", "0", "u"], "60", "S"],
        ["1987", "only", "-", "Apr", "12", ["3", "0", "0", "u"], "0", "-"],
        ["1988", "1989", "-", "Mar", "Sun>=9", ["3", "0", "0", "u"], "0", "-"],
        ["1988", "only", "-", "Oct", "Sun>=1", ["4", "0", "0", "u"], "60", "S"],
        ["1989", "only", "-", "Oct", "Sun>=9", ["4", "0", "0", "u"], "60", "S"],
        ["1990", "only", "-", "Mar", "18", ["3", "0", "0", "u"], "0", "-"],
        ["1990", "only", "-", "Sep", "16", ["4", "0", "0", "u"], "60", "S"],
        ["1991", "1996", "-", "Mar", "Sun>=9", ["3", "0", "0", "u"], "0", "-"],
        ["1991", "1997", "-", "Oct", "Sun>=9", ["4", "0", "0", "u"], "60", "S"],
        ["1997", "only", "-", "Mar", "30", ["3", "0", "0", "u"], "0", "-"],
        ["1998", "only", "-", "Mar", "Sun>=9", ["3", "0", "0", "u"], "0", "-"],
        ["1998", "only", "-", "Sep", "27", ["4", "0", "0", "u"], "60", "S"],
        ["1999", "only", "-", "Apr", "4", ["3", "0", "0", "u"], "0", "-"],
        ["1999", "2010", "-", "Oct", "Sun>=9", ["4", "0", "0", "u"], "60", "S"],
        ["2000", "2007", "-", "Mar", "Sun>=9", ["3", "0", "0", "u"], "0", "-"],
        ["2008", "only", "-", "Mar", "30", ["3", "0", "0", "u"], "0", "-"],
        ["2009", "only", "-", "Mar", "Sun>=9", ["3", "0", "0", "u"], "0", "-"],
        ["2010", "only", "-", "Apr", "Sun>=1", ["3", "0", "0", "u"], "0", "-"],
        ["2011", "only", "-", "May", "Sun>=2", ["3", "0", "0", "u"], "0", "-"],
        ["2011", "only", "-", "Aug", "Sun>=16", ["4", "0", "0", "u"], "60", "S"],
        ["2012", "max", "-", "Apr", "Sun>=23", ["3", "0", "0", "u"], "0", "-"],
        ["2012", "max", "-", "Sep", "Sun>=2", ["4", "0", "0", "u"], "60", "S"]
    ],
    "CO": [
        ["1992", "only", "-", "May", "3", ["0", "0", "0"], "60", "S"],
        ["1993", "only", "-", "Apr", "4", ["0", "0", "0"], "0", "-"]
    ],
    "Falk": [
        ["1937", "1938", "-", "Sep", "lastSun", ["0", "0", "0"], "60", "S"],
        ["1938", "1942", "-", "Mar", "Sun>=19", ["0", "0", "0"], "0", "-"],
        ["1939", "only", "-", "Oct", "1", ["0", "0", "0"], "60", "S"],
        ["1940", "1942", "-", "Sep", "lastSun", ["0", "0", "0"], "60", "S"],
        ["1943", "only", "-", "Jan", "1", ["0", "0", "0"], "0", "-"],
        ["1983", "only", "-", "Sep", "lastSun", ["0", "0", "0"], "60", "S"],
        ["1984", "1985", "-", "Apr", "lastSun", ["0", "0", "0"], "0", "-"],
        ["1984", "only", "-", "Sep", "16", ["0", "0", "0"], "60", "S"],
        ["1985", "2000", "-", "Sep", "Sun>=9", ["0", "0", "0"], "60", "S"],
        ["1986", "2000", "-", "Apr", "Sun>=16", ["0", "0", "0"], "0", "-"],
        ["2001", "2010", "-", "Apr", "Sun>=15", ["2", "0", "0"], "0", "-"],
        ["2001", "2010", "-", "Sep", "Sun>=1", ["2", "0", "0"], "60", "S"]
    ],
    "Para": [
        ["1975", "1988", "-", "Oct", "1", ["0", "0", "0"], "60", "S"],
        ["1975", "1978", "-", "Mar", "1", ["0", "0", "0"], "0", "-"],
        ["1979", "1991", "-", "Apr", "1", ["0", "0", "0"], "0", "-"],
        ["1989", "only", "-", "Oct", "22", ["0", "0", "0"], "60", "S"],
        ["1990", "only", "-", "Oct", "1", ["0", "0", "0"], "60", "S"],
        ["1991", "only", "-", "Oct", "6", ["0", "0", "0"], "60", "S"],
        ["1992", "only", "-", "Mar", "1", ["0", "0", "0"], "0", "-"],
        ["1992", "only", "-", "Oct", "5", ["0", "0", "0"], "60", "S"],
        ["1993", "only", "-", "Mar", "31", ["0", "0", "0"], "0", "-"],
        ["1993", "1995", "-", "Oct", "1", ["0", "0", "0"], "60", "S"],
        ["1994", "1995", "-", "Feb", "lastSun", ["0", "0", "0"], "0", "-"],
        ["1996", "only", "-", "Mar", "1", ["0", "0", "0"], "0", "-"],
        ["1996", "2001", "-", "Oct", "Sun>=1", ["0", "0", "0"], "60", "S"],
        ["1997", "only", "-", "Feb", "lastSun", ["0", "0", "0"], "0", "-"],
        ["1998", "2001", "-", "Mar", "Sun>=1", ["0", "0", "0"], "0", "-"],
        ["2002", "2004", "-", "Apr", "Sun>=1", ["0", "0", "0"], "0", "-"],
        ["2002", "2003", "-", "Sep", "Sun>=1", ["0", "0", "0"], "60", "S"],
        ["2004", "2009", "-", "Oct", "Sun>=15", ["0", "0", "0"], "60", "S"],
        ["2005", "2009", "-", "Mar", "Sun>=8", ["0", "0", "0"], "0", "-"],
        ["2010", "max", "-", "Oct", "Sun>=1", ["0", "0", "0"], "60", "S"],
        ["2010", "2012", "-", "Apr", "Sun>=8", ["0", "0", "0"], "0", "-"],
        ["2013", "max", "-", "Mar", "Sun>=22", ["0", "0", "0"], "0", "-"]
    ],
    "Peru": [
        ["1938", "only", "-", "Jan", "1", ["0", "0", "0"], "60", "S"],
        ["1938", "only", "-", "Apr", "1", ["0", "0", "0"], "0", "-"],
        ["1938", "1939", "-", "Sep", "lastSun", ["0", "0", "0"], "60", "S"],
        ["1939", "1940", "-", "Mar", "Sun>=24", ["0", "0", "0"], "0", "-"],
        ["1986", "1987", "-", "Jan", "1", ["0", "0", "0"], "60", "S"],
        ["1986", "1987", "-", "Apr", "1", ["0", "0", "0"], "0", "-"],
        ["1990", "only", "-", "Jan", "1", ["0", "0", "0"], "60", "S"],
        ["1990", "only", "-", "Apr", "1", ["0", "0", "0"], "0", "-"],
        ["1994", "only", "-", "Jan", "1", ["0", "0", "0"], "60", "S"],
        ["1994", "only", "-", "Apr", "1", ["0", "0", "0"], "0", "-"]
    ],
    "Uruguay": [
        ["1923", "only", "-", "Oct", "2", ["0", "0", "0"], "30", "HS"],
        ["1924", "1926", "-", "Apr", "1", ["0", "0", "0"], "0", "-"],
        ["1924", "1925", "-", "Oct", "1", ["0", "0", "0"], "30", "HS"],
        ["1933", "1935", "-", "Oct", "lastSun", ["0", "0", "0"], "30", "HS"],
        ["1934", "1936", "-", "Mar", "Sat>=25", ["23", "30", "0", "s"], "0", "-"],
        ["1936", "only", "-", "Nov", "1", ["0", "0", "0"], "30", "HS"],
        ["1937", "1941", "-", "Mar", "lastSun", ["0", "0", "0"], "0", "-"],
        ["1937", "1940", "-", "Oct", "lastSun", ["0", "0", "0"], "30", "HS"],
        ["1941", "only", "-", "Aug", "1", ["0", "0", "0"], "30", "HS"],
        ["1942", "only", "-", "Jan", "1", ["0", "0", "0"], "0", "-"],
        ["1942", "only", "-", "Dec", "14", ["0", "0", "0"], "60", "S"],
        ["1943", "only", "-", "Mar", "14", ["0", "0", "0"], "0", "-"],
        ["1959", "only", "-", "May", "24", ["0", "0", "0"], "60", "S"],
        ["1959", "only", "-", "Nov", "15", ["0", "0", "0"], "0", "-"],
        ["1960", "only", "-", "Jan", "17", ["0", "0", "0"], "60", "S"],
        ["1960", "only", "-", "Mar", "6", ["0", "0", "0"], "0", "-"],
        ["1965", "1967", "-", "Apr", "Sun>=1", ["0", "0", "0"], "60", "S"],
        ["1965", "only", "-", "Sep", "26", ["0", "0", "0"], "0", "-"],
        ["1966", "1967", "-", "Oct", "31", ["0", "0", "0"], "0", "-"],
        ["1968", "1970", "-", "May", "27", ["0", "0", "0"], "30", "HS"],
        ["1968", "1970", "-", "Dec", "2", ["0", "0", "0"], "0", "-"],
        ["1972", "only", "-", "Apr", "24", ["0", "0", "0"], "60", "S"],
        ["1972", "only", "-", "Aug", "15", ["0", "0", "0"], "0", "-"],
        ["1974", "only", "-", "Mar", "10", ["0", "0", "0"], "30", "HS"],
        ["1974", "only", "-", "Dec", "22", ["0", "0", "0"], "60", "S"],
        ["1976", "only", "-", "Oct", "1", ["0", "0", "0"], "0", "-"],
        ["1977", "only", "-", "Dec", "4", ["0", "0", "0"], "60", "S"],
        ["1978", "only", "-", "Apr", "1", ["0", "0", "0"], "0", "-"],
        ["1979", "only", "-", "Oct", "1", ["0", "0", "0"], "60", "S"],
        ["1980", "only", "-", "May", "1", ["0", "0", "0"], "0", "-"],
        ["1987", "only", "-", "Dec", "14", ["0", "0", "0"], "60", "S"],
        ["1988", "only", "-", "Mar", "14", ["0", "0", "0"], "0", "-"],
        ["1988", "only", "-", "Dec", "11", ["0", "0", "0"], "60", "S"],
        ["1989", "only", "-", "Mar", "12", ["0", "0", "0"], "0", "-"],
        ["1989", "only", "-", "Oct", "29", ["0", "0", "0"], "60", "S"],
        ["1990", "1992", "-", "Mar", "Sun>=1", ["0", "0", "0"], "0", "-"],
        ["1990", "1991", "-", "Oct", "Sun>=21", ["0", "0", "0"], "60", "S"],
        ["1992", "only", "-", "Oct", "18", ["0", "0", "0"], "60", "S"],
        ["1993", "only", "-", "Feb", "28", ["0", "0", "0"], "0", "-"],
        ["2004", "only", "-", "Sep", "19", ["0", "0", "0"], "60", "S"],
        ["2005", "only", "-", "Mar", "27", ["2", "0", "0"], "0", "-"],
        ["2005", "only", "-", "Oct", "9", ["2", "0", "0"], "60", "S"],
        ["2006", "only", "-", "Mar", "12", ["2", "0", "0"], "0", "-"],
        ["2006", "max", "-", "Oct", "Sun>=1", ["2", "0", "0"], "60", "S"],
        ["2007", "max", "-", "Mar", "Sun>=8", ["2", "0", "0"], "0", "-"]
    ],
    "SystemV": [
        ["NaN", "1973", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["NaN", "1973", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1974", "only", "-", "Jan", "6", ["2", "0", "0"], "60", "D"],
        ["1974", "only", "-", "Nov", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1975", "only", "-", "Feb", "23", ["2", "0", "0"], "60", "D"],
        ["1975", "only", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"],
        ["1976", "max", "-", "Apr", "lastSun", ["2", "0", "0"], "60", "D"],
        ["1976", "max", "-", "Oct", "lastSun", ["2", "0", "0"], "0", "S"]
    ]
};
exports.zones_titles = [
    { "name": "(GMT) Casablanca", "other_zone": "Morocco Standard Time" },
    { "name": "(GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London", "other_zone": "GMT Standard Time" },
    { "name": "(GMT) Monrovia, Reykjavik", "other_zone": "Greenwich Standard Time" },
    { "name": "(GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna", "other_zone": "W. Europe Standard Time" },
    { "name": "(GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague", "other_zone": "Central Europe Standard Time" },
    { "name": "(GMT+01:00) Brussels, Copenhagen, Madrid, Paris", "other_zone": "Romance Standard Time" },
    { "name": "(GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb", "other_zone": "Central European Standard Time" },
    { "name": "(GMT+01:00) West Central Africa", "other_zone": "W. Central Africa Standard Time" },
    { "name": "(GMT+02:00) Amman", "other_zone": "Jordan Standard Time" },
    { "name": "(GMT+02:00) Athens, Bucharest, Istanbul", "other_zone": "GTB Standard Time" },
    { "name": "(GMT+02:00) Beirut", "other_zone": "Middle East Standard Time" },
    { "name": "(GMT+02:00) Cairo", "other_zone": "Egypt Standard Time" },
    { "name": "(GMT+02:00) Harare, Pretoria", "other_zone": "South Africa Standard Time" },
    { "name": "(GMT+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius", "other_zone": "FLE Standard Time" },
    { "name": "(GMT+02:00) Jerusalem", "other_zone": "Israel Standard Time" },
    { "name": "(GMT+02:00) Minsk", "other_zone": "E. Europe Standard Time" },
    { "name": "(GMT+02:00) Windhoek", "other_zone": "Namibia Standard Time" },
    { "name": "(GMT+03:00) Baghdad", "other_zone": "Arabic Standard Time" },
    { "name": "(GMT+03:00) Kuwait, Riyadh", "other_zone": "Arab Standard Time" },
    { "name": "(GMT+03:00) Moscow, St. Petersburg, Volgograd", "other_zone": "Russian Standard Time" },
    { "name": "(GMT+03:00) Nairobi", "other_zone": "E. Africa Standard Time" },
    { "name": "(GMT+03:00) Tbilisi", "other_zone": "Georgian Standard Time" },
    { "name": "(GMT+03:30) Tehran", "other_zone": "Iran Standard Time" },
    { "name": "(GMT+04:00) Abu Dhabi, Muscat", "other_zone": "Arabian Standard Time" },
    { "name": "(GMT+04:00) Baku", "other_zone": "Azerbaijan Standard Time" },
    { "name": "(GMT+04:00) Port Louis", "other_zone": "Mauritius Standard Time" },
    { "name": "(GMT+04:00) Yerevan", "other_zone": "Caucasus Standard Time" },
    { "name": "(GMT+04:30) Kabul", "other_zone": "Afghanistan Standard Time" },
    { "name": "(GMT+05:00) Ekaterinburg", "other_zone": "Ekaterinburg Standard Time" },
    { "name": "(GMT+05:00) Islamabad, Karachi", "other_zone": "Pakistan Standard Time" },
    { "name": "(GMT+05:00) Tashkent", "other_zone": "West Asia Standard Time" },
    { "name": "(GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi", "other_zone": "India Standard Time" },
    { "name": "(GMT+05:30) Sri Jayawardenepura", "other_zone": "Sri Lanka Standard Time" },
    { "name": "(GMT+05:45) Kathmandu", "other_zone": "Nepal Standard Time" },
    { "name": "(GMT+06:00) Almaty, Novosibirsk", "other_zone": "N. Central Asia Standard Time" },
    { "name": "(GMT+06:00) Astana, Dhaka", "other_zone": "Central Asia Standard Time" },
    { "name": "(GMT+06:30) Yangon (Rangoon)", "other_zone": "Myanmar Standard Time" },
    { "name": "(GMT+07:00) Bangkok, Hanoi, Jakarta", "other_zone": "SE Asia Standard Time" },
    { "name": "(GMT+07:00) Krasnoyarsk", "other_zone": "North Asia Standard Time" },
    { "name": "(GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi", "other_zone": "China Standard Time" },
    { "name": "(GMT+08:00) Irkutsk, Ulaan Bataar", "other_zone": "North Asia East Standard Time" },
    { "name": "(GMT+08:00) Kuala Lumpur, Singapore", "other_zone": "Singapore Standard Time" },
    { "name": "(GMT+08:00) Perth", "other_zone": "W. Australia Standard Time" },
    { "name": "(GMT+08:00) Taipei", "other_zone": "Taipei Standard Time" },
    { "name": "(GMT+09:00) Osaka, Sapporo, Tokyo", "other_zone": "Tokyo Standard Time" },
    { "name": "(GMT+09:00) Seoul", "other_zone": "Korea Standard Time" },
    { "name": "(GMT+09:00) Yakutsk", "other_zone": "Yakutsk Standard Time" },
    { "name": "(GMT+09:30) Adelaide", "other_zone": "Cen. Australia Standard Time" },
    { "name": "(GMT+09:30) Darwin", "other_zone": "AUS Central Standard Time" },
    { "name": "(GMT+10:00) Brisbane", "other_zone": "E. Australia Standard Time" },
    { "name": "(GMT+10:00) Canberra, Melbourne, Sydney", "other_zone": "AUS Eastern Standard Time" },
    { "name": "(GMT+10:00) Guam, Port Moresby", "other_zone": "West Pacific Standard Time" },
    { "name": "(GMT+10:00) Hobart", "other_zone": "Tasmania Standard Time" },
    { "name": "(GMT+10:00) Vladivostok", "other_zone": "Vladivostok Standard Time" },
    { "name": "(GMT+11:00) Magadan, Solomon Is., New Caledonia", "other_zone": "Central Pacific Standard Time" },
    { "name": "(GMT+12:00) Auckland, Wellington", "other_zone": "New Zealand Standard Time" },
    { "name": "(GMT+12:00) Fiji, Kamchatka, Marshall Is.", "other_zone": "Fiji Standard Time" },
    { "name": "(GMT+13:00) Nuku'alofa", "other_zone": "Tonga Standard Time" },
    { "name": "(GMT-01:00) Azores", "other_zone": "Azores Standard Time" },
    { "name": "(GMT-01:00) Cape Verde Is.", "other_zone": "Cape Verde Standard Time" },
    { "name": "(GMT-03:00) Brasilia", "other_zone": "E. South America Standard Time" },
    { "name": "(GMT-03:00) Buenos Aires", "other_zone": "Argentina Standard Time" },
    { "name": "(GMT-03:00) Georgetown", "other_zone": "SA Eastern Standard Time" },
    { "name": "(GMT-03:00) Greenland", "other_zone": "Greenland Standard Time" },
    { "name": "(GMT-03:00) Montevideo", "other_zone": "Montevideo Standard Time" },
    { "name": "(GMT-03:30) Newfoundland", "other_zone": "Newfoundland Standard Time" },
    { "name": "(GMT-04:00) Atlantic Time (Canada)", "other_zone": "Atlantic Standard Time" },
    { "name": "(GMT-04:00) La Paz", "other_zone": "SA Western Standard Time" },
    { "name": "(GMT-04:00) Manaus", "other_zone": "Central Brazilian Standard Time" },
    { "name": "(GMT-04:00) Santiago", "other_zone": "Pacific SA Standard Time" },
    { "name": "(GMT-04:30) Caracas", "other_zone": "Venezuela Standard Time" },
    { "name": "(GMT-05:00) Bogota, Lima, Quito, Rio Branco", "other_zone": "SA Pacific Standard Time" },
    { "name": "(GMT-05:00) Eastern Time (US & Canada)", "other_zone": "Eastern Standard Time" },
    { "name": "(GMT-05:00) Indiana (East)", "other_zone": "US Eastern Standard Time" },
    { "name": "(GMT-06:00) Central America", "other_zone": "Central America Standard Time" },
    { "name": "(GMT-06:00) Central Time (US & Canada)", "other_zone": "Central Standard Time" },
    { "name": "(GMT-06:00) Guadalajara, Mexico City, Monterrey", "other_zone": "Central Standard Time (Mexico)" },
    { "name": "(GMT-06:00) Saskatchewan", "other_zone": "Canada Central Standard Time" },
    { "name": "(GMT-07:00) Arizona", "other_zone": "US Mountain Standard Time" },
    { "name": "(GMT-07:00) Chihuahua, La Paz, Mazatlan", "other_zone": "Mountain Standard Time (Mexico)" },
    { "name": "(GMT-07:00) Mountain Time (US & Canada)", "other_zone": "Mountain Standard Time" },
    { "name": "(GMT-08:00) Pacific Time (US & Canada)", "other_zone": "Pacific Standard Time" },
    { "name": "(GMT-08:00) Tijuana, Baja California", "other_zone": "Pacific Standard Time (Mexico)" },
    { "name": "(GMT-09:00) Alaska", "other_zone": "Alaskan Standard Time" },
    { "name": "(GMT-10:00) Hawaii", "other_zone": "Hawaiian Standard Time" },
    { "name": "(GMT-11:00) Midway Island, Samoa", "other_zone": "Samoa Standard Time" },
    { "name": "(GMT-12:00) International Date Line West", "other_zone": "Dateline Standard Time" }
];
exports.windows_zones = [
    { "other_zone": "Dateline Standard Time", "zone": "Etc/GMT+12", "territory": "GMT+12" },
    { "other_zone": "UTC-11", "zone": "Etc/GMT+11", "territory": "GMT+11" },
    { "other_zone": "UTC-11", "zone": "Pacific/Pago_Pago", "territory": "Pago Pago" },
    { "other_zone": "UTC-11", "zone": "Pacific/Niue", "territory": "Niue" },
    { "other_zone": "UTC-11", "zone": "Pacific/Midway", "territory": "Midway" },
    { "other_zone": "Hawaiian Standard Time", "zone": "Pacific/Honolulu", "territory": "Honolulu" },
    { "other_zone": "Hawaiian Standard Time", "zone": "Pacific/Rarotonga", "territory": "Rarotonga" },
    { "other_zone": "Hawaiian Standard Time", "zone": "Pacific/Tahiti", "territory": "Tahiti" },
    { "other_zone": "Hawaiian Standard Time", "zone": "Pacific/Johnston", "territory": "Johnston" },
    { "other_zone": "Hawaiian Standard Time", "zone": "Etc/GMT+10", "territory": "GMT+10" },
    { "other_zone": "Alaskan Standard Time", "zone": "America/Anchorage", "territory": "Anchorage" },
    { "other_zone": "Alaskan Standard Time", "zone": "America/Juneau", "territory": "Juneau" },
    { "other_zone": "Alaskan Standard Time", "zone": "America/Nome", "territory": "Nome" },
    { "other_zone": "Alaskan Standard Time", "zone": "America/Sitka", "territory": "Sitka" },
    { "other_zone": "Alaskan Standard Time", "zone": "America/Yakutat", "territory": "Yakutat" },
    { "other_zone": "Pacific Standard Time (Mexico)", "zone": "America/Santa_Isabel", "territory": "Santa Isabel" },
    { "other_zone": "Pacific Standard Time", "zone": "America/Los_Angeles", "territory": "Los Angeles" },
    { "other_zone": "Pacific Standard Time", "zone": "America/Vancouver", "territory": "Vancouver" },
    { "other_zone": "Pacific Standard Time", "zone": "America/Dawson", "territory": "Dawson" },
    { "other_zone": "Pacific Standard Time", "zone": "America/Whitehorse", "territory": "Whitehorse" },
    { "other_zone": "Pacific Standard Time", "zone": "America/Tijuana", "territory": "Tijuana" },
    { "other_zone": "US Mountain Standard Time", "zone": "America/Phoenix", "territory": "Phoenix" },
    { "other_zone": "US Mountain Standard Time", "zone": "America/Dawson_Creek", "territory": "Dawson Creek" },
    { "other_zone": "US Mountain Standard Time", "zone": "America/Creston", "territory": "Creston" },
    { "other_zone": "US Mountain Standard Time", "zone": "America/Hermosillo", "territory": "Hermosillo" },
    { "other_zone": "US Mountain Standard Time", "zone": "Etc/GMT+7", "territory": "GMT+7" },
    { "other_zone": "Mountain Standard Time (Mexico)", "zone": "America/Chihuahua", "territory": "Chihuahua" },
    { "other_zone": "Mountain Standard Time (Mexico)", "zone": "America/Mazatlan", "territory": "Mazatlan" },
    { "other_zone": "Mountain Standard Time", "zone": "America/Denver", "territory": "Denver" },
    { "other_zone": "Mountain Standard Time", "zone": "America/Edmonton", "territory": "Edmonton" },
    { "other_zone": "Mountain Standard Time", "zone": "America/Cambridge_Bay", "territory": "Cambridge Bay" },
    { "other_zone": "Mountain Standard Time", "zone": "America/Inuvik", "territory": "Inuvik" },
    { "other_zone": "Mountain Standard Time", "zone": "America/Yellowknife", "territory": "Yellowknife" },
    { "other_zone": "Mountain Standard Time", "zone": "America/Ojinaga", "territory": "Ojinaga" },
    { "other_zone": "Mountain Standard Time", "zone": "America/Boise", "territory": "Boise" },
    { "other_zone": "Mountain Standard Time", "zone": "America/Shiprock", "territory": "Shiprock" },
    { "other_zone": "Central America Standard Time", "zone": "America/Guatemala", "territory": "Guatemala" },
    { "other_zone": "Central America Standard Time", "zone": "America/Belize", "territory": "Belize" },
    { "other_zone": "Central America Standard Time", "zone": "America/Costa_Rica", "territory": "Costa Rica" },
    { "other_zone": "Central America Standard Time", "zone": "Pacific/Galapagos", "territory": "Galapagos" },
    { "other_zone": "Central America Standard Time", "zone": "America/Tegucigalpa", "territory": "Tegucigalpa" },
    { "other_zone": "Central America Standard Time", "zone": "America/Managua", "territory": "Managua" },
    { "other_zone": "Central America Standard Time", "zone": "America/El_Salvador", "territory": "El Salvador" },
    { "other_zone": "Central America Standard Time", "zone": "Etc/GMT+6", "territory": "GMT+6" },
    { "other_zone": "Central Standard Time", "zone": "America/Chicago", "territory": "Chicago" },
    { "other_zone": "Central Standard Time", "zone": "America/Winnipeg", "territory": "Winnipeg" },
    { "other_zone": "Central Standard Time", "zone": "America/Rainy_River", "territory": "Rainy River" },
    { "other_zone": "Central Standard Time", "zone": "America/Rankin_Inlet", "territory": "Rankin Inlet" },
    { "other_zone": "Central Standard Time", "zone": "America/Resolute", "territory": "Resolute" },
    { "other_zone": "Central Standard Time", "zone": "America/Matamoros", "territory": "Matamoros" },
    { "other_zone": "Central Standard Time", "zone": "America/Indiana/Knox", "territory": "Indiana" },
    { "other_zone": "Central Standard Time", "zone": "America/Indiana/Tell_City", "territory": "Indiana" },
    { "other_zone": "Central Standard Time", "zone": "America/Menominee", "territory": "Menominee" },
    { "other_zone": "Central Standard Time", "zone": "America/North_Dakota/Beulah", "territory": "North Dakota" },
    { "other_zone": "Central Standard Time", "zone": "America/North_Dakota/Center", "territory": "North Dakota" },
    { "other_zone": "Central Standard Time", "zone": "America/North_Dakota/New_Salem", "territory": "North Dakota" },
    { "other_zone": "Central Standard Time (Mexico)", "zone": "America/Mexico_City", "territory": "Mexico City" },
    { "other_zone": "Central Standard Time (Mexico)", "zone": "America/Bahia_Banderas", "territory": "Bahia Banderas" },
    { "other_zone": "Central Standard Time (Mexico)", "zone": "America/Cancun", "territory": "Cancun" },
    { "other_zone": "Central Standard Time (Mexico)", "zone": "America/Merida", "territory": "Merida" },
    { "other_zone": "Central Standard Time (Mexico)", "zone": "America/Monterrey", "territory": "Monterrey" },
    { "other_zone": "Canada Central Standard Time", "zone": "America/Regina", "territory": "Regina" },
    { "other_zone": "Canada Central Standard Time", "zone": "America/Swift_Current", "territory": "Swift Current" },
    { "other_zone": "SA Pacific Standard Time", "zone": "America/Bogota", "territory": "Bogota" },
    { "other_zone": "SA Pacific Standard Time", "zone": "America/Coral_Harbour", "territory": "Coral Harbour" },
    { "other_zone": "SA Pacific Standard Time", "zone": "America/Guayaquil", "territory": "Guayaquil" },
    { "other_zone": "SA Pacific Standard Time", "zone": "America/Port-au-Prince", "territory": "Port-au-Prince" },
    { "other_zone": "SA Pacific Standard Time", "zone": "America/Jamaica", "territory": "Jamaica" },
    { "other_zone": "SA Pacific Standard Time", "zone": "America/Cayman", "territory": "Cayman" },
    { "other_zone": "SA Pacific Standard Time", "zone": "America/Panama", "territory": "Panama" },
    { "other_zone": "SA Pacific Standard Time", "zone": "America/Lima", "territory": "Lima" },
    { "other_zone": "SA Pacific Standard Time", "zone": "Etc/GMT+5", "territory": "GMT+5" },
    { "other_zone": "Eastern Standard Time", "zone": "America/New_York", "territory": "New York" },
    { "other_zone": "Eastern Standard Time", "zone": "America/Nassau", "territory": "Nassau" },
    { "other_zone": "Eastern Standard Time", "zone": "America/Toronto", "territory": "Toronto" },
    { "other_zone": "Eastern Standard Time", "zone": "America/Iqaluit", "territory": "Iqaluit" },
    { "other_zone": "Eastern Standard Time", "zone": "America/Montreal", "territory": "Montreal" },
    { "other_zone": "Eastern Standard Time", "zone": "America/Nipigon", "territory": "Nipigon" },
    { "other_zone": "Eastern Standard Time", "zone": "America/Pangnirtung", "territory": "Pangnirtung" },
    { "other_zone": "Eastern Standard Time", "zone": "America/Thunder_Bay", "territory": "Thunder Bay" },
    { "other_zone": "Eastern Standard Time", "zone": "America/Grand_Turk", "territory": "Grand Turk" },
    { "other_zone": "Eastern Standard Time", "zone": "America/Detroit", "territory": "Detroit" },
    { "other_zone": "Eastern Standard Time", "zone": "America/Indiana/Petersburg", "territory": "Indiana" },
    { "other_zone": "Eastern Standard Time", "zone": "America/Indiana/Vincennes", "territory": "Indiana" },
    { "other_zone": "Eastern Standard Time", "zone": "America/Indiana/Winamac", "territory": "Indiana" },
    { "other_zone": "Eastern Standard Time", "zone": "America/Kentucky/Monticello", "territory": "Kentucky" },
    { "other_zone": "Eastern Standard Time", "zone": "America/Louisville", "territory": "Louisville" },
    { "other_zone": "US Eastern Standard Time", "zone": "America/Indianapolis", "territory": "Indianapolis" },
    { "other_zone": "US Eastern Standard Time", "zone": "America/Indiana/Marengo", "territory": "Indiana" },
    { "other_zone": "US Eastern Standard Time", "zone": "America/Indiana/Vevay", "territory": "Indiana" },
    { "other_zone": "Venezuela Standard Time", "zone": "America/Caracas", "territory": "Caracas" },
    { "other_zone": "Paraguay Standard Time", "zone": "America/Asuncion", "territory": "Asuncion" },
    { "other_zone": "Atlantic Standard Time", "zone": "America/Halifax", "territory": "Halifax" },
    { "other_zone": "Atlantic Standard Time", "zone": "Atlantic/Bermuda", "territory": "Bermuda" },
    { "other_zone": "Atlantic Standard Time", "zone": "America/Glace_Bay", "territory": "Glace Bay" },
    { "other_zone": "Atlantic Standard Time", "zone": "America/Goose_Bay", "territory": "Goose Bay" },
    { "other_zone": "Atlantic Standard Time", "zone": "America/Moncton", "territory": "Moncton" },
    { "other_zone": "Atlantic Standard Time", "zone": "America/Thule", "territory": "Thule" },
    { "other_zone": "Central Brazilian Standard Time", "zone": "America/Cuiaba", "territory": "Cuiaba" },
    { "other_zone": "Central Brazilian Standard Time", "zone": "America/Campo_Grande", "territory": "Campo Grande" },
    { "other_zone": "SA Western Standard Time", "zone": "America/La_Paz", "territory": "La Paz" },
    { "other_zone": "SA Western Standard Time", "zone": "America/Antigua", "territory": "Antigua" },
    { "other_zone": "SA Western Standard Time", "zone": "America/Anguilla", "territory": "Anguilla" },
    { "other_zone": "SA Western Standard Time", "zone": "America/Aruba", "territory": "Aruba" },
    { "other_zone": "SA Western Standard Time", "zone": "America/Barbados", "territory": "Barbados" },
    { "other_zone": "SA Western Standard Time", "zone": "America/St_Barthelemy", "territory": "St Barthelemy" },
    { "other_zone": "SA Western Standard Time", "zone": "America/Kralendijk", "territory": "Kralendijk" },
    { "other_zone": "SA Western Standard Time", "zone": "America/Manaus", "territory": "Manaus" },
    { "other_zone": "SA Western Standard Time", "zone": "America/Boa_Vista", "territory": "Boa Vista" },
    { "other_zone": "SA Western Standard Time", "zone": "America/Eirunepe", "territory": "Eirunepe" },
    { "other_zone": "SA Western Standard Time", "zone": "America/Porto_Velho", "territory": "Porto Velho" },
    { "other_zone": "SA Western Standard Time", "zone": "America/Rio_Branco", "territory": "Rio Branco" },
    { "other_zone": "SA Western Standard Time", "zone": "America/Blanc-Sablon", "territory": "Blanc-Sablon" },
    { "other_zone": "SA Western Standard Time", "zone": "America/Curacao", "territory": "Curacao" },
    { "other_zone": "SA Western Standard Time", "zone": "America/Dominica", "territory": "Dominica" },
    { "other_zone": "SA Western Standard Time", "zone": "America/Santo_Domingo", "territory": "Santo Domingo" },
    { "other_zone": "SA Western Standard Time", "zone": "America/Grenada", "territory": "Grenada" },
    { "other_zone": "SA Western Standard Time", "zone": "America/Guadeloupe", "territory": "Guadeloupe" },
    { "other_zone": "SA Western Standard Time", "zone": "America/Guyana", "territory": "Guyana" },
    { "other_zone": "SA Western Standard Time", "zone": "America/St_Kitts", "territory": "St Kitts" },
    { "other_zone": "SA Western Standard Time", "zone": "America/St_Lucia", "territory": "St Lucia" },
    { "other_zone": "SA Western Standard Time", "zone": "America/Marigot", "territory": "Marigot" },
    { "other_zone": "SA Western Standard Time", "zone": "America/Martinique", "territory": "Martinique" },
    { "other_zone": "SA Western Standard Time", "zone": "America/Montserrat", "territory": "Montserrat" },
    { "other_zone": "SA Western Standard Time", "zone": "America/Puerto_Rico", "territory": "Puerto Rico" },
    { "other_zone": "SA Western Standard Time", "zone": "America/Lower_Princes", "territory": "Lower Princes" },
    { "other_zone": "SA Western Standard Time", "zone": "America/Port_of_Spain", "territory": "Port of Spain" },
    { "other_zone": "SA Western Standard Time", "zone": "America/St_Vincent", "territory": "St Vincent" },
    { "other_zone": "SA Western Standard Time", "zone": "America/Tortola", "territory": "Tortola" },
    { "other_zone": "SA Western Standard Time", "zone": "America/St_Thomas", "territory": "St Thomas" },
    { "other_zone": "SA Western Standard Time", "zone": "Etc/GMT+4", "territory": "GMT+4" },
    { "other_zone": "Pacific SA Standard Time", "zone": "America/Santiago", "territory": "Santiago" },
    { "other_zone": "Pacific SA Standard Time", "zone": "Antarctica/Palmer", "territory": "Palmer" },
    { "other_zone": "Newfoundland Standard Time", "zone": "America/St_Johns", "territory": "St Johns" },
    { "other_zone": "E. South America Standard Time", "zone": "America/Sao_Paulo", "territory": "Sao Paulo" },
    { "other_zone": "E. South America Standard Time", "zone": "America/Araguaina", "territory": "Araguaina" },
    { "other_zone": "Argentina Standard Time", "zone": "America/Buenos_Aires", "territory": "Buenos Aires" },
    { "other_zone": "Argentina Standard Time", "zone": "America/Argentina/La_Rioja", "territory": "Argentina" },
    { "other_zone": "Argentina Standard Time", "zone": "America/Argentina/Rio_Gallegos", "territory": "Argentina" },
    { "other_zone": "Argentina Standard Time", "zone": "America/Argentina/Salta", "territory": "Argentina" },
    { "other_zone": "Argentina Standard Time", "zone": "America/Argentina/San_Juan", "territory": "Argentina" },
    { "other_zone": "Argentina Standard Time", "zone": "America/Argentina/San_Luis", "territory": "Argentina" },
    { "other_zone": "Argentina Standard Time", "zone": "America/Argentina/Tucuman", "territory": "Argentina" },
    { "other_zone": "Argentina Standard Time", "zone": "America/Argentina/Ushuaia", "territory": "Argentina" },
    { "other_zone": "Argentina Standard Time", "zone": "America/Catamarca", "territory": "Catamarca" },
    { "other_zone": "Argentina Standard Time", "zone": "America/Cordoba", "territory": "Cordoba" },
    { "other_zone": "Argentina Standard Time", "zone": "America/Jujuy", "territory": "Jujuy" },
    { "other_zone": "Argentina Standard Time", "zone": "America/Mendoza", "territory": "Mendoza" },
    { "other_zone": "SA Eastern Standard Time", "zone": "America/Cayenne", "territory": "Cayenne" },
    { "other_zone": "SA Eastern Standard Time", "zone": "Antarctica/Rothera", "territory": "Rothera" },
    { "other_zone": "SA Eastern Standard Time", "zone": "America/Fortaleza", "territory": "Fortaleza" },
    { "other_zone": "SA Eastern Standard Time", "zone": "America/Belem", "territory": "Belem" },
    { "other_zone": "SA Eastern Standard Time", "zone": "America/Maceio", "territory": "Maceio" },
    { "other_zone": "SA Eastern Standard Time", "zone": "America/Recife", "territory": "Recife" },
    { "other_zone": "SA Eastern Standard Time", "zone": "America/Santarem", "territory": "Santarem" },
    { "other_zone": "SA Eastern Standard Time", "zone": "Atlantic/Stanley", "territory": "Stanley" },
    { "other_zone": "SA Eastern Standard Time", "zone": "America/Paramaribo", "territory": "Paramaribo" },
    { "other_zone": "SA Eastern Standard Time", "zone": "Etc/GMT+3", "territory": "GMT+3" },
    { "other_zone": "Greenland Standard Time", "zone": "America/Godthab", "territory": "Godthab" },
    { "other_zone": "Montevideo Standard Time", "zone": "America/Montevideo", "territory": "Montevideo" },
    { "other_zone": "Bahia Standard Time", "zone": "America/Bahia", "territory": "Bahia" },
    { "other_zone": "UTC-02", "zone": "Etc/GMT+2", "territory": "GMT+2" },
    { "other_zone": "UTC-02", "zone": "America/Noronha", "territory": "Noronha" },
    { "other_zone": "UTC-02", "zone": "Atlantic/South_Georgia", "territory": "South Georgia" },
    { "other_zone": "Azores Standard Time", "zone": "Atlantic/Azores", "territory": "Azores" },
    { "other_zone": "Azores Standard Time", "zone": "America/Scoresbysund", "territory": "Scoresbysund" },
    { "other_zone": "Cape Verde Standard Time", "zone": "Atlantic/Cape_Verde", "territory": "Cape Verde" },
    { "other_zone": "Cape Verde Standard Time", "zone": "Etc/GMT+1", "territory": "GMT+1" },
    { "other_zone": "Morocco Standard Time", "zone": "Africa/Casablanca", "territory": "Casablanca" },
    { "other_zone": "UTC", "zone": "Etc/GMT", "territory": "GMT" },
    { "other_zone": "UTC", "zone": "America/Danmarkshavn", "territory": "Danmarkshavn" },
    { "other_zone": "GMT Standard Time", "zone": "Europe/London", "territory": "London" },
    { "other_zone": "GMT Standard Time", "zone": "Atlantic/Canary", "territory": "Canary" },
    { "other_zone": "GMT Standard Time", "zone": "Atlantic/Faeroe", "territory": "Faeroe" },
    { "other_zone": "GMT Standard Time", "zone": "Europe/Guernsey", "territory": "Guernsey" },
    { "other_zone": "GMT Standard Time", "zone": "Europe/Dublin", "territory": "Dublin" },
    { "other_zone": "GMT Standard Time", "zone": "Europe/Isle_of_Man", "territory": "Isle of Man" },
    { "other_zone": "GMT Standard Time", "zone": "Europe/Jersey", "territory": "Jersey" },
    { "other_zone": "GMT Standard Time", "zone": "Europe/Lisbon", "territory": "Lisbon" },
    { "other_zone": "GMT Standard Time", "zone": "Atlantic/Madeira", "territory": "Madeira" },
    { "other_zone": "Greenwich Standard Time", "zone": "Atlantic/Reykjavik", "territory": "Reykjavik" },
    { "other_zone": "Greenwich Standard Time", "zone": "Africa/Ouagadougou", "territory": "Ouagadougou" },
    { "other_zone": "Greenwich Standard Time", "zone": "Africa/Abidjan", "territory": "Abidjan" },
    { "other_zone": "Greenwich Standard Time", "zone": "Africa/El_Aaiun", "territory": "El Aaiun" },
    { "other_zone": "Greenwich Standard Time", "zone": "Africa/Accra", "territory": "Accra" },
    { "other_zone": "Greenwich Standard Time", "zone": "Africa/Banjul", "territory": "Banjul" },
    { "other_zone": "Greenwich Standard Time", "zone": "Africa/Conakry", "territory": "Conakry" },
    { "other_zone": "Greenwich Standard Time", "zone": "Africa/Bissau", "territory": "Bissau" },
    { "other_zone": "Greenwich Standard Time", "zone": "Africa/Monrovia", "territory": "Monrovia" },
    { "other_zone": "Greenwich Standard Time", "zone": "Africa/Bamako", "territory": "Bamako" },
    { "other_zone": "Greenwich Standard Time", "zone": "Africa/Nouakchott", "territory": "Nouakchott" },
    { "other_zone": "Greenwich Standard Time", "zone": "Atlantic/St_Helena", "territory": "St Helena" },
    { "other_zone": "Greenwich Standard Time", "zone": "Africa/Freetown", "territory": "Freetown" },
    { "other_zone": "Greenwich Standard Time", "zone": "Africa/Dakar", "territory": "Dakar" },
    { "other_zone": "Greenwich Standard Time", "zone": "Africa/Sao_Tome", "territory": "Sao Tome" },
    { "other_zone": "Greenwich Standard Time", "zone": "Africa/Lome", "territory": "Lome" },
    { "other_zone": "W. Europe Standard Time", "zone": "Europe/Berlin", "territory": "Berlin" },
    { "other_zone": "W. Europe Standard Time", "zone": "Europe/Andorra", "territory": "Andorra" },
    { "other_zone": "W. Europe Standard Time", "zone": "Europe/Vienna", "territory": "Vienna" },
    { "other_zone": "W. Europe Standard Time", "zone": "Europe/Zurich", "territory": "Zurich" },
    { "other_zone": "W. Europe Standard Time", "zone": "Europe/Busingen", "territory": "Busingen" },
    { "other_zone": "W. Europe Standard Time", "zone": "Europe/Gibraltar", "territory": "Gibraltar" },
    { "other_zone": "W. Europe Standard Time", "zone": "Europe/Rome", "territory": "Rome" },
    { "other_zone": "W. Europe Standard Time", "zone": "Europe/Vaduz", "territory": "Vaduz" },
    { "other_zone": "W. Europe Standard Time", "zone": "Europe/Luxembourg", "territory": "Luxembourg" },
    { "other_zone": "W. Europe Standard Time", "zone": "Africa/Tripoli", "territory": "Tripoli" },
    { "other_zone": "W. Europe Standard Time", "zone": "Europe/Monaco", "territory": "Monaco" },
    { "other_zone": "W. Europe Standard Time", "zone": "Europe/Malta", "territory": "Malta" },
    { "other_zone": "W. Europe Standard Time", "zone": "Europe/Amsterdam", "territory": "Amsterdam" },
    { "other_zone": "W. Europe Standard Time", "zone": "Europe/Oslo", "territory": "Oslo" },
    { "other_zone": "W. Europe Standard Time", "zone": "Europe/Stockholm", "territory": "Stockholm" },
    { "other_zone": "W. Europe Standard Time", "zone": "Arctic/Longyearbyen", "territory": "Longyearbyen" },
    { "other_zone": "W. Europe Standard Time", "zone": "Europe/San_Marino", "territory": "San Marino" },
    { "other_zone": "W. Europe Standard Time", "zone": "Europe/Vatican", "territory": "Vatican" },
    { "other_zone": "Central Europe Standard Time", "zone": "Europe/Budapest", "territory": "Budapest" },
    { "other_zone": "Central Europe Standard Time", "zone": "Europe/Tirane", "territory": "Tirane" },
    { "other_zone": "Central Europe Standard Time", "zone": "Europe/Prague", "territory": "Prague" },
    { "other_zone": "Central Europe Standard Time", "zone": "Europe/Podgorica", "territory": "Podgorica" },
    { "other_zone": "Central Europe Standard Time", "zone": "Europe/Belgrade", "territory": "Belgrade" },
    { "other_zone": "Central Europe Standard Time", "zone": "Europe/Ljubljana", "territory": "Ljubljana" },
    { "other_zone": "Central Europe Standard Time", "zone": "Europe/Bratislava", "territory": "Bratislava" },
    { "other_zone": "Romance Standard Time", "zone": "Europe/Paris", "territory": "Paris" },
    { "other_zone": "Romance Standard Time", "zone": "Europe/Brussels", "territory": "Brussels" },
    { "other_zone": "Romance Standard Time", "zone": "Europe/Copenhagen", "territory": "Copenhagen" },
    { "other_zone": "Romance Standard Time", "zone": "Europe/Madrid", "territory": "Madrid" },
    { "other_zone": "Romance Standard Time", "zone": "Africa/Ceuta", "territory": "Ceuta" },
    { "other_zone": "Central European Standard Time", "zone": "Europe/Warsaw", "territory": "Warsaw" },
    { "other_zone": "Central European Standard Time", "zone": "Europe/Sarajevo", "territory": "Sarajevo" },
    { "other_zone": "Central European Standard Time", "zone": "Europe/Zagreb", "territory": "Zagreb" },
    { "other_zone": "Central European Standard Time", "zone": "Europe/Skopje", "territory": "Skopje" },
    { "other_zone": "W. Central Africa Standard Time", "zone": "Africa/Lagos", "territory": "Lagos" },
    { "other_zone": "W. Central Africa Standard Time", "zone": "Africa/Luanda", "territory": "Luanda" },
    { "other_zone": "W. Central Africa Standard Time", "zone": "Africa/Porto-Novo", "territory": "Porto-Novo" },
    { "other_zone": "W. Central Africa Standard Time", "zone": "Africa/Kinshasa", "territory": "Kinshasa" },
    { "other_zone": "W. Central Africa Standard Time", "zone": "Africa/Bangui", "territory": "Bangui" },
    { "other_zone": "W. Central Africa Standard Time", "zone": "Africa/Brazzaville", "territory": "Brazzaville" },
    { "other_zone": "W. Central Africa Standard Time", "zone": "Africa/Douala", "territory": "Douala" },
    { "other_zone": "W. Central Africa Standard Time", "zone": "Africa/Algiers", "territory": "Algiers" },
    { "other_zone": "W. Central Africa Standard Time", "zone": "Africa/Libreville", "territory": "Libreville" },
    { "other_zone": "W. Central Africa Standard Time", "zone": "Africa/Malabo", "territory": "Malabo" },
    { "other_zone": "W. Central Africa Standard Time", "zone": "Africa/Niamey", "territory": "Niamey" },
    { "other_zone": "W. Central Africa Standard Time", "zone": "Africa/Ndjamena", "territory": "Ndjamena" },
    { "other_zone": "W. Central Africa Standard Time", "zone": "Africa/Tunis", "territory": "Tunis" },
    { "other_zone": "W. Central Africa Standard Time", "zone": "Etc/GMT-1", "territory": "GMT-1" },
    { "other_zone": "Namibia Standard Time", "zone": "Africa/Windhoek", "territory": "Windhoek" },
    { "other_zone": "GTB Standard Time", "zone": "Europe/Bucharest", "territory": "Bucharest" },
    { "other_zone": "GTB Standard Time", "zone": "Europe/Athens", "territory": "Athens" },
    { "other_zone": "GTB Standard Time", "zone": "Europe/Chisinau", "territory": "Chisinau" },
    { "other_zone": "Middle East Standard Time", "zone": "Asia/Beirut", "territory": "Beirut" },
    { "other_zone": "Egypt Standard Time", "zone": "Africa/Cairo", "territory": "Cairo" },
    { "other_zone": "Egypt Standard Time", "zone": "Asia/Gaza", "territory": "Gaza" },
    { "other_zone": "Egypt Standard Time", "zone": "Asia/Hebron", "territory": "Hebron" },
    { "other_zone": "Syria Standard Time", "zone": "Asia/Damascus", "territory": "Damascus" },
    { "other_zone": "E. Europe Standard Time", "zone": "Asia/Nicosia", "territory": "Nicosia" },
    { "other_zone": "South Africa Standard Time", "zone": "Africa/Johannesburg", "territory": "Johannesburg" },
    { "other_zone": "South Africa Standard Time", "zone": "Africa/Bujumbura", "territory": "Bujumbura" },
    { "other_zone": "South Africa Standard Time", "zone": "Africa/Gaborone", "territory": "Gaborone" },
    { "other_zone": "South Africa Standard Time", "zone": "Africa/Lubumbashi", "territory": "Lubumbashi" },
    { "other_zone": "South Africa Standard Time", "zone": "Africa/Maseru", "territory": "Maseru" },
    { "other_zone": "South Africa Standard Time", "zone": "Africa/Blantyre", "territory": "Blantyre" },
    { "other_zone": "South Africa Standard Time", "zone": "Africa/Maputo", "territory": "Maputo" },
    { "other_zone": "South Africa Standard Time", "zone": "Africa/Kigali", "territory": "Kigali" },
    { "other_zone": "South Africa Standard Time", "zone": "Africa/Mbabane", "territory": "Mbabane" },
    { "other_zone": "South Africa Standard Time", "zone": "Africa/Lusaka", "territory": "Lusaka" },
    { "other_zone": "South Africa Standard Time", "zone": "Africa/Harare", "territory": "Harare" },
    { "other_zone": "South Africa Standard Time", "zone": "Etc/GMT-2", "territory": "GMT-2" },
    { "other_zone": "FLE Standard Time", "zone": "Europe/Kiev", "territory": "Kiev" },
    { "other_zone": "FLE Standard Time", "zone": "Europe/Mariehamn", "territory": "Mariehamn" },
    { "other_zone": "FLE Standard Time", "zone": "Europe/Sofia", "territory": "Sofia" },
    { "other_zone": "FLE Standard Time", "zone": "Europe/Tallinn", "territory": "Tallinn" },
    { "other_zone": "FLE Standard Time", "zone": "Europe/Helsinki", "territory": "Helsinki" },
    { "other_zone": "FLE Standard Time", "zone": "Europe/Vilnius", "territory": "Vilnius" },
    { "other_zone": "FLE Standard Time", "zone": "Europe/Riga", "territory": "Riga" },
    { "other_zone": "FLE Standard Time", "zone": "Europe/Simferopol", "territory": "Simferopol" },
    { "other_zone": "FLE Standard Time", "zone": "Europe/Uzhgorod", "territory": "Uzhgorod" },
    { "other_zone": "FLE Standard Time", "zone": "Europe/Zaporozhye", "territory": "Zaporozhye" },
    { "other_zone": "Turkey Standard Time", "zone": "Europe/Istanbul", "territory": "Istanbul" },
    { "other_zone": "Israel Standard Time", "zone": "Asia/Jerusalem", "territory": "Jerusalem" },
    { "other_zone": "Jordan Standard Time", "zone": "Asia/Amman", "territory": "Amman" },
    { "other_zone": "Arabic Standard Time", "zone": "Asia/Baghdad", "territory": "Baghdad" },
    { "other_zone": "Kaliningrad Standard Time", "zone": "Europe/Kaliningrad", "territory": "Kaliningrad" },
    { "other_zone": "Kaliningrad Standard Time", "zone": "Europe/Minsk", "territory": "Minsk" },
    { "other_zone": "Arab Standard Time", "zone": "Asia/Riyadh", "territory": "Riyadh" },
    { "other_zone": "Arab Standard Time", "zone": "Asia/Bahrain", "territory": "Bahrain" },
    { "other_zone": "Arab Standard Time", "zone": "Asia/Kuwait", "territory": "Kuwait" },
    { "other_zone": "Arab Standard Time", "zone": "Asia/Qatar", "territory": "Qatar" },
    { "other_zone": "Arab Standard Time", "zone": "Asia/Aden", "territory": "Aden" },
    { "other_zone": "E. Africa Standard Time", "zone": "Africa/Nairobi", "territory": "Nairobi" },
    { "other_zone": "E. Africa Standard Time", "zone": "Antarctica/Syowa", "territory": "Syowa" },
    { "other_zone": "E. Africa Standard Time", "zone": "Africa/Djibouti", "territory": "Djibouti" },
    { "other_zone": "E. Africa Standard Time", "zone": "Africa/Asmera", "territory": "Asmera" },
    { "other_zone": "E. Africa Standard Time", "zone": "Africa/Addis_Ababa", "territory": "Addis Ababa" },
    { "other_zone": "E. Africa Standard Time", "zone": "Indian/Comoro", "territory": "Comoro" },
    { "other_zone": "E. Africa Standard Time", "zone": "Indian/Antananarivo", "territory": "Antananarivo" },
    { "other_zone": "E. Africa Standard Time", "zone": "Africa/Khartoum", "territory": "Khartoum" },
    { "other_zone": "E. Africa Standard Time", "zone": "Africa/Mogadishu", "territory": "Mogadishu" },
    { "other_zone": "E. Africa Standard Time", "zone": "Africa/Juba", "territory": "Juba" },
    { "other_zone": "E. Africa Standard Time", "zone": "Africa/Dar_es_Salaam", "territory": "Dar es Salaam" },
    { "other_zone": "E. Africa Standard Time", "zone": "Africa/Kampala", "territory": "Kampala" },
    { "other_zone": "E. Africa Standard Time", "zone": "Indian/Mayotte", "territory": "Mayotte" },
    { "other_zone": "E. Africa Standard Time", "zone": "Etc/GMT-3", "territory": "GMT-3" },
    { "other_zone": "Iran Standard Time", "zone": "Asia/Tehran", "territory": "Tehran" },
    { "other_zone": "Arabian Standard Time", "zone": "Asia/Dubai", "territory": "Dubai" },
    { "other_zone": "Arabian Standard Time", "zone": "Asia/Muscat", "territory": "Muscat" },
    { "other_zone": "Arabian Standard Time", "zone": "Etc/GMT-4", "territory": "GMT-4" },
    { "other_zone": "Azerbaijan Standard Time", "zone": "Asia/Baku", "territory": "Baku" },
    { "other_zone": "Russian Standard Time", "zone": "Europe/Moscow", "territory": "Moscow" },
    { "other_zone": "Russian Standard Time", "zone": "Europe/Samara", "territory": "Samara" },
    { "other_zone": "Russian Standard Time", "zone": "Europe/Volgograd", "territory": "Volgograd" },
    { "other_zone": "Mauritius Standard Time", "zone": "Indian/Mauritius", "territory": "Mauritius" },
    { "other_zone": "Mauritius Standard Time", "zone": "Indian/Reunion", "territory": "Reunion" },
    { "other_zone": "Mauritius Standard Time", "zone": "Indian/Mahe", "territory": "Mahe" },
    { "other_zone": "Georgian Standard Time", "zone": "Asia/Tbilisi", "territory": "Tbilisi" },
    { "other_zone": "Caucasus Standard Time", "zone": "Asia/Yerevan", "territory": "Yerevan" },
    { "other_zone": "Afghanistan Standard Time", "zone": "Asia/Kabul", "territory": "Kabul" },
    { "other_zone": "Pakistan Standard Time", "zone": "Asia/Karachi", "territory": "Karachi" },
    { "other_zone": "West Asia Standard Time", "zone": "Asia/Tashkent", "territory": "Tashkent" },
    { "other_zone": "West Asia Standard Time", "zone": "Antarctica/Mawson", "territory": "Mawson" },
    { "other_zone": "West Asia Standard Time", "zone": "Asia/Oral", "territory": "Oral" },
    { "other_zone": "West Asia Standard Time", "zone": "Asia/Aqtau", "territory": "Aqtau" },
    { "other_zone": "West Asia Standard Time", "zone": "Asia/Aqtobe", "territory": "Aqtobe" },
    { "other_zone": "West Asia Standard Time", "zone": "Indian/Maldives", "territory": "Maldives" },
    { "other_zone": "West Asia Standard Time", "zone": "Indian/Kerguelen", "territory": "Kerguelen" },
    { "other_zone": "West Asia Standard Time", "zone": "Asia/Dushanbe", "territory": "Dushanbe" },
    { "other_zone": "West Asia Standard Time", "zone": "Asia/Ashgabat", "territory": "Ashgabat" },
    { "other_zone": "West Asia Standard Time", "zone": "Asia/Samarkand", "territory": "Samarkand" },
    { "other_zone": "West Asia Standard Time", "zone": "Etc/GMT-5", "territory": "GMT-5" },
    { "other_zone": "India Standard Time", "zone": "Asia/Calcutta", "territory": "Calcutta" },
    { "other_zone": "Sri Lanka Standard Time", "zone": "Asia/Colombo", "territory": "Colombo" },
    { "other_zone": "Nepal Standard Time", "zone": "Asia/Katmandu", "territory": "Katmandu" },
    { "other_zone": "Central Asia Standard Time", "zone": "Asia/Almaty", "territory": "Almaty" },
    { "other_zone": "Central Asia Standard Time", "zone": "Antarctica/Vostok", "territory": "Vostok" },
    { "other_zone": "Central Asia Standard Time", "zone": "Indian/Chagos", "territory": "Chagos" },
    { "other_zone": "Central Asia Standard Time", "zone": "Asia/Bishkek", "territory": "Bishkek" },
    { "other_zone": "Central Asia Standard Time", "zone": "Asia/Qyzylorda", "territory": "Qyzylorda" },
    { "other_zone": "Central Asia Standard Time", "zone": "Etc/GMT-6", "territory": "GMT-6" },
    { "other_zone": "Bangladesh Standard Time", "zone": "Asia/Dhaka", "territory": "Dhaka" },
    { "other_zone": "Bangladesh Standard Time", "zone": "Asia/Thimphu", "territory": "Thimphu" },
    { "other_zone": "Ekaterinburg Standard Time", "zone": "Asia/Yekaterinburg", "territory": "Yekaterinburg" },
    { "other_zone": "Myanmar Standard Time", "zone": "Asia/Rangoon", "territory": "Rangoon" },
    { "other_zone": "Myanmar Standard Time", "zone": "Indian/Cocos", "territory": "Cocos" },
    { "other_zone": "SE Asia Standard Time", "zone": "Asia/Bangkok", "territory": "Bangkok" },
    { "other_zone": "SE Asia Standard Time", "zone": "Antarctica/Davis", "territory": "Davis" },
    { "other_zone": "SE Asia Standard Time", "zone": "Indian/Christmas", "territory": "Christmas" },
    { "other_zone": "SE Asia Standard Time", "zone": "Asia/Jakarta", "territory": "Jakarta" },
    { "other_zone": "SE Asia Standard Time", "zone": "Asia/Pontianak", "territory": "Pontianak" },
    { "other_zone": "SE Asia Standard Time", "zone": "Asia/Phnom_Penh", "territory": "Phnom Penh" },
    { "other_zone": "SE Asia Standard Time", "zone": "Asia/Vientiane", "territory": "Vientiane" },
    { "other_zone": "SE Asia Standard Time", "zone": "Asia/Hovd", "territory": "Hovd" },
    { "other_zone": "SE Asia Standard Time", "zone": "Asia/Saigon", "territory": "Saigon" },
    { "other_zone": "SE Asia Standard Time", "zone": "Etc/GMT-7", "territory": "GMT-7" },
    { "other_zone": "N. Central Asia Standard Time", "zone": "Asia/Novosibirsk", "territory": "Novosibirsk" },
    { "other_zone": "N. Central Asia Standard Time", "zone": "Asia/Novokuznetsk", "territory": "Novokuznetsk" },
    { "other_zone": "N. Central Asia Standard Time", "zone": "Asia/Omsk", "territory": "Omsk" },
    { "other_zone": "China Standard Time", "zone": "Asia/Shanghai", "territory": "Shanghai" },
    { "other_zone": "China Standard Time", "zone": "Asia/Chongqing", "territory": "Chongqing" },
    { "other_zone": "China Standard Time", "zone": "Asia/Harbin", "territory": "Harbin" },
    { "other_zone": "China Standard Time", "zone": "Asia/Kashgar", "territory": "Kashgar" },
    { "other_zone": "China Standard Time", "zone": "Asia/Urumqi", "territory": "Urumqi" },
    { "other_zone": "China Standard Time", "zone": "Asia/Hong_Kong", "territory": "Hong Kong" },
    { "other_zone": "China Standard Time", "zone": "Asia/Macau", "territory": "Macau" },
    { "other_zone": "North Asia Standard Time", "zone": "Asia/Krasnoyarsk", "territory": "Krasnoyarsk" },
    { "other_zone": "Singapore Standard Time", "zone": "Asia/Singapore", "territory": "Singapore" },
    { "other_zone": "Singapore Standard Time", "zone": "Asia/Brunei", "territory": "Brunei" },
    { "other_zone": "Singapore Standard Time", "zone": "Asia/Makassar", "territory": "Makassar" },
    { "other_zone": "Singapore Standard Time", "zone": "Asia/Kuala_Lumpur", "territory": "Kuala Lumpur" },
    { "other_zone": "Singapore Standard Time", "zone": "Asia/Kuching", "territory": "Kuching" },
    { "other_zone": "Singapore Standard Time", "zone": "Asia/Manila", "territory": "Manila" },
    { "other_zone": "Singapore Standard Time", "zone": "Etc/GMT-8", "territory": "GMT-8" },
    { "other_zone": "W. Australia Standard Time", "zone": "Australia/Perth", "territory": "Perth" },
    { "other_zone": "W. Australia Standard Time", "zone": "Antarctica/Casey", "territory": "Casey" },
    { "other_zone": "Taipei Standard Time", "zone": "Asia/Taipei", "territory": "Taipei" },
    { "other_zone": "Ulaanbaatar Standard Time", "zone": "Asia/Ulaanbaatar", "territory": "Ulaanbaatar" },
    { "other_zone": "Ulaanbaatar Standard Time", "zone": "Asia/Choibalsan", "territory": "Choibalsan" },
    { "other_zone": "North Asia East Standard Time", "zone": "Asia/Irkutsk", "territory": "Irkutsk" },
    { "other_zone": "Tokyo Standard Time", "zone": "Asia/Tokyo", "territory": "Tokyo" },
    { "other_zone": "Tokyo Standard Time", "zone": "Asia/Jayapura", "territory": "Jayapura" },
    { "other_zone": "Tokyo Standard Time", "zone": "Pacific/Palau", "territory": "Palau" },
    { "other_zone": "Tokyo Standard Time", "zone": "Asia/Dili", "territory": "Dili" },
    { "other_zone": "Tokyo Standard Time", "zone": "Etc/GMT-9", "territory": "GMT-9" },
    { "other_zone": "Korea Standard Time", "zone": "Asia/Seoul", "territory": "Seoul" },
    { "other_zone": "Korea Standard Time", "zone": "Asia/Pyongyang", "territory": "Pyongyang" },
    { "other_zone": "Cen. Australia Standard Time", "zone": "Australia/Adelaide", "territory": "Adelaide" },
    { "other_zone": "Cen. Australia Standard Time", "zone": "Australia/Broken_Hill", "territory": "Broken Hill" },
    { "other_zone": "AUS Central Standard Time", "zone": "Australia/Darwin", "territory": "Darwin" },
    { "other_zone": "E. Australia Standard Time", "zone": "Australia/Brisbane", "territory": "Brisbane" },
    { "other_zone": "E. Australia Standard Time", "zone": "Australia/Lindeman", "territory": "Lindeman" },
    { "other_zone": "AUS Eastern Standard Time", "zone": "Australia/Sydney", "territory": "Sydney" },
    { "other_zone": "AUS Eastern Standard Time", "zone": "Australia/Melbourne", "territory": "Melbourne" },
    { "other_zone": "West Pacific Standard Time", "zone": "Pacific/Port_Moresby", "territory": "Port Moresby" },
    { "other_zone": "West Pacific Standard Time", "zone": "Antarctica/DumontDUrville", "territory": "DumontDUrville" },
    { "other_zone": "West Pacific Standard Time", "zone": "Pacific/Truk", "territory": "Truk" },
    { "other_zone": "West Pacific Standard Time", "zone": "Pacific/Guam", "territory": "Guam" },
    { "other_zone": "West Pacific Standard Time", "zone": "Pacific/Saipan", "territory": "Saipan" },
    { "other_zone": "West Pacific Standard Time", "zone": "Etc/GMT-10", "territory": "GMT-10" },
    { "other_zone": "Tasmania Standard Time", "zone": "Australia/Hobart", "territory": "Hobart" },
    { "other_zone": "Tasmania Standard Time", "zone": "Australia/Currie", "territory": "Currie" },
    { "other_zone": "Yakutsk Standard Time", "zone": "Asia/Yakutsk", "territory": "Yakutsk" },
    { "other_zone": "Yakutsk Standard Time", "zone": "Asia/Khandyga", "territory": "Khandyga" },
    { "other_zone": "Central Pacific Standard Time", "zone": "Pacific/Guadalcanal", "territory": "Guadalcanal" },
    { "other_zone": "Central Pacific Standard Time", "zone": "Antarctica/Macquarie", "territory": "Macquarie" },
    { "other_zone": "Central Pacific Standard Time", "zone": "Pacific/Ponape", "territory": "Ponape" },
    { "other_zone": "Central Pacific Standard Time", "zone": "Pacific/Kosrae", "territory": "Kosrae" },
    { "other_zone": "Central Pacific Standard Time", "zone": "Pacific/Noumea", "territory": "Noumea" },
    { "other_zone": "Central Pacific Standard Time", "zone": "Pacific/Efate", "territory": "Efate" },
    { "other_zone": "Central Pacific Standard Time", "zone": "Etc/GMT-11", "territory": "GMT-11" },
    { "other_zone": "Vladivostok Standard Time", "zone": "Asia/Vladivostok", "territory": "Vladivostok" },
    { "other_zone": "Vladivostok Standard Time", "zone": "Asia/Sakhalin", "territory": "Sakhalin" },
    { "other_zone": "Vladivostok Standard Time", "zone": "Asia/Ust-Nera", "territory": "Ust-Nera" },
    { "other_zone": "New Zealand Standard Time", "zone": "Pacific/Auckland", "territory": "Auckland" },
    { "other_zone": "New Zealand Standard Time", "zone": "Antarctica/South_Pole", "territory": "South Pole" },
    { "other_zone": "New Zealand Standard Time", "zone": "Antarctica/McMurdo", "territory": "McMurdo" },
    { "other_zone": "UTC+12", "zone": "Etc/GMT-12", "territory": "GMT-12" },
    { "other_zone": "UTC+12", "zone": "Pacific/Tarawa", "territory": "Tarawa" },
    { "other_zone": "UTC+12", "zone": "Pacific/Majuro", "territory": "Majuro" },
    { "other_zone": "UTC+12", "zone": "Pacific/Kwajalein", "territory": "Kwajalein" },
    { "other_zone": "UTC+12", "zone": "Pacific/Nauru", "territory": "Nauru" },
    { "other_zone": "UTC+12", "zone": "Pacific/Funafuti", "territory": "Funafuti" },
    { "other_zone": "UTC+12", "zone": "Pacific/Wake", "territory": "Wake" },
    { "other_zone": "UTC+12", "zone": "Pacific/Wallis", "territory": "Wallis" },
    { "other_zone": "Fiji Standard Time", "zone": "Pacific/Fiji", "territory": "Fiji" },
    { "other_zone": "Magadan Standard Time", "zone": "Asia/Magadan", "territory": "Magadan" },
    { "other_zone": "Magadan Standard Time", "zone": "Asia/Anadyr", "territory": "Anadyr" },
    { "other_zone": "Magadan Standard Time", "zone": "Asia/Kamchatka", "territory": "Kamchatka" },
    { "other_zone": "Tonga Standard Time", "zone": "Pacific/Tongatapu", "territory": "Tongatapu" },
    { "other_zone": "Tonga Standard Time", "zone": "Pacific/Enderbury", "territory": "Enderbury" },
    { "other_zone": "Tonga Standard Time", "zone": "Pacific/Fakaofo", "territory": "Fakaofo" },
    { "other_zone": "Tonga Standard Time", "zone": "Etc/GMT-13", "territory": "GMT-13" },
    { "other_zone": "Samoa Standard Time", "zone": "Pacific/Apia", "territory": "Apia" }
];


/***/ }),
/* 445 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Types_1 = __webpack_require__(39);
var IntVal_1 = __webpack_require__(77);
var Timezone_1 = __webpack_require__(443);
var valueToTwoDigits = function (value) {
    return ((value < 10) ? '0' : '') + value;
};
// ===================== Date ========================
var days = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
var months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
var dateRegExp = /^\/Date\((.*?)\)\/$/;
var offsetRegExp = /[+-]\d*/;
exports.dateToUTCString = function (date) {
    var time = valueToTwoDigits(date.getUTCHours()) + ':' + valueToTwoDigits(date.getUTCMinutes()) + ':' + valueToTwoDigits(date.getUTCSeconds());
    return days[date.getUTCDay()] + ', ' + valueToTwoDigits(date.getUTCDate()) + ' ' + months[date.getUTCMonth()] + ' ' + date.getUTCFullYear() + ' ' + time + ' GMT';
};
var parseMicrosoftFormatOffset = function (offset) {
    var sign = offset.substr(0, 1) === "-" ? -1 : 1;
    offset = offset.substring(1);
    var result = (IntVal_1.intVal(offset.substr(0, 2)) * 60) + IntVal_1.intVal(offset.substring(2));
    return sign * result;
};
exports.parseDate = function (value) {
    if (Types_1.isDate(value)) {
        return value;
    }
    if (value && value.indexOf("/D") === 0) {
        var rDate = dateRegExp.exec(value);
        if (rDate) {
            var str = rDate[1];
            var rTz = offsetRegExp.exec(str.substring(1));
            var date = new Date(IntVal_1.intVal(str));
            if (rTz) {
                var tzoffset = parseMicrosoftFormatOffset(rTz[0]);
                var timezone = new Timezone_1.Timezone();
                date = timezone.apply(date, 0);
                date = timezone.convert(date, 0, -1 * tzoffset);
            }
            return date;
        }
    }
    return value;
};


/***/ }),
/* 446 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ensureValueInRange = function (val, min, max) {
    if (val <= min) {
        return min;
    }
    if (val >= max) {
        return max;
    }
    return val;
};


/***/ }),
/* 447 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.isValueOutOfRange = function (value, min, max) {
    return value < min || value > max;
};


/***/ }),
/* 448 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Average_1 = __webpack_require__(207);
exports.stdDeviation = function (arr) {
    var avg = Average_1.average(arr), sum = 0;
    for (var i = 0; i < arr.length; i++) {
        sum += Math.pow(arr[i] - avg, 2);
    }
    return Math.sqrt(sum / (arr.length - 1));
};


/***/ }),
/* 449 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.capitalize = function (str) {
    return "" + str.charAt(0).toUpperCase() + str.slice(1);
};


/***/ }),
/* 450 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.pluralize = function (num, strOne, strTwo, strFive) {
    strFive = strFive || strTwo;
    if ((strTwo === strFive) && (num > 1)) {
        return strTwo;
    }
    if ((num > 10) && (num < 20)) {
        return strFive;
    }
    var d = num % 10;
    if (d === 1) {
        return strOne;
    }
    else if ((d < 5) && (d !== 0)) {
        return strTwo;
    }
    else {
        return strFive;
    }
};


/***/ }),
/* 451 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Pad_1 = __webpack_require__(117);
var Justify_1 = __webpack_require__(208);
var IntVal_1 = __webpack_require__(77);
// formatBaseX()
var formatBaseX = function (value, base, prefixBaseX, leftJustify, minWidth, precision, zeroPad) {
    // Note: casts negative numbers to positive ones
    var number = value >>> 0;
    var prefix = prefixBaseX && number && { '2': '0b', '8': '0', '10': '', '16': '0x' }[base] || '';
    var result = prefix + Pad_1.pad(number.toString(base), precision || 0, '0', false);
    return Justify_1.justify(result, prefix, leftJustify, minWidth, zeroPad);
};
// formatString()
var formatString = function (value, leftJustify, minWidth, precision, zeroPad) {
    if (precision != null) {
        value = value.slice(0, precision);
    }
    return Justify_1.justify(value, '', leftJustify, minWidth, zeroPad);
};
exports.sprintf = function (format) {
    var a = [];
    for (var _i = 1; _i < arguments.length; _i++) {
        a[_i - 1] = arguments[_i];
    }
    var regex = /%%|%(\d+\$)?([-+#0 ]*)(\*\d+\$|\*|\d+)?(\.(\*\d+\$|\*|\d+))?([scboxXuidfegEG])/g;
    var i = 0;
    // finalFormat()
    var doFormat = function (substring, valueIndex, flags, minWidth, _, precision, type) {
        if (substring == '%%')
            return '%';
        // parse flags
        var leftJustify = false, positivePrefix = '', zeroPad = false, prefixBaseX = false;
        for (var j = 0; flags && j < flags.length; j++)
            switch (flags.charAt(j)) {
                case ' ':
                    positivePrefix = ' ';
                    break;
                case '+':
                    positivePrefix = '+';
                    break;
                case '-':
                    leftJustify = true;
                    break;
                case '0':
                    zeroPad = true;
                    break;
                case '#':
                    prefixBaseX = true;
                    break;
            }
        // parameters may be null, undefined, empty-string or real valued
        // we want to ignore null, undefined and empty-string values
        if (!minWidth) {
            minWidth = 0;
        }
        else if (minWidth == '*') {
            minWidth = +a[i++];
        }
        else if (minWidth.charAt(0) == '*') {
            minWidth = +a[minWidth.slice(1, -1)];
        }
        else {
            minWidth = +minWidth;
        }
        // Note: undocumented perl feature:
        if (minWidth < 0) {
            minWidth = -minWidth;
            leftJustify = true;
        }
        if (!isFinite(minWidth)) {
            throw new Error('sprintf: (minimum-)width must be finite');
        }
        if (!precision) {
            precision = 'fFeE'.indexOf(type) > -1 ? 6 : (type == 'd') ? 0 : void (0);
        }
        else if (precision == '*') {
            precision = +a[i++];
        }
        else if (precision.charAt(0) == '*') {
            precision = +a[precision.slice(1, -1)];
        }
        else {
            precision = +precision;
        }
        // grab value using valueIndex if required?
        var value = valueIndex ? a[valueIndex.slice(0, -1)] : a[i++];
        switch (type) {
            case 's': return formatString(String(value), leftJustify, minWidth, precision, zeroPad);
            case 'c': return formatString(String.fromCharCode(+value), leftJustify, minWidth, precision, zeroPad);
            case 'b': return formatBaseX(value, 2, prefixBaseX, leftJustify, minWidth, precision, zeroPad);
            case 'o': return formatBaseX(value, 8, prefixBaseX, leftJustify, minWidth, precision, zeroPad);
            case 'x': return formatBaseX(value, 16, prefixBaseX, leftJustify, minWidth, precision, zeroPad);
            case 'X': return formatBaseX(value, 16, prefixBaseX, leftJustify, minWidth, precision, zeroPad).toUpperCase();
            case 'u': return formatBaseX(value, 10, prefixBaseX, leftJustify, minWidth, precision, zeroPad);
            case 'i':
            case 'd': {
                var number = IntVal_1.intVal(+value);
                var prefix = number < 0 ? '-' : positivePrefix;
                value = prefix + Pad_1.pad(String(Math.abs(number)), precision, '0', false);
                return Justify_1.justify(value, prefix, leftJustify, minWidth, zeroPad);
            }
            case 'e':
            case 'E':
            case 'f':
            case 'F':
            case 'g':
            case 'G':
                {
                    var number = +value;
                    var prefix = number < 0 ? '-' : positivePrefix;
                    var method = ['toExponential', 'toFixed', 'toPrecision']['efg'.indexOf(type.toLowerCase())];
                    var textTransform = ['toString', 'toUpperCase']['eEfFgG'.indexOf(type) % 2];
                    value = prefix + Math.abs(number)[method](precision);
                    return Justify_1.justify(value, prefix, leftJustify, minWidth, zeroPad)[textTransform]();
                }
            default: return substring;
        }
    };
    return format.replace(regex, doFormat);
};


/***/ }),
/* 452 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.trim = function (value) {
    return value.replace(/^\s*/, "").replace(/\s*$/, "");
};


/***/ }),
/* 453 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var StrRepeat_1 = __webpack_require__(209);
exports.strRepeat = StrRepeat_1.strRepeat;
var Trim_1 = __webpack_require__(452);
exports.trim = Trim_1.trim;
var Pad_1 = __webpack_require__(117);
exports.pad = Pad_1.pad;
var Justify_1 = __webpack_require__(208);
exports.justify = Justify_1.justify;
var Capitalize_1 = __webpack_require__(449);
exports.capitalize = Capitalize_1.capitalize;
var Pluralize_1 = __webpack_require__(450);
exports.pluralize = Pluralize_1.pluralize;
var Sprintf_1 = __webpack_require__(451);
exports.sprintf = Sprintf_1.sprintf;


/***/ }),
/* 454 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Types_1 = __webpack_require__(39);
exports.createChainedFunction = function () {
    var funcs = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        funcs[_i] = arguments[_i];
    }
    return funcs
        .filter(function (f) { return (Types_1.isFunction(f)); })
        .reduce(function (acc, f) {
        if (typeof f !== 'function') {
            throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');
        }
        if (acc === null) {
            return f;
        }
        return function chainedFunction() {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            acc.apply(this, args);
            f.apply(this, args);
        };
    }, null);
};


/***/ }),
/* 455 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var CreateChainedFunction_1 = __webpack_require__(454);
exports.createChainedFunction = CreateChainedFunction_1.createChainedFunction;


/***/ }),
/* 456 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var onix_core_1 = __webpack_require__(21);
onix_core_1.Intl.registerStrings('forms', {
    'ru-ru': {
        copy_to_clipboard: "Копировать строку в буфер обмена",
    }
});
var onix_core_2 = __webpack_require__(21);
exports.Intl = onix_core_2.Intl;


/***/ }),
/* 457 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Selection_1 = __webpack_require__(458);
var onix_core_1 = __webpack_require__(21);
var defaultMessage = 'Copy to clipboard: #{key}, Enter';
function format(message) {
    var copyKey = (/mac os x/i.test(navigator.userAgent) ? '⌘' : 'Ctrl') + '+C';
    return message.replace(/#{\s*key\s*}/g, copyKey);
}
function copy(text, options) {
    var message, reselectPrevious, range, selection, mark, success = false;
    if (!options) {
        options = {};
    }
    try {
        reselectPrevious = Selection_1.Selection.toggle();
        range = document.createRange();
        selection = document.getSelection();
        mark = document.createElement('span');
        mark.textContent = text;
        mark.setAttribute('style', [
            // reset user styles for span element
            'all: unset',
            // prevents scrolling to the end of the page
            'position: fixed',
            'top: 0',
            'clip: rect(0, 0, 0, 0)',
            // used to preserve spaces and line breaks
            'white-space: pre',
            // do not inherit user-select (it may be `none`)
            '-webkit-user-select: text',
            '-moz-user-select: text',
            '-ms-user-select: text',
            'user-select: text',
        ].join(';'));
        document.body.appendChild(mark);
        range.selectNode(mark);
        selection.addRange(range);
        var successful = document.execCommand('copy');
        if (!successful) {
            throw new Error('copy command was unsuccessful');
        }
        success = true;
    }
    catch (err) {
        onix_core_1.Logger.error('unable to copy using execCommand: ', err);
        onix_core_1.Logger.warn('trying IE specific stuff');
        try {
            window['clipboardData'].setData('text', text);
            success = true;
        }
        catch (err) {
            onix_core_1.Logger.error('unable to copy using clipboardData: ', err);
            onix_core_1.Logger.error('falling back to prompt');
            message = format('message' in options ? options.message : defaultMessage);
            window.prompt(message, text);
        }
    }
    finally {
        if (selection) {
            if (typeof selection.removeRange == 'function') {
                selection.removeRange(range);
            }
            else {
                selection.removeAllRanges();
            }
        }
        if (mark) {
            document.body.removeChild(mark);
        }
        reselectPrevious();
    }
    return success;
}
exports.copy = copy;


/***/ }),
/* 458 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Selection = (function () {
    function Selection() {
    }
    Selection.toggle = function () {
        var selection = document.getSelection();
        if (!selection.rangeCount) {
            return function () { };
        }
        var active = document.activeElement;
        var ranges = [];
        for (var i = 0; i < selection.rangeCount; i++) {
            ranges.push(selection.getRangeAt(i));
        }
        var focus = null;
        switch (active.tagName.toUpperCase()) {
            case 'INPUT':
                focus = active.focus;
                active.blur();
            case 'TEXTAREA':
                focus = active.focus;
                active.blur();
                break;
            default:
                break;
        }
        selection.removeAllRanges();
        return function () {
            selection.type === 'Caret' && selection.removeAllRanges();
            if (!selection.rangeCount) {
                ranges.forEach(function (range) {
                    selection.addRange(range);
                });
            }
            focus && focus();
        };
    };
    return Selection;
}());
exports.Selection = Selection;


/***/ }),
/* 459 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
var classNames = __webpack_require__(9);
var StyleConfig_1 = __webpack_require__(78);
var Col = (function (_super) {
    __extends(Col, _super);
    function Col(props, context) {
        return _super.call(this, props, context) || this;
    }
    Col.prototype.render = function () {
        var _a = this.props, Component = _a.componentClass, className = _a.className, style = _a.style, props = __rest(_a, ["componentClass", "className", "style"]);
        var classes = [];
        StyleConfig_1.DEVICE_SIZES.forEach(function (size) {
            function popProp(propSuffix, modifier) {
                var propName = "" + size + propSuffix;
                var propValue = props[propName];
                if (propValue != null) {
                    classes.push("col-" + size + modifier + "-" + propValue);
                }
                delete props[propName];
            }
            popProp('', '');
            popProp('Offset', '-offset');
            popProp('Push', '-push');
            popProp('Pull', '-pull');
            var hiddenPropName = size + "Hidden";
            if (props[hiddenPropName]) {
                classes.push("hidden-" + size);
            }
            delete props[hiddenPropName];
        });
        return (React.createElement(Component, __assign({ className: classNames(classes, className), style: style }, props)));
    };
    Col.defaultProps = {
        componentClass: 'div'
    };
    return Col;
}(React.Component));
exports.Col = Col;


/***/ }),
/* 460 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
var classNames = __webpack_require__(9);
var Row = (function (_super) {
    __extends(Row, _super);
    function Row(props, context) {
        return _super.call(this, props, context) || this;
    }
    Row.prototype.render = function () {
        var _a = this.props, Component = _a.componentClass, className = _a.className, style = _a.style, props = __rest(_a, ["componentClass", "className", "style"]);
        return (React.createElement(Component, __assign({ className: classNames("row", className), style: style }, props)));
    };
    Row.defaultProps = {
        componentClass: 'div'
    };
    return Row;
}(React.Component));
exports.Row = Row;


/***/ }),
/* 461 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
function isTrivialHref(href) {
    return !href || href.trim() === '#';
}
var SafeAnchor = (function (_super) {
    __extends(SafeAnchor, _super);
    function SafeAnchor(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this.handleClick = function (event) {
            var _a = _this.props, disabled = _a.disabled, href = _a.href, onClick = _a.onClick;
            if (disabled || isTrivialHref(href)) {
                event.preventDefault();
            }
            if (disabled) {
                event.stopPropagation();
                return;
            }
            if (onClick) {
                onClick(event);
            }
        };
        _this.handleClick = _this.handleClick.bind(_this);
        return _this;
    }
    SafeAnchor.prototype.render = function () {
        var _a = this.props, Component = _a.componentClass, disabled = _a.disabled, props_out = __rest(_a, ["componentClass", "disabled"]);
        var role = props_out.role, href = props_out.href, tabIndex = props_out.tabIndex, style = props_out.style, props = __rest(props_out, ["role", "href", "tabIndex", "style"]);
        if (isTrivialHref(href)) {
            role = role || 'button';
            // we want to make sure there is a href attribute on the node
            // otherwise, the cursor incorrectly styled (except with role='button')
            href = href || '#';
        }
        if (disabled) {
            tabIndex = -1;
            style = __assign({ pointerEvents: 'none' }, style);
        }
        var elem_prop = __assign({}, props_out, { role: role,
            href: href,
            tabIndex: tabIndex,
            style: style });
        return (React.createElement(Component, __assign({}, elem_prop, { onClick: this.handleClick })));
    };
    SafeAnchor.defaultProps = {
        componentClass: 'a'
    };
    return SafeAnchor;
}(React.Component));
exports.SafeAnchor = SafeAnchor;


/***/ }),
/* 462 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
var classNames = __webpack_require__(9);
var SafeAnchor_1 = __webpack_require__(461);
var Button = (function (_super) {
    __extends(Button, _super);
    function Button(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this.renderAnchor = function (elementProps, className) {
            var active = elementProps.active, block = elementProps.block, type = elementProps.type, size = elementProps.size, state = elementProps.state, props = __rest(elementProps, ["active", "block", "type", "size", "state"]);
            return (React.createElement(SafeAnchor_1.SafeAnchor, __assign({}, props, { className: classNames(className, elementProps.disabled && 'disabled') })));
        };
        return _this;
    }
    Button.prototype.renderButton = function (elementProps, className) {
        var componentClass = elementProps.componentClass, props = __rest(elementProps, ["componentClass"]);
        var Component = componentClass || 'button';
        return (React.createElement(Component, __assign({}, props, { type: elementProps.type || 'button', className: className })));
    };
    Button.prototype.render = function () {
        var _a = this.props, active = _a.active, block = _a.block, size = _a.size, state = _a.state, className = _a.className, props = __rest(_a, ["active", "block", "size", "state", "className"]);
        var classes = (_b = {
                active: active
            },
            _b["btn-" + state] = !!state,
            _b["btn-" + size] = !!size,
            _b['btn-block'] = !!block,
            _b);
        var fullClassName = classNames('btn', className, classes);
        if (props.href) {
            return this.renderAnchor(props, fullClassName);
        }
        return this.renderButton(props, fullClassName);
        var _b;
    };
    Button.defaultProps = {
        state: 'default',
        active: false,
        block: false,
        disabled: false,
    };
    return Button;
}(React.Component));
exports.Button = Button;


/***/ }),
/* 463 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
var classNames = __webpack_require__(9);
var Checkbox = (function (_super) {
    __extends(Checkbox, _super);
    function Checkbox(props) {
        var _this = _super.call(this, props) || this;
        _this.onChange = function (e) {
            var _a = _this.props, onChange = _a.onChange, onChangeState = _a.onChangeState;
            if (onChange) {
                onChange(e);
            }
            if (onChangeState) {
                onChangeState(e.target.checked, e.target.value);
            }
        };
        return _this;
    }
    Checkbox.prototype.render = function () {
        var _a = this.props, id = _a.id, circle = _a.circle, disabled = _a.disabled, state = _a.state, inputRef = _a.inputRef, className = _a.className, style = _a.style, onChangeState = _a.onChangeState, children = _a.children, elementProps = __rest(_a, ["id", "circle", "disabled", "state", "inputRef", "className", "style", "onChangeState", "children"]);
        var classes = (_b = {
                'checkbox': true
            },
            _b["check-" + state] = !!state,
            _b['checkbox-circle'] = circle,
            _b.disabled = disabled,
            _b);
        return (React.createElement("div", { className: classNames(className, classes), style: style },
            React.createElement("input", __assign({}, elementProps, { id: id, ref: inputRef, type: "checkbox", disabled: disabled, onChange: this.onChange })),
            React.createElement("label", { htmlFor: id }, children)));
        var _b;
    };
    Checkbox.defaultProps = {
        circle: false,
        disabled: false,
    };
    return Checkbox;
}(React.Component));
exports.Checkbox = Checkbox;


/***/ }),
/* 464 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
var prop_types_1 = __webpack_require__(24);
var classNames = __webpack_require__(9);
var warning = __webpack_require__(88);
var ControlLabel = (function (_super) {
    __extends(ControlLabel, _super);
    function ControlLabel(props, context) {
        return _super.call(this, props, context) || this;
    }
    ControlLabel.prototype.render = function () {
        var formGroup = this.context.$bs_formGroup;
        var controlId = formGroup && formGroup.controlId;
        var _a = this.props, _b = _a.htmlFor, htmlFor = _b === void 0 ? controlId : _b, srOnly = _a.srOnly, className = _a.className, elementProps = __rest(_a, ["htmlFor", "srOnly", "className"]);
        warning(controlId == null || htmlFor === controlId, '`controlId` is ignored on `<ControlLabel>` when `htmlFor` is specified.');
        var classes = {
            'control-label': true,
            'sr-only': srOnly,
        };
        return (React.createElement("label", __assign({}, elementProps, { htmlFor: htmlFor, className: classNames(className, classes) })));
    };
    ControlLabel.defaultProps = {
        srOnly: false,
    };
    ControlLabel.contextTypes = {
        $bs_formGroup: prop_types_1.PropTypes.object,
    };
    return ControlLabel;
}(React.Component));
exports.ControlLabel = ControlLabel;


/***/ }),
/* 465 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
var classNames = __webpack_require__(9);
var Form = (function (_super) {
    __extends(Form, _super);
    function Form(props, context) {
        return _super.call(this, props, context) || this;
    }
    Form.prototype.render = function () {
        var _a = this.props, horizontal = _a.horizontal, inline = _a.inline, className = _a.className, elementProps = __rest(_a, ["horizontal", "inline", "className"]);
        var classes = classNames(className, (_b = {},
            _b['form-horizontal'] = horizontal,
            _b['form-inline'] = inline,
            _b));
        return (React.createElement("form", __assign({}, elementProps, { className: classes })));
        var _b;
    };
    Form.defaultProps = {
        horizontal: false,
        inline: false,
    };
    return Form;
}(React.Component));
exports.Form = Form;


/***/ }),
/* 466 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
var prop_types_1 = __webpack_require__(24);
var classNames = __webpack_require__(9);
var Icon_1 = __webpack_require__(119);
var FormControlFeedback = (function (_super) {
    __extends(FormControlFeedback, _super);
    function FormControlFeedback(props, context) {
        return _super.call(this, props, context) || this;
    }
    FormControlFeedback.prototype.getGlyph = function (validationState) {
        switch (validationState) {
            case 'success':
                return 'xi-ok';
            case 'warning':
                return 'xi-warning-sign';
            case 'error':
                return 'xi-remove';
            default:
                return null;
        }
    };
    FormControlFeedback.prototype.renderDefaultFeedback = function (formGroup, className, classes, elementProps) {
        var glyph = this.getGlyph(formGroup && formGroup.validationState);
        if (!glyph) {
            return null;
        }
        return (React.createElement(Icon_1.Icon, __assign({}, elementProps, { glyph: glyph, className: classNames(className, classes) })));
    };
    FormControlFeedback.prototype.render = function () {
        var _a = this.props, className = _a.className, children = _a.children, bsRole = _a.bsRole, elementProps = __rest(_a, ["className", "children", "bsRole"]);
        var classes = 'form-control-feedback';
        if (!children) {
            return this.renderDefaultFeedback(this.context.$bs_formGroup, className, classes, elementProps);
        }
        var child = React.Children.only(children);
        return React.cloneElement(child, __assign({}, elementProps, { className: classNames(child.props.className, className, classes) }));
    };
    FormControlFeedback.defaultProps = {
        bsRole: 'feedback',
    };
    FormControlFeedback.contextTypes = {
        $bs_formGroup: prop_types_1.PropTypes.object,
    };
    return FormControlFeedback;
}(React.Component));
exports.FormControlFeedback = FormControlFeedback;


/***/ }),
/* 467 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
var classNames = __webpack_require__(9);
var FormControlStatic = (function (_super) {
    __extends(FormControlStatic, _super);
    function FormControlStatic(props) {
        return _super.call(this, props) || this;
    }
    FormControlStatic.prototype.render = function () {
        var _a = this.props, className = _a.className, elementProps = __rest(_a, ["className"]);
        var classes = classNames(className, 'form-control-static');
        return (React.createElement("p", __assign({}, elementProps, { className: classes })));
    };
    return FormControlStatic;
}(React.Component));
exports.FormControlStatic = FormControlStatic;


/***/ }),
/* 468 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
var prop_types_1 = __webpack_require__(24);
var classNames = __webpack_require__(9);
var FormGroup = (function (_super) {
    __extends(FormGroup, _super);
    function FormGroup(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this.getChildContext = function () {
            var _a = _this.props, controlId = _a.controlId, validationState = _a.validationState;
            return {
                $bs_formGroup: {
                    controlId: controlId,
                    validationState: validationState
                },
            };
        };
        _this.hasFeedback = function (children) {
            return React.Children.toArray(children).some(function (child) { return (React.isValidElement(child) &&
                (child.props.bsRole === 'feedback' || (child.props.children && _this.hasFeedback(child.props.children)))); }, _this);
        };
        return _this;
    }
    FormGroup.prototype.render = function () {
        var _a = this.props, validationState = _a.validationState, className = _a.className, children = _a.children, controlId = _a.controlId, elementProps = __rest(_a, ["validationState", "className", "children", "controlId"]);
        var classes = {
            'form-group': true,
            'has-feedback': this.hasFeedback(children),
        };
        if (validationState) {
            classes["has-" + validationState] = true;
        }
        return (React.createElement("div", __assign({}, elementProps, { className: classNames(className, classes) }), children));
    };
    FormGroup.childContextTypes = {
        $bs_formGroup: prop_types_1.PropTypes.object.isRequired,
    };
    return FormGroup;
}(React.Component));
exports.FormGroup = FormGroup;


/***/ }),
/* 469 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
var classNames = __webpack_require__(9);
var HelpBlock = (function (_super) {
    __extends(HelpBlock, _super);
    function HelpBlock(props) {
        return _super.call(this, props) || this;
    }
    HelpBlock.prototype.render = function () {
        var _a = this.props, className = _a.className, elementProps = __rest(_a, ["className"]);
        var classes = classNames(className, 'help-block');
        return (React.createElement("span", __assign({}, elementProps, { className: classes })));
    };
    return HelpBlock;
}(React.Component));
exports.HelpBlock = HelpBlock;


/***/ }),
/* 470 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
var classNames = __webpack_require__(9);
var InputGroupButton = (function (_super) {
    __extends(InputGroupButton, _super);
    function InputGroupButton(props) {
        return _super.call(this, props) || this;
    }
    InputGroupButton.prototype.render = function () {
        var _a = this.props, className = _a.className, elementProps = __rest(_a, ["className"]);
        return (React.createElement("span", __assign({}, elementProps, { className: classNames(className, 'input-group-btn') })));
    };
    return InputGroupButton;
}(React.Component));
exports.InputGroupButton = InputGroupButton;


/***/ }),
/* 471 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
var classNames = __webpack_require__(9);
var CopyToClipboard_1 = __webpack_require__(457);
var Intl_1 = __webpack_require__(456);
var InputGroup_1 = __webpack_require__(211);
var InputGroupAddon_1 = __webpack_require__(212);
var FormControl_1 = __webpack_require__(210);
var StyleConfig_1 = __webpack_require__(78);
var TextWithCopy = (function (_super) {
    __extends(TextWithCopy, _super);
    /**
     * constructor
     */
    function TextWithCopy(props) {
        var _this = _super.call(this, props) || this;
        _this.onCopy = function (e) {
            if (CopyToClipboard_1.copy(_this.props.value)) {
                _this.setSuccess();
            }
        };
        _this.setSuccess = function () {
            var that = _this;
            _this.setState({
                className: 'text-success',
            }, function () {
                setTimeout(that.setPrimary, 2000);
            });
        };
        _this.setPrimary = function () {
            _this.setState({
                className: null,
            });
        };
        _this.state = {
            className: null,
        };
        return _this;
    }
    TextWithCopy.prototype.render = function () {
        var _a = this.props, id = _a.id, scale = _a.scale, readOnly = _a.readOnly, ref = _a.ref, elementProps = __rest(_a, ["id", "scale", "readOnly", "ref"]);
        var classes = [];
        if (scale) {
            var s = StyleConfig_1.SIZE_MAP[scale] || scale;
            classes["input-" + s] = true;
        }
        return (React.createElement(InputGroup_1.InputGroup, { scale: scale },
            React.createElement(FormControl_1.FormControl, __assign({}, elementProps, { className: classNames(this.state.className), readOnly: true })),
            React.createElement(InputGroupAddon_1.InputGroupAddon, { state: "primary", onClick: this.onCopy, title: Intl_1.Intl.t("forms", "copy_to_clipboard"), arrow: true, glyph: "xi-copy" })));
    };
    return TextWithCopy;
}(React.Component));
exports.TextWithCopy = TextWithCopy;


/***/ }),
/* 472 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
var ProgressCircle = (function (_super) {
    __extends(ProgressCircle, _super);
    function ProgressCircle(props, context) {
        var _this = _super.call(this, props, context) || this;
        _this.getPathStyles = function () {
            var _a = _this.props, percent = _a.percent, strokeWidth = _a.strokeWidth, _b = _a.gapDegree, gapDegree = _b === void 0 ? 0 : _b, gapPosition = _a.gapPosition;
            var radius = 50 - (strokeWidth / 2);
            var beginPositionX = 0;
            var beginPositionY = -radius;
            var endPositionX = 0;
            var endPositionY = -2 * radius;
            switch (gapPosition) {
                case 'left':
                    beginPositionX = -radius;
                    beginPositionY = 0;
                    endPositionX = 2 * radius;
                    endPositionY = 0;
                    break;
                case 'right':
                    beginPositionX = radius;
                    beginPositionY = 0;
                    endPositionX = -2 * radius;
                    endPositionY = 0;
                    break;
                case 'bottom':
                    beginPositionY = radius;
                    endPositionY = 2 * radius;
                    break;
                default:
            }
            var pathString = "M 50,50 m " + beginPositionX + "," + beginPositionY + " a " + radius + "," + radius + " 0 1 1 " + endPositionX + "," + -endPositionY + " a " + radius + "," + radius + " 0 1 1 " + -endPositionX + "," + endPositionY;
            var len = Math.PI * 2 * radius;
            var trailPathStyle = {
                strokeDasharray: len - gapDegree + "px " + len + "px",
                strokeDashoffset: "-" + gapDegree / 2 + "px",
                transition: 'stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s',
            };
            var strokePathStyle = {
                strokeDasharray: (percent / 100) * (len - gapDegree) + "px " + len + "px",
                strokeDashoffset: "-" + gapDegree / 2 + "px",
                transition: 'stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s',
            };
            return { pathString: pathString, trailPathStyle: trailPathStyle, strokePathStyle: strokePathStyle };
        };
        return _this;
    }
    ProgressCircle.prototype.componentDidUpdate = function () {
        var now = Date.now();
        this.path.style.transitionDuration = '0.3s, 0.3s';
        if (this.prevTimeStamp && now - this.prevTimeStamp < 100) {
            this.path.style.transitionDuration = '0s, 0s';
        }
        this.prevTimeStamp = Date.now();
    };
    ProgressCircle.prototype.render = function () {
        var _this = this;
        var _a = this.props, prefixCls = _a.prefixCls, strokeWidth = _a.strokeWidth, trailWidth = _a.trailWidth, strokeColor = _a.strokeColor, trailColor = _a.trailColor, strokeLinecap = _a.strokeLinecap, style = _a.style, className = _a.className, percent = _a.percent, gapDegree = _a.gapDegree, gapPosition = _a.gapPosition, children = _a.children, restProps = __rest(_a, ["prefixCls", "strokeWidth", "trailWidth", "strokeColor", "trailColor", "strokeLinecap", "style", "className", "percent", "gapDegree", "gapPosition", "children"]);
        var _b = this.getPathStyles(), pathString = _b.pathString, trailPathStyle = _b.trailPathStyle, strokePathStyle = _b.strokePathStyle;
        return (React.createElement("svg", __assign({ className: prefixCls + "-circle " + className, viewBox: "0 0 100 100", style: style }, restProps),
            React.createElement("path", { className: prefixCls + "-circle-trail", d: pathString, stroke: trailColor, strokeWidth: trailWidth || strokeWidth, fillOpacity: "0", style: trailPathStyle }),
            React.createElement("path", { className: prefixCls + "-circle-path", d: pathString, strokeLinecap: strokeLinecap, stroke: strokeColor, strokeWidth: strokeWidth, fillOpacity: "0", ref: function (path) { _this.path = path; }, style: strokePathStyle })));
    };
    ProgressCircle.defaultProps = {
        className: '',
        percent: 0,
        prefixCls: 'rc-progress',
        strokeColor: '#2db7f5',
        strokeLinecap: 'round',
        strokeWidth: 1,
        style: {},
        trailColor: '#D9D9D9',
        trailWidth: 1,
        gapPosition: "top",
        gapDegree: 0,
    };
    return ProgressCircle;
}(React.Component));
exports.ProgressCircle = ProgressCircle;


/***/ }),
/* 473 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
var ProgressLine = (function (_super) {
    __extends(ProgressLine, _super);
    function ProgressLine(props, context) {
        return _super.call(this, props, context) || this;
    }
    ProgressLine.prototype.componentDidUpdate = function () {
        var now = Date.now();
        this.path.style.transitionDuration = '0.3s, 0.3s';
        if (this.prevTimeStamp && now - this.prevTimeStamp < 100) {
            this.path.style.transitionDuration = '0s, 0s';
        }
        this.prevTimeStamp = Date.now();
    };
    ProgressLine.prototype.render = function () {
        var _this = this;
        var _a = this.props, className = _a.className, percent = _a.percent, prefixCls = _a.prefixCls, strokeColor = _a.strokeColor, strokeLinecap = _a.strokeLinecap, strokeWidth = _a.strokeWidth, style = _a.style, trailColor = _a.trailColor, trailWidth = _a.trailWidth, children = _a.children, restProps = __rest(_a, ["className", "percent", "prefixCls", "strokeColor", "strokeLinecap", "strokeWidth", "style", "trailColor", "trailWidth", "children"]);
        var pathStyle = {
            strokeDasharray: '100px, 100px',
            strokeDashoffset: (100 - percent) + "px",
            transition: 'stroke-dashoffset 0.3s ease 0s, stroke 0.3s linear',
        };
        var center = strokeWidth / 2;
        var right = 100 - (strokeWidth / 2);
        var pathString = "M " + (strokeLinecap === 'round' ? center : 0) + "," + center + " L " + (strokeLinecap === 'round' ? right : 100) + "," + center;
        var viewBoxString = "0 0 100 " + strokeWidth;
        return (React.createElement("svg", __assign({ className: prefixCls + "-line " + className, viewBox: viewBoxString, preserveAspectRatio: "none", style: style }, restProps),
            React.createElement("path", { className: prefixCls + "-line-trail", d: pathString, strokeLinecap: strokeLinecap, stroke: trailColor, strokeWidth: trailWidth || strokeWidth, fillOpacity: "0" }),
            React.createElement("path", { className: prefixCls + "-line-path", d: pathString, strokeLinecap: strokeLinecap, stroke: strokeColor, strokeWidth: strokeWidth, fillOpacity: "0", ref: function (path) { _this.path = path; }, style: pathStyle })));
    };
    ProgressLine.defaultProps = {
        className: '',
        percent: 0,
        prefixCls: 'rc-progress',
        strokeColor: '#2db7f5',
        strokeLinecap: 'round',
        strokeWidth: 1,
        style: {},
        trailColor: '#D9D9D9',
        trailWidth: 1,
    };
    return ProgressLine;
}(React.Component));
exports.ProgressLine = ProgressLine;


/***/ }),
/* 474 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
var Handle = (function (_super) {
    __extends(Handle, _super);
    function Handle(props, context) {
        return _super.call(this, props, context) || this;
    }
    Handle.prototype.render = function () {
        var _a = this.props, className = _a.className, vertical = _a.vertical, offset = _a.offset;
        var style = vertical ? { bottom: offset + "%" } : { left: offset + "%" };
        return React.createElement("div", { className: className, style: style });
    };
    Handle.defaultProps = {
        offset: 0,
    };
    return Handle;
}(React.Component));
exports.Handle = Handle;


/***/ }),
/* 475 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
var classNames = __webpack_require__(9);
exports.Marks = function (_a) {
    var className = _a.className, vertical = _a.vertical, marks = _a.marks, included = _a.included, upperBound = _a.upperBound, lowerBound = _a.lowerBound, max = _a.max, min = _a.min;
    var marksKeys = Object.keys(marks);
    var marksCount = marksKeys.length;
    var unit = 100 / (marksCount - 1);
    var markWidth = unit * 0.9;
    var range = max - min;
    var elements = marksKeys.map(parseFloat).sort(function (a, b) { return a - b; }).map(function (point) {
        var isActive = (!included && point === upperBound) ||
            (included && point <= upperBound && point >= lowerBound);
        var markClassName = classNames((_a = {},
            _a[className + "-text"] = true,
            _a[className + "-text-active"] = isActive,
            _a));
        var bottomStyle = {
            // height: markWidth + '%',
            marginBottom: '-50%',
            bottom: (point - min) / range * 100 + "%",
        };
        var leftStyle = {
            width: markWidth + "%",
            marginLeft: -markWidth / 2 + "%",
            left: (point - min) / range * 100 + "%",
        };
        var style = vertical ? bottomStyle : leftStyle;
        var markPoint = marks[point];
        var markPointIsObject = typeof markPoint === 'object' && !React.isValidElement(markPoint);
        var markLabel = markPointIsObject ? markPoint.label : markPoint;
        var markStyle = markPointIsObject ? __assign({}, style, markPoint.style) : style;
        return (React.createElement("span", { className: markClassName, style: markStyle, key: point }, markLabel));
        var _a;
    });
    return React.createElement("div", { className: className }, elements);
};


/***/ }),
/* 476 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
var classNames = __webpack_require__(9);
var EventUtils_1 = __webpack_require__(118);
var index_1 = __webpack_require__(116);
var SliderBase_1 = __webpack_require__(213);
var Track_1 = __webpack_require__(214);
var Range = (function (_super) {
    __extends(Range, _super);
    function Range(props) {
        var _this = _super.call(this, props) || this;
        _this.onChange = function (state) {
            var props = _this.props;
            var isNotControlled = !('value' in props);
            if (isNotControlled) {
                _this.setState(state);
            }
            else if (state.handle) {
                _this.setState(__assign({}, _this.state, { handle: state.handle }));
            }
            var data = __assign({}, _this.state, state);
            var changedValue = data.bounds;
            props.onChange(changedValue);
        };
        _this.onStart = function (position) {
            var props = _this.props;
            var state = _this.state;
            var bounds = _this.getValue();
            props.onBeforeChange(bounds);
            var value = _this.calcValueByPos(position);
            _this.startValue = value;
            _this.startPosition = position;
            var closestBound = _this.getClosestBound(value);
            var boundNeedMoving = _this.getBoundNeedMoving(value, closestBound);
            _this.setState(__assign({}, _this.state, { handle: boundNeedMoving, recent: boundNeedMoving }));
            var prevValue = bounds[boundNeedMoving];
            if (value === prevValue)
                return;
            var nextBounds = state.bounds.slice();
            nextBounds[boundNeedMoving] = value;
            _this.onChange({ bounds: nextBounds });
        };
        _this.onEnd = function () {
            _this.setState(__assign({}, _this.state, { handle: null }));
            _this.removeDocumentEvents();
            _this.props.onAfterChange(_this.getValue());
        };
        _this.onMove = function (e, position) {
            EventUtils_1.pauseEvent(e);
            var props = _this.props;
            var state = _this.state;
            var value = _this.calcValueByPos(position);
            var oldValue = state.bounds[state.handle];
            if (value === oldValue)
                return;
            var nextBounds = state.bounds.slice();
            nextBounds[state.handle] = value;
            var nextHandle = state.handle;
            if (props.pushable !== false) {
                var originalValue = state.bounds[nextHandle];
                _this.pushSurroundingHandles(nextBounds, nextHandle, originalValue);
            }
            else if (props.allowCross) {
                nextBounds.sort(function (a, b) { return a - b; });
                nextHandle = nextBounds.indexOf(value);
            }
            _this.onChange({
                handle: nextHandle,
                bounds: nextBounds,
            });
        };
        _this.state = {
            handle: null,
            recent: 0,
            bounds: [0],
        };
        var count = props.count, min = props.min, max = props.max;
        var initialValue = Array.apply(null, Array(count + 1)).map(function () { return min; });
        var defaultValue = 'defaultValue' in props ? props.defaultValue : initialValue;
        var value = props.value ? props.value : defaultValue;
        var bounds = value.map(function (v) { return _this.trimAlignValue(v); });
        var recent = bounds[0] === max ? 0 : bounds.length - 1;
        return _this;
    }
    Range.prototype.componentWillReceiveProps = function (nextProps) {
        var _this = this;
        if (!('value' in nextProps || 'min' in nextProps || 'max' in nextProps)) {
            return;
        }
        var bounds = this.state.bounds;
        var value = nextProps.value || bounds;
        var nextBounds = value.map(function (v) { return _this.trimAlignValue(v, nextProps); });
        if (nextBounds.every(function (v, i) { return v === bounds[i]; }))
            return;
        this.setState(__assign({}, this.state, { bounds: nextBounds }));
        if (bounds.some(function (v) { return index_1.isValueOutOfRange(v, nextProps.min, nextProps.max); })) {
            this.props.onChange(nextBounds);
        }
    };
    Range.prototype.getValue = function () {
        return this.state.bounds;
    };
    Range.prototype.getClosestBound = function (value) {
        var bounds = this.state.bounds;
        var closestBound = 0;
        for (var i = 1; i < bounds.length - 1; ++i) {
            if (value > bounds[i]) {
                closestBound = i;
            }
        }
        if (Math.abs(bounds[closestBound + 1] - value) < Math.abs(bounds[closestBound] - value)) {
            closestBound = closestBound + 1;
        }
        return closestBound;
    };
    Range.prototype.getBoundNeedMoving = function (value, closestBound) {
        var _a = this.state, bounds = _a.bounds, recent = _a.recent;
        var boundNeedMoving = closestBound;
        var isAtTheSamePoint = (bounds[closestBound + 1] === bounds[closestBound]);
        if (isAtTheSamePoint) {
            boundNeedMoving = recent;
        }
        if (isAtTheSamePoint && (value !== bounds[closestBound + 1])) {
            boundNeedMoving = value < bounds[closestBound + 1] ? closestBound : closestBound + 1;
        }
        return boundNeedMoving;
    };
    Range.prototype.getLowerBound = function () {
        return this.state.bounds[0];
    };
    Range.prototype.getUpperBound = function () {
        var bounds = this.state.bounds;
        return bounds[bounds.length - 1];
    };
    /**
     * Returns an array of possible slider points, taking into account both
     * `marks` and `step`. The result is cached.
     */
    Range.prototype.getPoints = function () {
        var _a = this.props, marks = _a.marks, step = _a.step, min = _a.min, max = _a.max;
        var cache = this._getPointsCache;
        if (!cache || cache.marks !== marks || cache.step !== step) {
            var pointsObject = __assign({}, marks);
            if (step !== null) {
                for (var point = min; point <= max; point += step) {
                    pointsObject[point] = point;
                }
            }
            var points = Object.keys(pointsObject).map(parseFloat);
            points.sort(function (a, b) { return a - b; });
            this._getPointsCache = { marks: marks, step: step, points: points };
        }
        return this._getPointsCache.points;
    };
    Range.prototype.pushSurroundingHandles = function (bounds, handle, originalValue) {
        var pushable = this.props.pushable;
        var value = bounds[handle];
        var threshold = pushable ? index_1.intVal(pushable) : 0;
        var direction = 0;
        if (bounds[handle + 1] - value < threshold) {
            direction = +1; // push to right
        }
        if (value - bounds[handle - 1] < threshold) {
            direction = -1; // push to left
        }
        if (direction === 0) {
            return;
        }
        var nextHandle = handle + direction;
        var diffToNext = direction * (bounds[nextHandle] - value);
        if (!this.pushHandle(bounds, nextHandle, direction, threshold - diffToNext)) {
            // revert to original value if pushing is impossible
            bounds[handle] = originalValue;
        }
    };
    Range.prototype.pushHandle = function (bounds, handle, direction, amount) {
        var originalValue = bounds[handle];
        var currentValue = bounds[handle];
        while (direction * (currentValue - originalValue) < amount) {
            if (!this.pushHandleOnePoint(bounds, handle, direction)) {
                // can't push handle enough to create the needed `amount` gap, so we
                // revert its position to the original value
                bounds[handle] = originalValue;
                return false;
            }
            currentValue = bounds[handle];
        }
        // the handle was pushed enough to create the needed `amount` gap
        return true;
    };
    Range.prototype.pushHandleOnePoint = function (bounds, handle, direction) {
        var points = this.getPoints();
        var pointIndex = points.indexOf(bounds[handle]);
        var nextPointIndex = pointIndex + direction;
        if (nextPointIndex >= points.length || nextPointIndex < 0) {
            // reached the minimum or maximum available point, can't push anymore
            return false;
        }
        var nextHandle = handle + direction;
        var nextValue = points[nextPointIndex];
        var pushable = this.props.pushable;
        var threshold = pushable ? index_1.intVal(pushable) : 0;
        var diffToNext = direction * (bounds[nextHandle] - nextValue);
        if (!this.pushHandle(bounds, nextHandle, direction, threshold - diffToNext)) {
            // couldn't push next handle, so we won't push this one either
            return false;
        }
        // push the handle
        bounds[handle] = nextValue;
        return true;
    };
    Range.prototype.trimAlignValue = function (v, nextProps) {
        if (nextProps === void 0) { nextProps = {}; }
        var mergedProps = __assign({}, this.props, nextProps);
        var valInRange = index_1.ensureValueInRange(v, mergedProps.min, mergedProps.max);
        var valNotConflict = this.ensureValueNotConflict(valInRange, mergedProps.allowCross);
        return this.ensureValuePrecision(valNotConflict, mergedProps);
    };
    Range.prototype.ensureValueNotConflict = function (val, allowCross) {
        var _a = this.state, handle = _a.handle, bounds = _a.bounds;
        if (!allowCross && handle != null) {
            if (handle > 0 && val <= bounds[handle - 1]) {
                return bounds[handle - 1];
            }
            if (handle < bounds.length - 1 && val >= bounds[handle + 1]) {
                return bounds[handle + 1];
            }
        }
        return val;
    };
    Range.prototype.renderInternal = function () {
        var _this = this;
        var _a = this.state, handle = _a.handle, bounds = _a.bounds;
        var _b = this.props, prefixCls = _b.prefixCls, vertical = _b.vertical, included = _b.included, handleGenerator = _b.handle;
        var offsets = bounds.map(function (v) { return _this.calcOffset(v); });
        var handleClassName = prefixCls + "-handle";
        var handles = bounds.map(function (v, i) {
            return handleGenerator({
                className: classNames((_a = {},
                    _a[handleClassName] = true,
                    _a[handleClassName + "-" + (i + 1)] = true,
                    _a)),
                vertical: vertical,
                offset: offsets[i],
                value: v,
                dragging: handle === i,
                index: i,
                ref: function (h) { return _this.saveHandle(i, h); },
            });
            var _a;
        });
        var tracks = bounds.slice(0, -1).map(function (_, index) {
            var i = index + 1;
            var trackClassName = classNames((_a = {},
                _a[prefixCls + "-track"] = true,
                _a[prefixCls + "-track-" + i] = true,
                _a));
            return (React.createElement(Track_1.Track, { className: trackClassName, vertical: vertical, included: included, offset: offsets[i - 1], length: offsets[i] - offsets[i - 1], key: i }));
            var _a;
        });
        return { tracks: tracks, handles: handles };
    };
    Range.displayName = 'Range';
    Range.defaultProps = __assign({}, SliderBase_1.SliderBase.defaultProps, { count: 1, allowCross: true, pushable: false });
    return Range;
}(SliderBase_1.SliderBase));
exports.Range = Range;


/***/ }),
/* 477 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
var index_1 = __webpack_require__(116);
var EventUtils_1 = __webpack_require__(118);
var SliderBase_1 = __webpack_require__(213);
var Track_1 = __webpack_require__(214);
var Slider = (function (_super) {
    __extends(Slider, _super);
    function Slider(props) {
        var _this = _super.call(this, props) || this;
        _this.onChange = function (state) {
            var props = _this.props;
            var isNotControlled = !('value' in props);
            if (isNotControlled) {
                _this.setState(state);
            }
            var changedValue = state.value;
            props.onChange(changedValue);
        };
        _this.onStart = function (position) {
            _this.setState(__assign({}, _this.state, { dragging: true }));
            var props = _this.props;
            var prevValue = _this.getValue();
            props.onBeforeChange(prevValue);
            var value = _this.calcValueByPos(position);
            //this.startValue = value;
            //this.startPosition = position;
            if (value === prevValue)
                return;
            _this.onChange({ value: value });
        };
        _this.onEnd = function () {
            _this.setState(__assign({}, _this.state, { dragging: false }));
            _this.removeDocumentEvents();
            _this.props.onAfterChange(_this.getValue());
        };
        _this.onMove = function (e, position) {
            EventUtils_1.pauseEvent(e);
            var state = _this.state;
            var value = _this.calcValueByPos(position);
            var oldValue = state.value;
            if (value === oldValue)
                return;
            _this.onChange({ value: value });
        };
        var defaultValue = props.defaultValue !== undefined ? props.defaultValue : props.min;
        var value = props.value !== undefined ? props.value : defaultValue;
        _this.state = {
            value: _this.trimAlignValue(value),
            dragging: false,
        };
        return _this;
    }
    Slider.prototype.componentWillReceiveProps = function (nextProps) {
        if (!('value' in nextProps || 'min' in nextProps || 'max' in nextProps))
            return;
        var prevValue = this.state.value;
        var value = nextProps.value !== undefined ? nextProps.value : prevValue;
        var nextValue = this.trimAlignValue(value, nextProps);
        if (nextValue === prevValue)
            return;
        this.setState(__assign({}, this.state, { value: nextValue }));
        var min = nextProps.min, max = nextProps.max;
        if (index_1.isValueOutOfRange(value, min, max)) {
            this.props.onChange(nextValue);
        }
    };
    Slider.prototype.getValue = function () {
        return this.state.value;
    };
    Slider.prototype.getLowerBound = function () {
        return this.props.min;
    };
    Slider.prototype.getUpperBound = function () {
        return this.state.value;
    };
    Slider.prototype.trimAlignValue = function (v, nextProps) {
        if (nextProps === void 0) { nextProps = {}; }
        var mergedProps = __assign({}, this.props, nextProps);
        var min = mergedProps.min, max = mergedProps.max;
        var val = index_1.ensureValueInRange(v, min, max);
        return this.ensureValuePrecision(val, mergedProps);
    };
    Slider.prototype.renderInternal = function () {
        var _this = this;
        var _a = this.props, prefixCls = _a.prefixCls, vertical = _a.vertical, included = _a.included, handleGenerator = _a.handle;
        var _b = this.state, value = _b.value, dragging = _b.dragging;
        var offset = this.calcOffset(value);
        var handle = handleGenerator({
            className: prefixCls + "-handle",
            vertical: vertical,
            offset: offset,
            value: value,
            dragging: dragging,
            ref: function (h) { return _this.saveHandle(0, h); },
        });
        var track = (React.createElement(Track_1.Track, { className: prefixCls + "-track", vertical: vertical, included: included, offset: 0, length: offset }));
        return { tracks: track, handles: handle };
    };
    Slider.displayName = 'Slider';
    return Slider;
}(SliderBase_1.SliderBase));
exports.Slider = Slider;


/***/ }),
/* 478 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var React = __webpack_require__(3);
var classNames = __webpack_require__(9);
var warning = __webpack_require__(88);
var calcPoints = function (vertical, marks, dots, step, min, max) {
    warning(dots ? step > 0 : true, '`Slider[step]` should be a positive number in order to make Slider[dots] work.');
    var points = Object.keys(marks).map(parseFloat);
    if (dots) {
        for (var i = min; i <= max; i = i + step) {
            if (points.indexOf(i) >= 0)
                continue;
            points.push(i);
        }
    }
    return points;
};
exports.Steps = function (_a) {
    var prefixCls = _a.prefixCls, vertical = _a.vertical, marks = _a.marks, dots = _a.dots, step = _a.step, included = _a.included, lowerBound = _a.lowerBound, upperBound = _a.upperBound, max = _a.max, min = _a.min;
    var range = max - min;
    var elements = calcPoints(vertical, marks, dots, step, min, max).map(function (point) {
        var offset = Math.abs(point - min) / range * 100 + "%";
        var style = vertical ? { bottom: offset } : { left: offset };
        var isActived = (!included && point === upperBound) || (included && point <= upperBound && point >= lowerBound);
        var pointClassName = classNames((_a = {},
            _a[prefixCls + "-dot"] = true,
            _a[prefixCls + "-dot-active"] = isActived,
            _a));
        return React.createElement("span", { className: pointClassName, style: style, key: point });
        var _a;
    });
    return React.createElement("div", { className: prefixCls + "-step" }, elements);
};


/***/ }),
/* 479 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var EventBaseObject_1 = __webpack_require__(480);
var commonProps = [
    'altKey', 'bubbles', 'cancelable',
    'ctrlKey', 'currentTarget', 'eventPhase',
    'metaKey', 'shiftKey', 'target',
    'timeStamp', 'view', 'type',
];
function isNullOrUndefined(w) {
    return w === null || w === undefined;
}
var eventNormalizers = [
    {
        reg: /^key/,
        props: ['char', 'charCode', 'key', 'keyCode', 'which'],
        fix: function (event, nativeEvent) {
            if (isNullOrUndefined(event.which)) {
                event.which = !isNullOrUndefined(nativeEvent.charCode) ?
                    nativeEvent.charCode : nativeEvent.keyCode;
            }
            // add metaKey to non-Mac browsers (use ctrl for PC 's and Meta for Macs)
            if (event.metaKey === undefined) {
                event.metaKey = event.ctrlKey;
            }
        },
    },
    {
        reg: /^touch/,
        props: ['touches', 'changedTouches', 'targetTouches'],
    },
    {
        reg: /^hashchange$/,
        props: ['newURL', 'oldURL'],
    },
    {
        reg: /^gesturechange$/i,
        props: ['rotation', 'scale'],
    },
    {
        reg: /^(mousewheel|DOMMouseScroll)$/,
        props: [],
        fix: function (event, nativeEvent) {
            var deltaX;
            var deltaY;
            var delta;
            var wheelDelta = nativeEvent.wheelDelta;
            var axis = nativeEvent.axis;
            var wheelDeltaY = nativeEvent.wheelDeltaY;
            var wheelDeltaX = nativeEvent.wheelDeltaX;
            var detail = nativeEvent.detail;
            // ie/webkit
            if (wheelDelta) {
                delta = wheelDelta / 120;
            }
            // gecko
            if (detail) {
                // press control e.detail == 1 else e.detail == 3
                delta = 0 - (detail % 3 === 0 ? detail / 3 : detail);
            }
            // Gecko
            if (axis !== undefined) {
                if (axis === event.HORIZONTAL_AXIS) {
                    deltaY = 0;
                    deltaX = 0 - delta;
                }
                else if (axis === event.VERTICAL_AXIS) {
                    deltaX = 0;
                    deltaY = delta;
                }
            }
            // Webkit
            if (wheelDeltaY !== undefined) {
                deltaY = wheelDeltaY / 120;
            }
            if (wheelDeltaX !== undefined) {
                deltaX = -1 * wheelDeltaX / 120;
            }
            // deltaY (ie)
            if (!deltaX && !deltaY) {
                deltaY = delta;
            }
            if (deltaX !== undefined) {
                /**
                 * deltaX of mousewheel event
                 * @property deltaX
                 * @member Event.DomEvent.Object
                 */
                event.deltaX = deltaX;
            }
            if (deltaY !== undefined) {
                /**
                 * deltaY of mousewheel event
                 * @property deltaY
                 * @member Event.DomEvent.Object
                 */
                event.deltaY = deltaY;
            }
            if (delta !== undefined) {
                /**
                 * delta of mousewheel event
                 * @property delta
                 * @member Event.DomEvent.Object
                 */
                event.delta = delta;
            }
        },
    },
    {
        reg: /^mouse|contextmenu|click|mspointer|(^DOMMouseScroll$)/i,
        props: [
            'buttons', 'clientX', 'clientY', 'button',
            'offsetX', 'relatedTarget', 'which',
            'fromElement', 'toElement', 'offsetY',
            'pageX', 'pageY', 'screenX', 'screenY',
        ],
        fix: function (event, nativeEvent) {
            var eventDoc;
            var doc;
            var body;
            var target = event.target;
            var button = nativeEvent.button;
            // Calculate pageX/Y if missing and clientX/Y available
            if (target && isNullOrUndefined(event.pageX) && !isNullOrUndefined(nativeEvent.clientX)) {
                eventDoc = target.ownerDocument || document;
                doc = eventDoc.documentElement;
                body = eventDoc.body;
                event.pageX = nativeEvent.clientX +
                    (doc && doc.scrollLeft || body && body.scrollLeft || 0) -
                    (doc && doc.clientLeft || body && body.clientLeft || 0);
                event.pageY = nativeEvent.clientY +
                    (doc && doc.scrollTop || body && body.scrollTop || 0) -
                    (doc && doc.clientTop || body && body.clientTop || 0);
            }
            // which for click: 1 === left; 2 === middle; 3 === right
            // do not use button
            if (!event.which && button !== undefined) {
                if (button & 1) {
                    event.which = 1;
                }
                else if (button & 2) {
                    event.which = 3;
                }
                else if (button & 4) {
                    event.which = 2;
                }
                else {
                    event.which = 0;
                }
            }
            // add relatedTarget, if necessary
            if (!event.relatedTarget && event.fromElement) {
                event.relatedTarget = (event.fromElement === target) ? event.toElement : event.fromElement;
            }
            return event;
        },
    },
];
var DomEventObject = (function (_super) {
    __extends(DomEventObject, _super);
    function DomEventObject(nativeEvent) {
        var _this = _super.call(this) || this;
        var type = nativeEvent.type;
        var isNative = (typeof nativeEvent.stopPropagation === 'function') || (typeof nativeEvent.cancelBubble === 'boolean');
        _this.nativeEvent = nativeEvent;
        // in case dom event has been mark as default prevented by lower dom node
        var isDefaultPrevented = false;
        if ('defaultPrevented' in nativeEvent) {
            isDefaultPrevented = nativeEvent.defaultPrevented ? true : false;
        }
        else if ('getPreventDefault' in nativeEvent) {
            // https://bugzilla.mozilla.org/show_bug.cgi?id=691151
            isDefaultPrevented = nativeEvent['getPreventDefault']() ? true : false;
        }
        else if ('returnValue' in nativeEvent) {
            isDefaultPrevented = nativeEvent.returnValue === false ? true : false;
        }
        _this._isDefaultPrevented = isDefaultPrevented;
        var fixFns = [];
        var fixFn;
        var l;
        var prop;
        var props = commonProps.concat();
        eventNormalizers.forEach(function (normalizer) {
            if (type.match(normalizer.reg)) {
                props = props.concat(normalizer.props);
                if (normalizer.fix) {
                    fixFns.push(normalizer.fix);
                }
            }
        });
        l = props.length;
        // clone properties of the original event object
        while (l) {
            prop = props[--l];
            _this[prop] = nativeEvent[prop];
        }
        // fix target property, if necessary
        if (!_this.target && isNative) {
            _this.target = nativeEvent.srcElement || document; // srcElement might not be defined either
        }
        // check if target is a text node (safari)
        if (_this.target && _this.target.nodeType === 3) {
            _this.target = _this.target.parentNode;
        }
        l = fixFns.length;
        while (l) {
            fixFn = fixFns[--l];
            fixFn(_this, nativeEvent);
        }
        _this.timeStamp = nativeEvent.timeStamp || Date.now();
        return _this;
    }
    DomEventObject.prototype.preventDefault = function () {
        var e = this.nativeEvent;
        // if preventDefault exists run it on the original event
        if (e.preventDefault) {
            e.preventDefault();
        }
        else {
            // otherwise set the returnValue property of the original event to FALSE (IE)
            e.returnValue = false;
        }
        _super.prototype.preventDefault.call(this);
    };
    DomEventObject.prototype.stopPropagation = function () {
        var e = this.nativeEvent;
        // if stopPropagation exists run it on the original event
        if (e.stopPropagation) {
            e.stopPropagation();
        }
        else {
            // otherwise set the cancelBubble property of the original event to TRUE (IE)
            e.cancelBubble = true;
        }
        _super.prototype.stopPropagation.call(this);
    };
    return DomEventObject;
}(EventBaseObject_1.EventBaseObject));
exports.DomEventObject = DomEventObject;


/***/ }),
/* 480 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var EventBaseObject = (function () {
    function EventBaseObject() {
        this._isDefaultPrevented = false;
        this._isPropagationStopped = false;
        this._isImmediatePropagationStopped = false;
        this.timeStamp = Date.now();
        this.target = undefined;
        this.currentTarget = undefined;
    }
    Object.defineProperty(EventBaseObject.prototype, "isEventObject", {
        get: function () {
            return true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventBaseObject.prototype, "isDefaultPrevented", {
        get: function () {
            return this._isDefaultPrevented;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventBaseObject.prototype, "isPropagationStopped", {
        get: function () {
            return this._isPropagationStopped;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(EventBaseObject.prototype, "isImmediatePropagationStopped", {
        get: function () {
            return this._isImmediatePropagationStopped;
        },
        enumerable: true,
        configurable: true
    });
    EventBaseObject.prototype.preventDefault = function () {
        this._isDefaultPrevented = true;
    };
    EventBaseObject.prototype.stopPropagation = function () {
        this._isPropagationStopped = true;
    };
    EventBaseObject.prototype.stopImmediatePropagation = function () {
        this._isImmediatePropagationStopped = true;
        // fixed 1.2
        // call stopPropagation implicitly
        this.stopPropagation();
    };
    EventBaseObject.prototype.halt = function (immediate) {
        if (immediate) {
            this.stopImmediatePropagation();
        }
        else {
            this.stopPropagation();
        }
        this.preventDefault();
    };
    return EventBaseObject;
}());
exports.EventBaseObject = EventBaseObject;


/***/ }),
/* 481 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DomEventObject_1 = __webpack_require__(479);
function addEventListener(target, eventType, callback) {
    function wrapCallback(e) {
        var ne = new DomEventObject_1.DomEventObject(e);
        callback.call(target, ne);
    }
    if (target.addEventListener) {
        target.addEventListener(eventType, wrapCallback, false);
        return {
            remove: function () {
                target.removeEventListener(eventType, wrapCallback, false);
            },
        };
    }
    else if (target.attachEvent) {
        target.attachEvent("on" + eventType, wrapCallback);
        return {
            remove: function () {
                target.detachEvent("on" + eventType, wrapCallback);
            },
        };
    }
}
exports.addEventListener = addEventListener;


/***/ }),
/* 482 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Icon_1 = __webpack_require__(119);
exports.Icon = Icon_1.Icon;
var Row_1 = __webpack_require__(460);
exports.Row = Row_1.Row;
var Col_1 = __webpack_require__(459);
exports.Col = Col_1.Col;
var Button_1 = __webpack_require__(462);
exports.Button = Button_1.Button;
var Form_1 = __webpack_require__(465);
exports.Form = Form_1.Form;
var FormGroup_1 = __webpack_require__(468);
exports.FormGroup = FormGroup_1.FormGroup;
var ControlLabel_1 = __webpack_require__(464);
exports.ControlLabel = ControlLabel_1.ControlLabel;
var FormControl_1 = __webpack_require__(210);
exports.FormControl = FormControl_1.FormControl;
var HelpBlock_1 = __webpack_require__(469);
exports.HelpBlock = HelpBlock_1.HelpBlock;
var Checkbox_1 = __webpack_require__(463);
exports.Checkbox = Checkbox_1.Checkbox;
var InputGroup_1 = __webpack_require__(211);
exports.InputGroup = InputGroup_1.InputGroup;
var InputGroupAddon_1 = __webpack_require__(212);
exports.InputGroupAddon = InputGroupAddon_1.InputGroupAddon;
var InputGroupButton_1 = __webpack_require__(470);
exports.InputGroupButton = InputGroupButton_1.InputGroupButton;
var TextWithCopy_1 = __webpack_require__(471);
exports.TextWithCopy = TextWithCopy_1.TextWithCopy;
var Slider_1 = __webpack_require__(477);
exports.Slider = Slider_1.Slider;
var Range_1 = __webpack_require__(476);
exports.Range = Range_1.Range;
var ProgressLine_1 = __webpack_require__(473);
exports.ProgressLine = ProgressLine_1.ProgressLine;
var ProgressCircle_1 = __webpack_require__(472);
exports.ProgressCircle = ProgressCircle_1.ProgressCircle;


/***/ }),
/* 483 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



if (process.env.NODE_ENV !== 'production') {
  var invariant = __webpack_require__(1);
  var warning = __webpack_require__(2);
  var ReactPropTypesSecret = __webpack_require__(121);
  var loggedTypeFailures = {};
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (process.env.NODE_ENV !== 'production') {
    for (var typeSpecName in typeSpecs) {
      if (typeSpecs.hasOwnProperty(typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', componentName || 'React class', location, typeSpecName);
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');
        }
      }
    }
  }
}

module.exports = checkPropTypes;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 484 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



var emptyFunction = __webpack_require__(12);
var invariant = __webpack_require__(1);
var ReactPropTypesSecret = __webpack_require__(121);

module.exports = function() {
  function shim(props, propName, componentName, location, propFullName, secret) {
    if (secret === ReactPropTypesSecret) {
      // It is still safe when called from React.
      return;
    }
    invariant(
      false,
      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
      'Use PropTypes.checkPropTypes() to call them. ' +
      'Read more at http://fb.me/use-check-prop-types'
    );
  };
  shim.isRequired = shim;
  function getShim() {
    return shim;
  };
  // Important!
  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.
  var ReactPropTypes = {
    array: shim,
    bool: shim,
    func: shim,
    number: shim,
    object: shim,
    string: shim,
    symbol: shim,

    any: shim,
    arrayOf: getShim,
    element: shim,
    instanceOf: getShim,
    node: shim,
    objectOf: getShim,
    oneOf: getShim,
    oneOfType: getShim,
    shape: getShim
  };

  ReactPropTypes.checkPropTypes = emptyFunction;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),
/* 485 */,
/* 486 */,
/* 487 */,
/* 488 */,
/* 489 */,
/* 490 */,
/* 491 */,
/* 492 */,
/* 493 */,
/* 494 */,
/* 495 */,
/* 496 */,
/* 497 */,
/* 498 */,
/* 499 */,
/* 500 */,
/* 501 */,
/* 502 */,
/* 503 */,
/* 504 */,
/* 505 */,
/* 506 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ARIADOMPropertyConfig = {
  Properties: {
    // Global States and Properties
    'aria-current': 0, // state
    'aria-details': 0,
    'aria-disabled': 0, // state
    'aria-hidden': 0, // state
    'aria-invalid': 0, // state
    'aria-keyshortcuts': 0,
    'aria-label': 0,
    'aria-roledescription': 0,
    // Widget Attributes
    'aria-autocomplete': 0,
    'aria-checked': 0,
    'aria-expanded': 0,
    'aria-haspopup': 0,
    'aria-level': 0,
    'aria-modal': 0,
    'aria-multiline': 0,
    'aria-multiselectable': 0,
    'aria-orientation': 0,
    'aria-placeholder': 0,
    'aria-pressed': 0,
    'aria-readonly': 0,
    'aria-required': 0,
    'aria-selected': 0,
    'aria-sort': 0,
    'aria-valuemax': 0,
    'aria-valuemin': 0,
    'aria-valuenow': 0,
    'aria-valuetext': 0,
    // Live Region Attributes
    'aria-atomic': 0,
    'aria-busy': 0,
    'aria-live': 0,
    'aria-relevant': 0,
    // Drag-and-Drop Attributes
    'aria-dropeffect': 0,
    'aria-grabbed': 0,
    // Relationship Attributes
    'aria-activedescendant': 0,
    'aria-colcount': 0,
    'aria-colindex': 0,
    'aria-colspan': 0,
    'aria-controls': 0,
    'aria-describedby': 0,
    'aria-errormessage': 0,
    'aria-flowto': 0,
    'aria-labelledby': 0,
    'aria-owns': 0,
    'aria-posinset': 0,
    'aria-rowcount': 0,
    'aria-rowindex': 0,
    'aria-rowspan': 0,
    'aria-setsize': 0
  },
  DOMAttributeNames: {},
  DOMPropertyNames: {}
};

module.exports = ARIADOMPropertyConfig;

/***/ }),
/* 507 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactDOMComponentTree = __webpack_require__(11);

var focusNode = __webpack_require__(60);

var AutoFocusUtils = {
  focusDOMComponent: function () {
    focusNode(ReactDOMComponentTree.getNodeFromInstance(this));
  }
};

module.exports = AutoFocusUtils;

/***/ }),
/* 508 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var EventPropagators = __webpack_require__(54);
var ExecutionEnvironment = __webpack_require__(5);
var FallbackCompositionState = __webpack_require__(514);
var SyntheticCompositionEvent = __webpack_require__(557);
var SyntheticInputEvent = __webpack_require__(560);

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
var START_KEYCODE = 229;

var canUseCompositionEvent = ExecutionEnvironment.canUseDOM && 'CompositionEvent' in window;

var documentMode = null;
if (ExecutionEnvironment.canUseDOM && 'documentMode' in document) {
  documentMode = document.documentMode;
}

// Webkit offers a very useful `textInput` event that can be used to
// directly represent `beforeInput`. The IE `textinput` event is not as
// useful, so we don't use it.
var canUseTextInputEvent = ExecutionEnvironment.canUseDOM && 'TextEvent' in window && !documentMode && !isPresto();

// In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. Japanese ideographic
// spaces, for instance (\u3000) are not recorded correctly.
var useFallbackCompositionData = ExecutionEnvironment.canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

/**
 * Opera <= 12 includes TextEvent in window, but does not fire
 * text input events. Rely on keypress instead.
 */
function isPresto() {
  var opera = window.opera;
  return typeof opera === 'object' && typeof opera.version === 'function' && parseInt(opera.version(), 10) <= 12;
}

var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

// Events and their corresponding property names.
var eventTypes = {
  beforeInput: {
    phasedRegistrationNames: {
      bubbled: 'onBeforeInput',
      captured: 'onBeforeInputCapture'
    },
    dependencies: ['topCompositionEnd', 'topKeyPress', 'topTextInput', 'topPaste']
  },
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionEnd',
      captured: 'onCompositionEndCapture'
    },
    dependencies: ['topBlur', 'topCompositionEnd', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionStart',
      captured: 'onCompositionStartCapture'
    },
    dependencies: ['topBlur', 'topCompositionStart', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionUpdate',
      captured: 'onCompositionUpdateCapture'
    },
    dependencies: ['topBlur', 'topCompositionUpdate', 'topKeyDown', 'topKeyPress', 'topKeyUp', 'topMouseDown']
  }
};

// Track whether we've ever handled a keypress on the space key.
var hasSpaceKeypress = false;

/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */
function isKeypressCommand(nativeEvent) {
  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
  !(nativeEvent.ctrlKey && nativeEvent.altKey);
}

/**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */
function getCompositionEventType(topLevelType) {
  switch (topLevelType) {
    case 'topCompositionStart':
      return eventTypes.compositionStart;
    case 'topCompositionEnd':
      return eventTypes.compositionEnd;
    case 'topCompositionUpdate':
      return eventTypes.compositionUpdate;
  }
}

/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionStart(topLevelType, nativeEvent) {
  return topLevelType === 'topKeyDown' && nativeEvent.keyCode === START_KEYCODE;
}

/**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionEnd(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case 'topKeyUp':
      // Command keys insert or clear IME input.
      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
    case 'topKeyDown':
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return nativeEvent.keyCode !== START_KEYCODE;
    case 'topKeyPress':
    case 'topMouseDown':
    case 'topBlur':
      // Events are not possible without cancelling IME.
      return true;
    default:
      return false;
  }
}

/**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */
function getDataFromCustomEvent(nativeEvent) {
  var detail = nativeEvent.detail;
  if (typeof detail === 'object' && 'data' in detail) {
    return detail.data;
  }
  return null;
}

// Track the current IME composition fallback object, if any.
var currentComposition = null;

/**
 * @return {?object} A SyntheticCompositionEvent.
 */
function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var eventType;
  var fallbackData;

  if (canUseCompositionEvent) {
    eventType = getCompositionEventType(topLevelType);
  } else if (!currentComposition) {
    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionStart;
    }
  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
    eventType = eventTypes.compositionEnd;
  }

  if (!eventType) {
    return null;
  }

  if (useFallbackCompositionData) {
    // The current composition is stored statically and must not be
    // overwritten while composition continues.
    if (!currentComposition && eventType === eventTypes.compositionStart) {
      currentComposition = FallbackCompositionState.getPooled(nativeEventTarget);
    } else if (eventType === eventTypes.compositionEnd) {
      if (currentComposition) {
        fallbackData = currentComposition.getData();
      }
    }
  }

  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

  if (fallbackData) {
    // Inject data generated from fallback path into the synthetic event.
    // This matches the property of native CompositionEventInterface.
    event.data = fallbackData;
  } else {
    var customData = getDataFromCustomEvent(nativeEvent);
    if (customData !== null) {
      event.data = customData;
    }
  }

  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The string corresponding to this `beforeInput` event.
 */
function getNativeBeforeInputChars(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case 'topCompositionEnd':
      return getDataFromCustomEvent(nativeEvent);
    case 'topKeyPress':
      /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */
      var which = nativeEvent.which;
      if (which !== SPACEBAR_CODE) {
        return null;
      }

      hasSpaceKeypress = true;
      return SPACEBAR_CHAR;

    case 'topTextInput':
      // Record the characters to be added to the DOM.
      var chars = nativeEvent.data;

      // If it's a spacebar character, assume that we have already handled
      // it at the keypress level and bail immediately. Android Chrome
      // doesn't give us keycodes, so we need to blacklist it.
      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
        return null;
      }

      return chars;

    default:
      // For other native event types, do nothing.
      return null;
  }
}

/**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 *
 * @param {string} topLevelType Record from `EventConstants`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The fallback string for this `beforeInput` event.
 */
function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
  // If we are currently composing (IME) and using a fallback to do so,
  // try to extract the composed characters from the fallback object.
  // If composition event is available, we extract a string only at
  // compositionevent, otherwise extract it at fallback events.
  if (currentComposition) {
    if (topLevelType === 'topCompositionEnd' || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
      var chars = currentComposition.getData();
      FallbackCompositionState.release(currentComposition);
      currentComposition = null;
      return chars;
    }
    return null;
  }

  switch (topLevelType) {
    case 'topPaste':
      // If a paste event occurs after a keypress, throw out the input
      // chars. Paste events should not lead to BeforeInput events.
      return null;
    case 'topKeyPress':
      /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
      if (nativeEvent.which && !isKeypressCommand(nativeEvent)) {
        return String.fromCharCode(nativeEvent.which);
      }
      return null;
    case 'topCompositionEnd':
      return useFallbackCompositionData ? null : nativeEvent.data;
    default:
      return null;
  }
}

/**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */
function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var chars;

  if (canUseTextInputEvent) {
    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
  } else {
    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
  }

  // If no characters are being inserted, no BeforeInput event should
  // be fired.
  if (!chars) {
    return null;
  }

  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

  event.data = chars;
  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */
var BeforeInputEventPlugin = {
  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    return [extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget), extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget)];
  }
};

module.exports = BeforeInputEventPlugin;

/***/ }),
/* 509 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var CSSProperty = __webpack_require__(223);
var ExecutionEnvironment = __webpack_require__(5);
var ReactInstrumentation = __webpack_require__(16);

var camelizeStyleName = __webpack_require__(150);
var dangerousStyleValue = __webpack_require__(567);
var hyphenateStyleName = __webpack_require__(154);
var memoizeStringOnly = __webpack_require__(155);
var warning = __webpack_require__(2);

var processStyleName = memoizeStringOnly(function (styleName) {
  return hyphenateStyleName(styleName);
});

var hasShorthandPropertyBug = false;
var styleFloatAccessor = 'cssFloat';
if (ExecutionEnvironment.canUseDOM) {
  var tempStyle = document.createElement('div').style;
  try {
    // IE8 throws "Invalid argument." if resetting shorthand style properties.
    tempStyle.font = '';
  } catch (e) {
    hasShorthandPropertyBug = true;
  }
  // IE8 only supports accessing cssFloat (standard) as styleFloat
  if (document.documentElement.style.cssFloat === undefined) {
    styleFloatAccessor = 'styleFloat';
  }
}

if (process.env.NODE_ENV !== 'production') {
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;

  // style values shouldn't contain a semicolon
  var badStyleValueWithSemicolonPattern = /;\s*$/;

  var warnedStyleNames = {};
  var warnedStyleValues = {};
  var warnedForNaNValue = false;

  var warnHyphenatedStyleName = function (name, owner) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported style property %s. Did you mean %s?%s', name, camelizeStyleName(name), checkRenderMessage(owner)) : void 0;
  };

  var warnBadVendoredStyleName = function (name, owner) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?%s', name, name.charAt(0).toUpperCase() + name.slice(1), checkRenderMessage(owner)) : void 0;
  };

  var warnStyleValueWithSemicolon = function (name, value, owner) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;
    process.env.NODE_ENV !== 'production' ? warning(false, "Style property values shouldn't contain a semicolon.%s " + 'Try "%s: %s" instead.', checkRenderMessage(owner), name, value.replace(badStyleValueWithSemicolonPattern, '')) : void 0;
  };

  var warnStyleValueIsNaN = function (name, value, owner) {
    if (warnedForNaNValue) {
      return;
    }

    warnedForNaNValue = true;
    process.env.NODE_ENV !== 'production' ? warning(false, '`NaN` is an invalid value for the `%s` css style property.%s', name, checkRenderMessage(owner)) : void 0;
  };

  var checkRenderMessage = function (owner) {
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' Check the render method of `' + name + '`.';
      }
    }
    return '';
  };

  /**
   * @param {string} name
   * @param {*} value
   * @param {ReactDOMComponent} component
   */
  var warnValidStyle = function (name, value, component) {
    var owner;
    if (component) {
      owner = component._currentElement._owner;
    }
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name, owner);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name, owner);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value, owner);
    }

    if (typeof value === 'number' && isNaN(value)) {
      warnStyleValueIsNaN(name, value, owner);
    }
  };
}

/**
 * Operations for dealing with CSS properties.
 */
var CSSPropertyOperations = {
  /**
   * Serializes a mapping of style properties for use as inline styles:
   *
   *   > createMarkupForStyles({width: '200px', height: 0})
   *   "width:200px;height:0;"
   *
   * Undefined values are ignored so that declarative programming is easier.
   * The result should be HTML-escaped before insertion into the DOM.
   *
   * @param {object} styles
   * @param {ReactDOMComponent} component
   * @return {?string}
   */
  createMarkupForStyles: function (styles, component) {
    var serialized = '';
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var isCustomProperty = styleName.indexOf('--') === 0;
      var styleValue = styles[styleName];
      if (process.env.NODE_ENV !== 'production') {
        if (!isCustomProperty) {
          warnValidStyle(styleName, styleValue, component);
        }
      }
      if (styleValue != null) {
        serialized += processStyleName(styleName) + ':';
        serialized += dangerousStyleValue(styleName, styleValue, component, isCustomProperty) + ';';
      }
    }
    return serialized || null;
  },

  /**
   * Sets the value for multiple styles on a node.  If a value is specified as
   * '' (empty string), the corresponding style property will be unset.
   *
   * @param {DOMElement} node
   * @param {object} styles
   * @param {ReactDOMComponent} component
   */
  setValueForStyles: function (node, styles, component) {
    if (process.env.NODE_ENV !== 'production') {
      ReactInstrumentation.debugTool.onHostOperation({
        instanceID: component._debugID,
        type: 'update styles',
        payload: styles
      });
    }

    var style = node.style;
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var isCustomProperty = styleName.indexOf('--') === 0;
      if (process.env.NODE_ENV !== 'production') {
        if (!isCustomProperty) {
          warnValidStyle(styleName, styles[styleName], component);
        }
      }
      var styleValue = dangerousStyleValue(styleName, styles[styleName], component, isCustomProperty);
      if (styleName === 'float' || styleName === 'cssFloat') {
        styleName = styleFloatAccessor;
      }
      if (isCustomProperty) {
        style.setProperty(styleName, styleValue);
      } else if (styleValue) {
        style[styleName] = styleValue;
      } else {
        var expansion = hasShorthandPropertyBug && CSSProperty.shorthandPropertyExpansions[styleName];
        if (expansion) {
          // Shorthand property that IE8 won't like unsetting, so unset each
          // component to placate it
          for (var individualStyleName in expansion) {
            style[individualStyleName] = '';
          }
        } else {
          style[styleName] = '';
        }
      }
    }
  }
};

module.exports = CSSPropertyOperations;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 510 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var EventPluginHub = __webpack_require__(53);
var EventPropagators = __webpack_require__(54);
var ExecutionEnvironment = __webpack_require__(5);
var ReactDOMComponentTree = __webpack_require__(11);
var ReactUpdates = __webpack_require__(19);
var SyntheticEvent = __webpack_require__(22);

var inputValueTracking = __webpack_require__(240);
var getEventTarget = __webpack_require__(136);
var isEventSupported = __webpack_require__(137);
var isTextInputElement = __webpack_require__(242);

var eventTypes = {
  change: {
    phasedRegistrationNames: {
      bubbled: 'onChange',
      captured: 'onChangeCapture'
    },
    dependencies: ['topBlur', 'topChange', 'topClick', 'topFocus', 'topInput', 'topKeyDown', 'topKeyUp', 'topSelectionChange']
  }
};

function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
  var event = SyntheticEvent.getPooled(eventTypes.change, inst, nativeEvent, target);
  event.type = 'change';
  EventPropagators.accumulateTwoPhaseDispatches(event);
  return event;
}
/**
 * For IE shims
 */
var activeElement = null;
var activeElementInst = null;

/**
 * SECTION: handle `change` event
 */
function shouldUseChangeEvent(elem) {
  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
}

var doesChangeEventBubble = false;
if (ExecutionEnvironment.canUseDOM) {
  // See `handleChange` comment below
  doesChangeEventBubble = isEventSupported('change') && (!document.documentMode || document.documentMode > 8);
}

function manualDispatchChangeEvent(nativeEvent) {
  var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent));

  // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.
  ReactUpdates.batchedUpdates(runEventInBatch, event);
}

function runEventInBatch(event) {
  EventPluginHub.enqueueEvents(event);
  EventPluginHub.processEventQueue(false);
}

function startWatchingForChangeEventIE8(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onchange', manualDispatchChangeEvent);
}

function stopWatchingForChangeEventIE8() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onchange', manualDispatchChangeEvent);
  activeElement = null;
  activeElementInst = null;
}

function getInstIfValueChanged(targetInst, nativeEvent) {
  var updated = inputValueTracking.updateValueIfChanged(targetInst);
  var simulated = nativeEvent.simulated === true && ChangeEventPlugin._allowSimulatedPassThrough;

  if (updated || simulated) {
    return targetInst;
  }
}

function getTargetInstForChangeEvent(topLevelType, targetInst) {
  if (topLevelType === 'topChange') {
    return targetInst;
  }
}

function handleEventsForChangeEventIE8(topLevelType, target, targetInst) {
  if (topLevelType === 'topFocus') {
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForChangeEventIE8();
    startWatchingForChangeEventIE8(target, targetInst);
  } else if (topLevelType === 'topBlur') {
    stopWatchingForChangeEventIE8();
  }
}

/**
 * SECTION: handle `input` event
 */
var isInputEventSupported = false;
if (ExecutionEnvironment.canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events.

  isInputEventSupported = isEventSupported('input') && (!('documentMode' in document) || document.documentMode > 9);
}

/**
 * (For IE <=9) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */
function startWatchingForValueChange(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onpropertychange', handlePropertyChange);
}

/**
 * (For IE <=9) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */
function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onpropertychange', handlePropertyChange);

  activeElement = null;
  activeElementInst = null;
}

/**
 * (For IE <=9) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */
function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }
  if (getInstIfValueChanged(activeElementInst, nativeEvent)) {
    manualDispatchChangeEvent(nativeEvent);
  }
}

function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
  if (topLevelType === 'topFocus') {
    // In IE8, we can capture almost all .value changes by adding a
    // propertychange handler and looking for events with propertyName
    // equal to 'value'
    // In IE9, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(target, targetInst);
  } else if (topLevelType === 'topBlur') {
    stopWatchingForValueChange();
  }
}

// For IE8 and IE9.
function getTargetInstForInputEventPolyfill(topLevelType, targetInst, nativeEvent) {
  if (topLevelType === 'topSelectionChange' || topLevelType === 'topKeyUp' || topLevelType === 'topKeyDown') {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    return getInstIfValueChanged(activeElementInst, nativeEvent);
  }
}

/**
 * SECTION: handle `click` event
 */
function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
}

function getTargetInstForClickEvent(topLevelType, targetInst, nativeEvent) {
  if (topLevelType === 'topClick') {
    return getInstIfValueChanged(targetInst, nativeEvent);
  }
}

function getTargetInstForInputOrChangeEvent(topLevelType, targetInst, nativeEvent) {
  if (topLevelType === 'topInput' || topLevelType === 'topChange') {
    return getInstIfValueChanged(targetInst, nativeEvent);
  }
}

function handleControlledInputBlur(inst, node) {
  // TODO: In IE, inst is occasionally null. Why?
  if (inst == null) {
    return;
  }

  // Fiber and ReactDOM keep wrapper state in separate places
  var state = inst._wrapperState || node._wrapperState;

  if (!state || !state.controlled || node.type !== 'number') {
    return;
  }

  // If controlled, assign the value attribute to the current value on blur
  var value = '' + node.value;
  if (node.getAttribute('value') !== value) {
    node.setAttribute('value', value);
  }
}

/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */
var ChangeEventPlugin = {
  eventTypes: eventTypes,

  _allowSimulatedPassThrough: true,
  _isInputEventSupported: isInputEventSupported,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

    var getTargetInstFunc, handleEventFunc;
    if (shouldUseChangeEvent(targetNode)) {
      if (doesChangeEventBubble) {
        getTargetInstFunc = getTargetInstForChangeEvent;
      } else {
        handleEventFunc = handleEventsForChangeEventIE8;
      }
    } else if (isTextInputElement(targetNode)) {
      if (isInputEventSupported) {
        getTargetInstFunc = getTargetInstForInputOrChangeEvent;
      } else {
        getTargetInstFunc = getTargetInstForInputEventPolyfill;
        handleEventFunc = handleEventsForInputEventPolyfill;
      }
    } else if (shouldUseClickEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForClickEvent;
    }

    if (getTargetInstFunc) {
      var inst = getTargetInstFunc(topLevelType, targetInst, nativeEvent);
      if (inst) {
        var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);
        return event;
      }
    }

    if (handleEventFunc) {
      handleEventFunc(topLevelType, targetNode, targetInst);
    }

    // When blurring, set the value attribute for number inputs
    if (topLevelType === 'topBlur') {
      handleControlledInputBlur(targetInst, targetNode);
    }
  }
};

module.exports = ChangeEventPlugin;

/***/ }),
/* 511 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(7);

var DOMLazyTree = __webpack_require__(40);
var ExecutionEnvironment = __webpack_require__(5);

var createNodesFromMarkup = __webpack_require__(152);
var emptyFunction = __webpack_require__(12);
var invariant = __webpack_require__(1);

var Danger = {
  /**
   * Replaces a node with a string of markup at its current position within its
   * parent. The markup must render into a single root node.
   *
   * @param {DOMElement} oldChild Child node to replace.
   * @param {string} markup Markup to render in place of the child node.
   * @internal
   */
  dangerouslyReplaceNodeWithMarkup: function (oldChild, markup) {
    !ExecutionEnvironment.canUseDOM ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot render markup in a worker thread. Make sure `window` and `document` are available globally before requiring React when unit testing or use ReactDOMServer.renderToString() for server rendering.') : _prodInvariant('56') : void 0;
    !markup ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Missing markup.') : _prodInvariant('57') : void 0;
    !(oldChild.nodeName !== 'HTML') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'dangerouslyReplaceNodeWithMarkup(...): Cannot replace markup of the <html> node. This is because browser quirks make this unreliable and/or slow. If you want to render to the root you must use server rendering. See ReactDOMServer.renderToString().') : _prodInvariant('58') : void 0;

    if (typeof markup === 'string') {
      var newChild = createNodesFromMarkup(markup, emptyFunction)[0];
      oldChild.parentNode.replaceChild(newChild, oldChild);
    } else {
      DOMLazyTree.replaceChildWithTree(oldChild, markup);
    }
  }
};

module.exports = Danger;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 512 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */

var DefaultEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'TapEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

module.exports = DefaultEventPluginOrder;

/***/ }),
/* 513 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var EventPropagators = __webpack_require__(54);
var ReactDOMComponentTree = __webpack_require__(11);
var SyntheticMouseEvent = __webpack_require__(82);

var eventTypes = {
  mouseEnter: {
    registrationName: 'onMouseEnter',
    dependencies: ['topMouseOut', 'topMouseOver']
  },
  mouseLeave: {
    registrationName: 'onMouseLeave',
    dependencies: ['topMouseOut', 'topMouseOver']
  }
};

var EnterLeaveEventPlugin = {
  eventTypes: eventTypes,

  /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (topLevelType === 'topMouseOver' && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
      return null;
    }
    if (topLevelType !== 'topMouseOut' && topLevelType !== 'topMouseOver') {
      // Must not be a mouse in or mouse out - ignoring.
      return null;
    }

    var win;
    if (nativeEventTarget.window === nativeEventTarget) {
      // `nativeEventTarget` is probably a window object.
      win = nativeEventTarget;
    } else {
      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
      var doc = nativeEventTarget.ownerDocument;
      if (doc) {
        win = doc.defaultView || doc.parentWindow;
      } else {
        win = window;
      }
    }

    var from;
    var to;
    if (topLevelType === 'topMouseOut') {
      from = targetInst;
      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
      to = related ? ReactDOMComponentTree.getClosestInstanceFromNode(related) : null;
    } else {
      // Moving to a node from outside the window.
      from = null;
      to = targetInst;
    }

    if (from === to) {
      // Nothing pertains to our managed components.
      return null;
    }

    var fromNode = from == null ? win : ReactDOMComponentTree.getNodeFromInstance(from);
    var toNode = to == null ? win : ReactDOMComponentTree.getNodeFromInstance(to);

    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, from, nativeEvent, nativeEventTarget);
    leave.type = 'mouseleave';
    leave.target = fromNode;
    leave.relatedTarget = toNode;

    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, to, nativeEvent, nativeEventTarget);
    enter.type = 'mouseenter';
    enter.target = toNode;
    enter.relatedTarget = fromNode;

    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, from, to);

    return [leave, enter];
  }
};

module.exports = EnterLeaveEventPlugin;

/***/ }),
/* 514 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(4);

var PooledClass = __webpack_require__(30);

var getTextContentAccessor = __webpack_require__(239);

/**
 * This helper class stores information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 * @param {DOMEventTarget} root
 */
function FallbackCompositionState(root) {
  this._root = root;
  this._startText = this.getText();
  this._fallbackText = null;
}

_assign(FallbackCompositionState.prototype, {
  destructor: function () {
    this._root = null;
    this._startText = null;
    this._fallbackText = null;
  },

  /**
   * Get current text of input.
   *
   * @return {string}
   */
  getText: function () {
    if ('value' in this._root) {
      return this._root.value;
    }
    return this._root[getTextContentAccessor()];
  },

  /**
   * Determine the differing substring between the initially stored
   * text content and the current content.
   *
   * @return {string}
   */
  getData: function () {
    if (this._fallbackText) {
      return this._fallbackText;
    }

    var start;
    var startValue = this._startText;
    var startLength = startValue.length;
    var end;
    var endValue = this.getText();
    var endLength = endValue.length;

    for (start = 0; start < startLength; start++) {
      if (startValue[start] !== endValue[start]) {
        break;
      }
    }

    var minEnd = startLength - start;
    for (end = 1; end <= minEnd; end++) {
      if (startValue[startLength - end] !== endValue[endLength - end]) {
        break;
      }
    }

    var sliceTail = end > 1 ? 1 - end : undefined;
    this._fallbackText = endValue.slice(start, sliceTail);
    return this._fallbackText;
  }
});

PooledClass.addPoolingTo(FallbackCompositionState);

module.exports = FallbackCompositionState;

/***/ }),
/* 515 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMProperty = __webpack_require__(25);

var MUST_USE_PROPERTY = DOMProperty.injection.MUST_USE_PROPERTY;
var HAS_BOOLEAN_VALUE = DOMProperty.injection.HAS_BOOLEAN_VALUE;
var HAS_NUMERIC_VALUE = DOMProperty.injection.HAS_NUMERIC_VALUE;
var HAS_POSITIVE_NUMERIC_VALUE = DOMProperty.injection.HAS_POSITIVE_NUMERIC_VALUE;
var HAS_OVERLOADED_BOOLEAN_VALUE = DOMProperty.injection.HAS_OVERLOADED_BOOLEAN_VALUE;

var HTMLDOMPropertyConfig = {
  isCustomAttribute: RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$')),
  Properties: {
    /**
     * Standard Properties
     */
    accept: 0,
    acceptCharset: 0,
    accessKey: 0,
    action: 0,
    allowFullScreen: HAS_BOOLEAN_VALUE,
    allowTransparency: 0,
    alt: 0,
    // specifies target context for links with `preload` type
    as: 0,
    async: HAS_BOOLEAN_VALUE,
    autoComplete: 0,
    // autoFocus is polyfilled/normalized by AutoFocusUtils
    // autoFocus: HAS_BOOLEAN_VALUE,
    autoPlay: HAS_BOOLEAN_VALUE,
    capture: HAS_BOOLEAN_VALUE,
    cellPadding: 0,
    cellSpacing: 0,
    charSet: 0,
    challenge: 0,
    checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    cite: 0,
    classID: 0,
    className: 0,
    cols: HAS_POSITIVE_NUMERIC_VALUE,
    colSpan: 0,
    content: 0,
    contentEditable: 0,
    contextMenu: 0,
    controls: HAS_BOOLEAN_VALUE,
    coords: 0,
    crossOrigin: 0,
    data: 0, // For `<object />` acts as `src`.
    dateTime: 0,
    'default': HAS_BOOLEAN_VALUE,
    defer: HAS_BOOLEAN_VALUE,
    dir: 0,
    disabled: HAS_BOOLEAN_VALUE,
    download: HAS_OVERLOADED_BOOLEAN_VALUE,
    draggable: 0,
    encType: 0,
    form: 0,
    formAction: 0,
    formEncType: 0,
    formMethod: 0,
    formNoValidate: HAS_BOOLEAN_VALUE,
    formTarget: 0,
    frameBorder: 0,
    headers: 0,
    height: 0,
    hidden: HAS_BOOLEAN_VALUE,
    high: 0,
    href: 0,
    hrefLang: 0,
    htmlFor: 0,
    httpEquiv: 0,
    icon: 0,
    id: 0,
    inputMode: 0,
    integrity: 0,
    is: 0,
    keyParams: 0,
    keyType: 0,
    kind: 0,
    label: 0,
    lang: 0,
    list: 0,
    loop: HAS_BOOLEAN_VALUE,
    low: 0,
    manifest: 0,
    marginHeight: 0,
    marginWidth: 0,
    max: 0,
    maxLength: 0,
    media: 0,
    mediaGroup: 0,
    method: 0,
    min: 0,
    minLength: 0,
    // Caution; `option.selected` is not updated if `select.multiple` is
    // disabled with `removeAttribute`.
    multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    name: 0,
    nonce: 0,
    noValidate: HAS_BOOLEAN_VALUE,
    open: HAS_BOOLEAN_VALUE,
    optimum: 0,
    pattern: 0,
    placeholder: 0,
    playsInline: HAS_BOOLEAN_VALUE,
    poster: 0,
    preload: 0,
    profile: 0,
    radioGroup: 0,
    readOnly: HAS_BOOLEAN_VALUE,
    referrerPolicy: 0,
    rel: 0,
    required: HAS_BOOLEAN_VALUE,
    reversed: HAS_BOOLEAN_VALUE,
    role: 0,
    rows: HAS_POSITIVE_NUMERIC_VALUE,
    rowSpan: HAS_NUMERIC_VALUE,
    sandbox: 0,
    scope: 0,
    scoped: HAS_BOOLEAN_VALUE,
    scrolling: 0,
    seamless: HAS_BOOLEAN_VALUE,
    selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,
    shape: 0,
    size: HAS_POSITIVE_NUMERIC_VALUE,
    sizes: 0,
    span: HAS_POSITIVE_NUMERIC_VALUE,
    spellCheck: 0,
    src: 0,
    srcDoc: 0,
    srcLang: 0,
    srcSet: 0,
    start: HAS_NUMERIC_VALUE,
    step: 0,
    style: 0,
    summary: 0,
    tabIndex: 0,
    target: 0,
    title: 0,
    // Setting .type throws on non-<input> tags
    type: 0,
    useMap: 0,
    value: 0,
    width: 0,
    wmode: 0,
    wrap: 0,

    /**
     * RDFa Properties
     */
    about: 0,
    datatype: 0,
    inlist: 0,
    prefix: 0,
    // property is also supported for OpenGraph in meta tags.
    property: 0,
    resource: 0,
    'typeof': 0,
    vocab: 0,

    /**
     * Non-standard Properties
     */
    // autoCapitalize and autoCorrect are supported in Mobile Safari for
    // keyboard hints.
    autoCapitalize: 0,
    autoCorrect: 0,
    // autoSave allows WebKit/Blink to persist values of input fields on page reloads
    autoSave: 0,
    // color is for Safari mask-icon link
    color: 0,
    // itemProp, itemScope, itemType are for
    // Microdata support. See http://schema.org/docs/gs.html
    itemProp: 0,
    itemScope: HAS_BOOLEAN_VALUE,
    itemType: 0,
    // itemID and itemRef are for Microdata support as well but
    // only specified in the WHATWG spec document. See
    // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api
    itemID: 0,
    itemRef: 0,
    // results show looking glass icon and recent searches on input
    // search fields in WebKit/Blink
    results: 0,
    // IE-only attribute that specifies security restrictions on an iframe
    // as an alternative to the sandbox attribute on IE<10
    security: 0,
    // IE-only attribute that controls focus behavior
    unselectable: 0
  },
  DOMAttributeNames: {
    acceptCharset: 'accept-charset',
    className: 'class',
    htmlFor: 'for',
    httpEquiv: 'http-equiv'
  },
  DOMPropertyNames: {},
  DOMMutationMethods: {
    value: function (node, value) {
      if (value == null) {
        return node.removeAttribute('value');
      }

      // Number inputs get special treatment due to some edge cases in
      // Chrome. Let everything else assign the value attribute as normal.
      // https://github.com/facebook/react/issues/7253#issuecomment-236074326
      if (node.type !== 'number' || node.hasAttribute('value') === false) {
        node.setAttribute('value', '' + value);
      } else if (node.validity && !node.validity.badInput && node.ownerDocument.activeElement !== node) {
        // Don't assign an attribute if validation reports bad
        // input. Chrome will clear the value. Additionally, don't
        // operate on inputs that have focus, otherwise Chrome might
        // strip off trailing decimal places and cause the user's
        // cursor position to jump to the beginning of the input.
        //
        // In ReactDOMInput, we have an onBlur event that will trigger
        // this function again when focus is lost.
        node.setAttribute('value', '' + value);
      }
    }
  }
};

module.exports = HTMLDOMPropertyConfig;

/***/ }),
/* 516 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactReconciler = __webpack_require__(41);

var instantiateReactComponent = __webpack_require__(241);
var KeyEscapeUtils = __webpack_require__(128);
var shouldUpdateReactComponent = __webpack_require__(138);
var traverseAllChildren = __webpack_require__(244);
var warning = __webpack_require__(2);

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = __webpack_require__(8);
}

function instantiateChild(childInstances, child, name, selfDebugID) {
  // We found a component instance.
  var keyUnique = childInstances[name] === undefined;
  if (process.env.NODE_ENV !== 'production') {
    if (!ReactComponentTreeHook) {
      ReactComponentTreeHook = __webpack_require__(8);
    }
    if (!keyUnique) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
    }
  }
  if (child != null && keyUnique) {
    childInstances[name] = instantiateReactComponent(child, true);
  }
}

/**
 * ReactChildReconciler provides helpers for initializing or updating a set of
 * children. Its output is suitable for passing it onto ReactMultiChild which
 * does diffed reordering and insertion.
 */
var ReactChildReconciler = {
  /**
   * Generates a "mount image" for each of the supplied children. In the case
   * of `ReactDOMComponent`, a mount image is a string of markup.
   *
   * @param {?object} nestedChildNodes Nested child maps.
   * @return {?object} A set of child instances.
   * @internal
   */
  instantiateChildren: function (nestedChildNodes, transaction, context, selfDebugID) // 0 in production and for roots
  {
    if (nestedChildNodes == null) {
      return null;
    }
    var childInstances = {};

    if (process.env.NODE_ENV !== 'production') {
      traverseAllChildren(nestedChildNodes, function (childInsts, child, name) {
        return instantiateChild(childInsts, child, name, selfDebugID);
      }, childInstances);
    } else {
      traverseAllChildren(nestedChildNodes, instantiateChild, childInstances);
    }
    return childInstances;
  },

  /**
   * Updates the rendered children and returns a new set of children.
   *
   * @param {?object} prevChildren Previously initialized set of children.
   * @param {?object} nextChildren Flat child element maps.
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   * @return {?object} A new set of child instances.
   * @internal
   */
  updateChildren: function (prevChildren, nextChildren, mountImages, removedNodes, transaction, hostParent, hostContainerInfo, context, selfDebugID) // 0 in production and for roots
  {
    // We currently don't have a way to track moves here but if we use iterators
    // instead of for..in we can zip the iterators and check if an item has
    // moved.
    // TODO: If nothing has changed, return the prevChildren object so that we
    // can quickly bailout if nothing has changed.
    if (!nextChildren && !prevChildren) {
      return;
    }
    var name;
    var prevChild;
    for (name in nextChildren) {
      if (!nextChildren.hasOwnProperty(name)) {
        continue;
      }
      prevChild = prevChildren && prevChildren[name];
      var prevElement = prevChild && prevChild._currentElement;
      var nextElement = nextChildren[name];
      if (prevChild != null && shouldUpdateReactComponent(prevElement, nextElement)) {
        ReactReconciler.receiveComponent(prevChild, nextElement, transaction, context);
        nextChildren[name] = prevChild;
      } else {
        if (prevChild) {
          removedNodes[name] = ReactReconciler.getHostNode(prevChild);
          ReactReconciler.unmountComponent(prevChild, false);
        }
        // The child must be instantiated before it's mounted.
        var nextChildInstance = instantiateReactComponent(nextElement, true);
        nextChildren[name] = nextChildInstance;
        // Creating mount image now ensures refs are resolved in right order
        // (see https://github.com/facebook/react/pull/7101 for explanation).
        var nextChildMountImage = ReactReconciler.mountComponent(nextChildInstance, transaction, hostParent, hostContainerInfo, context, selfDebugID);
        mountImages.push(nextChildMountImage);
      }
    }
    // Unmount children that are no longer present.
    for (name in prevChildren) {
      if (prevChildren.hasOwnProperty(name) && !(nextChildren && nextChildren.hasOwnProperty(name))) {
        prevChild = prevChildren[name];
        removedNodes[name] = ReactReconciler.getHostNode(prevChild);
        ReactReconciler.unmountComponent(prevChild, false);
      }
    }
  },

  /**
   * Unmounts all rendered children. This should be used to clean up children
   * when this component is unmounted.
   *
   * @param {?object} renderedChildren Previously initialized set of children.
   * @internal
   */
  unmountChildren: function (renderedChildren, safely) {
    for (var name in renderedChildren) {
      if (renderedChildren.hasOwnProperty(name)) {
        var renderedChild = renderedChildren[name];
        ReactReconciler.unmountComponent(renderedChild, safely);
      }
    }
  }
};

module.exports = ReactChildReconciler;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 517 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMChildrenOperations = __webpack_require__(125);
var ReactDOMIDOperations = __webpack_require__(524);

/**
 * Abstracts away all functionality of the reconciler that requires knowledge of
 * the browser context. TODO: These callers should be refactored to avoid the
 * need for this injection.
 */
var ReactComponentBrowserEnvironment = {
  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,

  replaceNodeWithMarkup: DOMChildrenOperations.dangerouslyReplaceNodeWithMarkup
};

module.exports = ReactComponentBrowserEnvironment;

/***/ }),
/* 518 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(7),
    _assign = __webpack_require__(4);

var React = __webpack_require__(17);
var ReactComponentEnvironment = __webpack_require__(130);
var ReactCurrentOwner = __webpack_require__(13);
var ReactErrorUtils = __webpack_require__(131);
var ReactInstanceMap = __webpack_require__(55);
var ReactInstrumentation = __webpack_require__(16);
var ReactNodeTypes = __webpack_require__(233);
var ReactReconciler = __webpack_require__(41);

if (process.env.NODE_ENV !== 'production') {
  var checkReactTypeSpec = __webpack_require__(566);
}

var emptyObject = __webpack_require__(33);
var invariant = __webpack_require__(1);
var shallowEqual = __webpack_require__(34);
var shouldUpdateReactComponent = __webpack_require__(138);
var warning = __webpack_require__(2);

var CompositeTypes = {
  ImpureClass: 0,
  PureClass: 1,
  StatelessFunctional: 2
};

function StatelessComponent(Component) {}
StatelessComponent.prototype.render = function () {
  var Component = ReactInstanceMap.get(this)._currentElement.type;
  var element = Component(this.props, this.context, this.updater);
  warnIfInvalidElement(Component, element);
  return element;
};

function warnIfInvalidElement(Component, element) {
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(element === null || element === false || React.isValidElement(element), '%s(...): A valid React element (or null) must be returned. You may have ' + 'returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : void 0;
    process.env.NODE_ENV !== 'production' ? warning(!Component.childContextTypes, '%s(...): childContextTypes cannot be defined on a functional component.', Component.displayName || Component.name || 'Component') : void 0;
  }
}

function shouldConstruct(Component) {
  return !!(Component.prototype && Component.prototype.isReactComponent);
}

function isPureComponent(Component) {
  return !!(Component.prototype && Component.prototype.isPureReactComponent);
}

// Separated into a function to contain deoptimizations caused by try/finally.
function measureLifeCyclePerf(fn, debugID, timerType) {
  if (debugID === 0) {
    // Top-level wrappers (see ReactMount) and empty components (see
    // ReactDOMEmptyComponent) are invisible to hooks and devtools.
    // Both are implementation details that should go away in the future.
    return fn();
  }

  ReactInstrumentation.debugTool.onBeginLifeCycleTimer(debugID, timerType);
  try {
    return fn();
  } finally {
    ReactInstrumentation.debugTool.onEndLifeCycleTimer(debugID, timerType);
  }
}

/**
 * ------------------ The Life-Cycle of a Composite Component ------------------
 *
 * - constructor: Initialization of state. The instance is now retained.
 *   - componentWillMount
 *   - render
 *   - [children's constructors]
 *     - [children's componentWillMount and render]
 *     - [children's componentDidMount]
 *     - componentDidMount
 *
 *       Update Phases:
 *       - componentWillReceiveProps (only called if parent updated)
 *       - shouldComponentUpdate
 *         - componentWillUpdate
 *           - render
 *           - [children's constructors or receive props phases]
 *         - componentDidUpdate
 *
 *     - componentWillUnmount
 *     - [children's componentWillUnmount]
 *   - [children destroyed]
 * - (destroyed): The instance is now blank, released by React and ready for GC.
 *
 * -----------------------------------------------------------------------------
 */

/**
 * An incrementing ID assigned to each component when it is mounted. This is
 * used to enforce the order in which `ReactUpdates` updates dirty components.
 *
 * @private
 */
var nextMountID = 1;

/**
 * @lends {ReactCompositeComponent.prototype}
 */
var ReactCompositeComponent = {
  /**
   * Base constructor for all composite component.
   *
   * @param {ReactElement} element
   * @final
   * @internal
   */
  construct: function (element) {
    this._currentElement = element;
    this._rootNodeID = 0;
    this._compositeType = null;
    this._instance = null;
    this._hostParent = null;
    this._hostContainerInfo = null;

    // See ReactUpdateQueue
    this._updateBatchNumber = null;
    this._pendingElement = null;
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    this._renderedNodeType = null;
    this._renderedComponent = null;
    this._context = null;
    this._mountOrder = 0;
    this._topLevelWrapper = null;

    // See ReactUpdates and ReactUpdateQueue.
    this._pendingCallbacks = null;

    // ComponentWillUnmount shall only be called once
    this._calledComponentWillUnmount = false;

    if (process.env.NODE_ENV !== 'production') {
      this._warnedAboutRefsInRender = false;
    }
  },

  /**
   * Initializes the component, renders markup, and registers event listeners.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?object} hostParent
   * @param {?object} hostContainerInfo
   * @param {?object} context
   * @return {?string} Rendered markup to be inserted into the DOM.
   * @final
   * @internal
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    var _this = this;

    this._context = context;
    this._mountOrder = nextMountID++;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var publicProps = this._currentElement.props;
    var publicContext = this._processContext(context);

    var Component = this._currentElement.type;

    var updateQueue = transaction.getUpdateQueue();

    // Initialize the public class
    var doConstruct = shouldConstruct(Component);
    var inst = this._constructComponent(doConstruct, publicProps, publicContext, updateQueue);
    var renderedElement;

    // Support functional components
    if (!doConstruct && (inst == null || inst.render == null)) {
      renderedElement = inst;
      warnIfInvalidElement(Component, renderedElement);
      !(inst === null || inst === false || React.isValidElement(inst)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s(...): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', Component.displayName || Component.name || 'Component') : _prodInvariant('105', Component.displayName || Component.name || 'Component') : void 0;
      inst = new StatelessComponent(Component);
      this._compositeType = CompositeTypes.StatelessFunctional;
    } else {
      if (isPureComponent(Component)) {
        this._compositeType = CompositeTypes.PureClass;
      } else {
        this._compositeType = CompositeTypes.ImpureClass;
      }
    }

    if (process.env.NODE_ENV !== 'production') {
      // This will throw later in _renderValidatedComponent, but add an early
      // warning now to help debugging
      if (inst.render == null) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', Component.displayName || Component.name || 'Component') : void 0;
      }

      var propsMutated = inst.props !== publicProps;
      var componentName = Component.displayName || Component.name || 'Component';

      process.env.NODE_ENV !== 'production' ? warning(inst.props === undefined || !propsMutated, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", componentName, componentName) : void 0;
    }

    // These should be set up in the constructor, but as a convenience for
    // simpler class abstractions, we set them up after the fact.
    inst.props = publicProps;
    inst.context = publicContext;
    inst.refs = emptyObject;
    inst.updater = updateQueue;

    this._instance = inst;

    // Store a reference from the instance back to the internal representation
    ReactInstanceMap.set(inst, this);

    if (process.env.NODE_ENV !== 'production') {
      // Since plain JS classes are defined without any special initialization
      // logic, we can not catch common errors early. Therefore, we have to
      // catch them here, at initialization time, instead.
      process.env.NODE_ENV !== 'production' ? warning(!inst.getInitialState || inst.getInitialState.isReactClassApproved || inst.state, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.getDefaultProps || inst.getDefaultProps.isReactClassApproved, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.propTypes, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(!inst.contextTypes, 'contextTypes was defined as an instance property on %s. Use a ' + 'static property to define contextTypes instead.', this.getName() || 'a component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentShouldUpdate !== 'function', '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', this.getName() || 'A component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentDidUnmount !== 'function', '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', this.getName() || 'A component') : void 0;
      process.env.NODE_ENV !== 'production' ? warning(typeof inst.componentWillRecieveProps !== 'function', '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', this.getName() || 'A component') : void 0;
    }

    var initialState = inst.state;
    if (initialState === undefined) {
      inst.state = initialState = null;
    }
    !(typeof initialState === 'object' && !Array.isArray(initialState)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.state: must be set to an object or null', this.getName() || 'ReactCompositeComponent') : _prodInvariant('106', this.getName() || 'ReactCompositeComponent') : void 0;

    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;

    var markup;
    if (inst.unstable_handleError) {
      markup = this.performInitialMountWithErrorHandling(renderedElement, hostParent, hostContainerInfo, transaction, context);
    } else {
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    }

    if (inst.componentDidMount) {
      if (process.env.NODE_ENV !== 'production') {
        transaction.getReactMountReady().enqueue(function () {
          measureLifeCyclePerf(function () {
            return inst.componentDidMount();
          }, _this._debugID, 'componentDidMount');
        });
      } else {
        transaction.getReactMountReady().enqueue(inst.componentDidMount, inst);
      }
    }

    return markup;
  },

  _constructComponent: function (doConstruct, publicProps, publicContext, updateQueue) {
    if (process.env.NODE_ENV !== 'production') {
      ReactCurrentOwner.current = this;
      try {
        return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
      } finally {
        ReactCurrentOwner.current = null;
      }
    } else {
      return this._constructComponentWithoutOwner(doConstruct, publicProps, publicContext, updateQueue);
    }
  },

  _constructComponentWithoutOwner: function (doConstruct, publicProps, publicContext, updateQueue) {
    var Component = this._currentElement.type;

    if (doConstruct) {
      if (process.env.NODE_ENV !== 'production') {
        return measureLifeCyclePerf(function () {
          return new Component(publicProps, publicContext, updateQueue);
        }, this._debugID, 'ctor');
      } else {
        return new Component(publicProps, publicContext, updateQueue);
      }
    }

    // This can still be an instance in case of factory components
    // but we'll count this as time spent rendering as the more common case.
    if (process.env.NODE_ENV !== 'production') {
      return measureLifeCyclePerf(function () {
        return Component(publicProps, publicContext, updateQueue);
      }, this._debugID, 'render');
    } else {
      return Component(publicProps, publicContext, updateQueue);
    }
  },

  performInitialMountWithErrorHandling: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
    var markup;
    var checkpoint = transaction.checkpoint();
    try {
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    } catch (e) {
      // Roll back to checkpoint, handle error (which may add items to the transaction), and take a new checkpoint
      transaction.rollback(checkpoint);
      this._instance.unstable_handleError(e);
      if (this._pendingStateQueue) {
        this._instance.state = this._processPendingState(this._instance.props, this._instance.context);
      }
      checkpoint = transaction.checkpoint();

      this._renderedComponent.unmountComponent(true);
      transaction.rollback(checkpoint);

      // Try again - we've informed the component about the error, so they can render an error message this time.
      // If this throws again, the error will bubble up (and can be caught by a higher error boundary).
      markup = this.performInitialMount(renderedElement, hostParent, hostContainerInfo, transaction, context);
    }
    return markup;
  },

  performInitialMount: function (renderedElement, hostParent, hostContainerInfo, transaction, context) {
    var inst = this._instance;

    var debugID = 0;
    if (process.env.NODE_ENV !== 'production') {
      debugID = this._debugID;
    }

    if (inst.componentWillMount) {
      if (process.env.NODE_ENV !== 'production') {
        measureLifeCyclePerf(function () {
          return inst.componentWillMount();
        }, debugID, 'componentWillMount');
      } else {
        inst.componentWillMount();
      }
      // When mounting, calls to `setState` by `componentWillMount` will set
      // `this._pendingStateQueue` without triggering a re-render.
      if (this._pendingStateQueue) {
        inst.state = this._processPendingState(inst.props, inst.context);
      }
    }

    // If not a stateless component, we now render
    if (renderedElement === undefined) {
      renderedElement = this._renderValidatedComponent();
    }

    var nodeType = ReactNodeTypes.getType(renderedElement);
    this._renderedNodeType = nodeType;
    var child = this._instantiateReactComponent(renderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
    );
    this._renderedComponent = child;

    var markup = ReactReconciler.mountComponent(child, transaction, hostParent, hostContainerInfo, this._processChildContext(context), debugID);

    if (process.env.NODE_ENV !== 'production') {
      if (debugID !== 0) {
        var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
        ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
      }
    }

    return markup;
  },

  getHostNode: function () {
    return ReactReconciler.getHostNode(this._renderedComponent);
  },

  /**
   * Releases any resources allocated by `mountComponent`.
   *
   * @final
   * @internal
   */
  unmountComponent: function (safely) {
    if (!this._renderedComponent) {
      return;
    }

    var inst = this._instance;

    if (inst.componentWillUnmount && !inst._calledComponentWillUnmount) {
      inst._calledComponentWillUnmount = true;

      if (safely) {
        var name = this.getName() + '.componentWillUnmount()';
        ReactErrorUtils.invokeGuardedCallback(name, inst.componentWillUnmount.bind(inst));
      } else {
        if (process.env.NODE_ENV !== 'production') {
          measureLifeCyclePerf(function () {
            return inst.componentWillUnmount();
          }, this._debugID, 'componentWillUnmount');
        } else {
          inst.componentWillUnmount();
        }
      }
    }

    if (this._renderedComponent) {
      ReactReconciler.unmountComponent(this._renderedComponent, safely);
      this._renderedNodeType = null;
      this._renderedComponent = null;
      this._instance = null;
    }

    // Reset pending fields
    // Even if this component is scheduled for another update in ReactUpdates,
    // it would still be ignored because these fields are reset.
    this._pendingStateQueue = null;
    this._pendingReplaceState = false;
    this._pendingForceUpdate = false;
    this._pendingCallbacks = null;
    this._pendingElement = null;

    // These fields do not really need to be reset since this object is no
    // longer accessible.
    this._context = null;
    this._rootNodeID = 0;
    this._topLevelWrapper = null;

    // Delete the reference from the instance to this internal representation
    // which allow the internals to be properly cleaned up even if the user
    // leaks a reference to the public instance.
    ReactInstanceMap.remove(inst);

    // Some existing components rely on inst.props even after they've been
    // destroyed (in event handlers).
    // TODO: inst.props = null;
    // TODO: inst.state = null;
    // TODO: inst.context = null;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _maskContext: function (context) {
    var Component = this._currentElement.type;
    var contextTypes = Component.contextTypes;
    if (!contextTypes) {
      return emptyObject;
    }
    var maskedContext = {};
    for (var contextName in contextTypes) {
      maskedContext[contextName] = context[contextName];
    }
    return maskedContext;
  },

  /**
   * Filters the context object to only contain keys specified in
   * `contextTypes`, and asserts that they are valid.
   *
   * @param {object} context
   * @return {?object}
   * @private
   */
  _processContext: function (context) {
    var maskedContext = this._maskContext(context);
    if (process.env.NODE_ENV !== 'production') {
      var Component = this._currentElement.type;
      if (Component.contextTypes) {
        this._checkContextTypes(Component.contextTypes, maskedContext, 'context');
      }
    }
    return maskedContext;
  },

  /**
   * @param {object} currentContext
   * @return {object}
   * @private
   */
  _processChildContext: function (currentContext) {
    var Component = this._currentElement.type;
    var inst = this._instance;
    var childContext;

    if (inst.getChildContext) {
      if (process.env.NODE_ENV !== 'production') {
        ReactInstrumentation.debugTool.onBeginProcessingChildContext();
        try {
          childContext = inst.getChildContext();
        } finally {
          ReactInstrumentation.debugTool.onEndProcessingChildContext();
        }
      } else {
        childContext = inst.getChildContext();
      }
    }

    if (childContext) {
      !(typeof Component.childContextTypes === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().', this.getName() || 'ReactCompositeComponent') : _prodInvariant('107', this.getName() || 'ReactCompositeComponent') : void 0;
      if (process.env.NODE_ENV !== 'production') {
        this._checkContextTypes(Component.childContextTypes, childContext, 'child context');
      }
      for (var name in childContext) {
        !(name in Component.childContextTypes) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', this.getName() || 'ReactCompositeComponent', name) : _prodInvariant('108', this.getName() || 'ReactCompositeComponent', name) : void 0;
      }
      return _assign({}, currentContext, childContext);
    }
    return currentContext;
  },

  /**
   * Assert that the context types are valid
   *
   * @param {object} typeSpecs Map of context field to a ReactPropType
   * @param {object} values Runtime values that need to be type-checked
   * @param {string} location e.g. "prop", "context", "child context"
   * @private
   */
  _checkContextTypes: function (typeSpecs, values, location) {
    if (process.env.NODE_ENV !== 'production') {
      checkReactTypeSpec(typeSpecs, values, location, this.getName(), null, this._debugID);
    }
  },

  receiveComponent: function (nextElement, transaction, nextContext) {
    var prevElement = this._currentElement;
    var prevContext = this._context;

    this._pendingElement = null;

    this.updateComponent(transaction, prevElement, nextElement, prevContext, nextContext);
  },

  /**
   * If any of `_pendingElement`, `_pendingStateQueue`, or `_pendingForceUpdate`
   * is set, update the component.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  performUpdateIfNecessary: function (transaction) {
    if (this._pendingElement != null) {
      ReactReconciler.receiveComponent(this, this._pendingElement, transaction, this._context);
    } else if (this._pendingStateQueue !== null || this._pendingForceUpdate) {
      this.updateComponent(transaction, this._currentElement, this._currentElement, this._context, this._context);
    } else {
      this._updateBatchNumber = null;
    }
  },

  /**
   * Perform an update to a mounted component. The componentWillReceiveProps and
   * shouldComponentUpdate methods are called, then (assuming the update isn't
   * skipped) the remaining update lifecycle methods are called and the DOM
   * representation is updated.
   *
   * By default, this implements React's rendering and reconciliation algorithm.
   * Sophisticated clients may wish to override this.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevParentElement
   * @param {ReactElement} nextParentElement
   * @internal
   * @overridable
   */
  updateComponent: function (transaction, prevParentElement, nextParentElement, prevUnmaskedContext, nextUnmaskedContext) {
    var inst = this._instance;
    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Attempted to update component `%s` that has already been unmounted (or failed to mount).', this.getName() || 'ReactCompositeComponent') : _prodInvariant('136', this.getName() || 'ReactCompositeComponent') : void 0;

    var willReceive = false;
    var nextContext;

    // Determine if the context has changed or not
    if (this._context === nextUnmaskedContext) {
      nextContext = inst.context;
    } else {
      nextContext = this._processContext(nextUnmaskedContext);
      willReceive = true;
    }

    var prevProps = prevParentElement.props;
    var nextProps = nextParentElement.props;

    // Not a simple state update but a props update
    if (prevParentElement !== nextParentElement) {
      willReceive = true;
    }

    // An update here will schedule an update but immediately set
    // _pendingStateQueue which will ensure that any state updates gets
    // immediately reconciled instead of waiting for the next batch.
    if (willReceive && inst.componentWillReceiveProps) {
      if (process.env.NODE_ENV !== 'production') {
        measureLifeCyclePerf(function () {
          return inst.componentWillReceiveProps(nextProps, nextContext);
        }, this._debugID, 'componentWillReceiveProps');
      } else {
        inst.componentWillReceiveProps(nextProps, nextContext);
      }
    }

    var nextState = this._processPendingState(nextProps, nextContext);
    var shouldUpdate = true;

    if (!this._pendingForceUpdate) {
      if (inst.shouldComponentUpdate) {
        if (process.env.NODE_ENV !== 'production') {
          shouldUpdate = measureLifeCyclePerf(function () {
            return inst.shouldComponentUpdate(nextProps, nextState, nextContext);
          }, this._debugID, 'shouldComponentUpdate');
        } else {
          shouldUpdate = inst.shouldComponentUpdate(nextProps, nextState, nextContext);
        }
      } else {
        if (this._compositeType === CompositeTypes.PureClass) {
          shouldUpdate = !shallowEqual(prevProps, nextProps) || !shallowEqual(inst.state, nextState);
        }
      }
    }

    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(shouldUpdate !== undefined, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', this.getName() || 'ReactCompositeComponent') : void 0;
    }

    this._updateBatchNumber = null;
    if (shouldUpdate) {
      this._pendingForceUpdate = false;
      // Will set `this.props`, `this.state` and `this.context`.
      this._performComponentUpdate(nextParentElement, nextProps, nextState, nextContext, transaction, nextUnmaskedContext);
    } else {
      // If it's determined that a component should not update, we still want
      // to set props and state but we shortcut the rest of the update.
      this._currentElement = nextParentElement;
      this._context = nextUnmaskedContext;
      inst.props = nextProps;
      inst.state = nextState;
      inst.context = nextContext;
    }
  },

  _processPendingState: function (props, context) {
    var inst = this._instance;
    var queue = this._pendingStateQueue;
    var replace = this._pendingReplaceState;
    this._pendingReplaceState = false;
    this._pendingStateQueue = null;

    if (!queue) {
      return inst.state;
    }

    if (replace && queue.length === 1) {
      return queue[0];
    }

    var nextState = _assign({}, replace ? queue[0] : inst.state);
    for (var i = replace ? 1 : 0; i < queue.length; i++) {
      var partial = queue[i];
      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);
    }

    return nextState;
  },

  /**
   * Merges new props and state, notifies delegate methods of update and
   * performs update.
   *
   * @param {ReactElement} nextElement Next element
   * @param {object} nextProps Next public object to set as properties.
   * @param {?object} nextState Next object to set as state.
   * @param {?object} nextContext Next public object to set as context.
   * @param {ReactReconcileTransaction} transaction
   * @param {?object} unmaskedContext
   * @private
   */
  _performComponentUpdate: function (nextElement, nextProps, nextState, nextContext, transaction, unmaskedContext) {
    var _this2 = this;

    var inst = this._instance;

    var hasComponentDidUpdate = Boolean(inst.componentDidUpdate);
    var prevProps;
    var prevState;
    var prevContext;
    if (hasComponentDidUpdate) {
      prevProps = inst.props;
      prevState = inst.state;
      prevContext = inst.context;
    }

    if (inst.componentWillUpdate) {
      if (process.env.NODE_ENV !== 'production') {
        measureLifeCyclePerf(function () {
          return inst.componentWillUpdate(nextProps, nextState, nextContext);
        }, this._debugID, 'componentWillUpdate');
      } else {
        inst.componentWillUpdate(nextProps, nextState, nextContext);
      }
    }

    this._currentElement = nextElement;
    this._context = unmaskedContext;
    inst.props = nextProps;
    inst.state = nextState;
    inst.context = nextContext;

    this._updateRenderedComponent(transaction, unmaskedContext);

    if (hasComponentDidUpdate) {
      if (process.env.NODE_ENV !== 'production') {
        transaction.getReactMountReady().enqueue(function () {
          measureLifeCyclePerf(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), _this2._debugID, 'componentDidUpdate');
        });
      } else {
        transaction.getReactMountReady().enqueue(inst.componentDidUpdate.bind(inst, prevProps, prevState, prevContext), inst);
      }
    }
  },

  /**
   * Call the component's `render` method and update the DOM accordingly.
   *
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  _updateRenderedComponent: function (transaction, context) {
    var prevComponentInstance = this._renderedComponent;
    var prevRenderedElement = prevComponentInstance._currentElement;
    var nextRenderedElement = this._renderValidatedComponent();

    var debugID = 0;
    if (process.env.NODE_ENV !== 'production') {
      debugID = this._debugID;
    }

    if (shouldUpdateReactComponent(prevRenderedElement, nextRenderedElement)) {
      ReactReconciler.receiveComponent(prevComponentInstance, nextRenderedElement, transaction, this._processChildContext(context));
    } else {
      var oldHostNode = ReactReconciler.getHostNode(prevComponentInstance);
      ReactReconciler.unmountComponent(prevComponentInstance, false);

      var nodeType = ReactNodeTypes.getType(nextRenderedElement);
      this._renderedNodeType = nodeType;
      var child = this._instantiateReactComponent(nextRenderedElement, nodeType !== ReactNodeTypes.EMPTY /* shouldHaveDebugID */
      );
      this._renderedComponent = child;

      var nextMarkup = ReactReconciler.mountComponent(child, transaction, this._hostParent, this._hostContainerInfo, this._processChildContext(context), debugID);

      if (process.env.NODE_ENV !== 'production') {
        if (debugID !== 0) {
          var childDebugIDs = child._debugID !== 0 ? [child._debugID] : [];
          ReactInstrumentation.debugTool.onSetChildren(debugID, childDebugIDs);
        }
      }

      this._replaceNodeWithMarkup(oldHostNode, nextMarkup, prevComponentInstance);
    }
  },

  /**
   * Overridden in shallow rendering.
   *
   * @protected
   */
  _replaceNodeWithMarkup: function (oldHostNode, nextMarkup, prevInstance) {
    ReactComponentEnvironment.replaceNodeWithMarkup(oldHostNode, nextMarkup, prevInstance);
  },

  /**
   * @protected
   */
  _renderValidatedComponentWithoutOwnerOrContext: function () {
    var inst = this._instance;
    var renderedElement;

    if (process.env.NODE_ENV !== 'production') {
      renderedElement = measureLifeCyclePerf(function () {
        return inst.render();
      }, this._debugID, 'render');
    } else {
      renderedElement = inst.render();
    }

    if (process.env.NODE_ENV !== 'production') {
      // We allow auto-mocks to proceed as if they're returning null.
      if (renderedElement === undefined && inst.render._isMockFunction) {
        // This is probably bad practice. Consider warning here and
        // deprecating this convenience.
        renderedElement = null;
      }
    }

    return renderedElement;
  },

  /**
   * @private
   */
  _renderValidatedComponent: function () {
    var renderedElement;
    if (process.env.NODE_ENV !== 'production' || this._compositeType !== CompositeTypes.StatelessFunctional) {
      ReactCurrentOwner.current = this;
      try {
        renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
      } finally {
        ReactCurrentOwner.current = null;
      }
    } else {
      renderedElement = this._renderValidatedComponentWithoutOwnerOrContext();
    }
    !(
    // TODO: An `isValidNode` function would probably be more appropriate
    renderedElement === null || renderedElement === false || React.isValidElement(renderedElement)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s.render(): A valid React element (or null) must be returned. You may have returned undefined, an array or some other invalid object.', this.getName() || 'ReactCompositeComponent') : _prodInvariant('109', this.getName() || 'ReactCompositeComponent') : void 0;

    return renderedElement;
  },

  /**
   * Lazily allocates the refs object and stores `component` as `ref`.
   *
   * @param {string} ref Reference name.
   * @param {component} component Component to store as `ref`.
   * @final
   * @private
   */
  attachRef: function (ref, component) {
    var inst = this.getPublicInstance();
    !(inst != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Stateless function components cannot have refs.') : _prodInvariant('110') : void 0;
    var publicComponentInstance = component.getPublicInstance();
    if (process.env.NODE_ENV !== 'production') {
      var componentName = component && component.getName ? component.getName() : 'a component';
      process.env.NODE_ENV !== 'production' ? warning(publicComponentInstance != null || component._compositeType !== CompositeTypes.StatelessFunctional, 'Stateless function components cannot be given refs ' + '(See ref "%s" in %s created by %s). ' + 'Attempts to access this ref will fail.', ref, componentName, this.getName()) : void 0;
    }
    var refs = inst.refs === emptyObject ? inst.refs = {} : inst.refs;
    refs[ref] = publicComponentInstance;
  },

  /**
   * Detaches a reference name.
   *
   * @param {string} ref Name to dereference.
   * @final
   * @private
   */
  detachRef: function (ref) {
    var refs = this.getPublicInstance().refs;
    delete refs[ref];
  },

  /**
   * Get a text description of the component that can be used to identify it
   * in error messages.
   * @return {string} The name or null.
   * @internal
   */
  getName: function () {
    var type = this._currentElement.type;
    var constructor = this._instance && this._instance.constructor;
    return type.displayName || constructor && constructor.displayName || type.name || constructor && constructor.name || null;
  },

  /**
   * Get the publicly accessible representation of this component - i.e. what
   * is exposed by refs and returned by render. Can be null for stateless
   * components.
   *
   * @return {ReactComponent} the public component instance.
   * @internal
   */
  getPublicInstance: function () {
    var inst = this._instance;
    if (this._compositeType === CompositeTypes.StatelessFunctional) {
      return null;
    }
    return inst;
  },

  // Stub
  _instantiateReactComponent: null
};

module.exports = ReactCompositeComponent;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 519 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/* globals __REACT_DEVTOOLS_GLOBAL_HOOK__*/



var ReactDOMComponentTree = __webpack_require__(11);
var ReactDefaultInjection = __webpack_require__(536);
var ReactMount = __webpack_require__(232);
var ReactReconciler = __webpack_require__(41);
var ReactUpdates = __webpack_require__(19);
var ReactVersion = __webpack_require__(551);

var findDOMNode = __webpack_require__(568);
var getHostComponentFromComposite = __webpack_require__(238);
var renderSubtreeIntoContainer = __webpack_require__(575);
var warning = __webpack_require__(2);

ReactDefaultInjection.inject();

var ReactDOM = {
  findDOMNode: findDOMNode,
  render: ReactMount.render,
  unmountComponentAtNode: ReactMount.unmountComponentAtNode,
  version: ReactVersion,

  /* eslint-disable camelcase */
  unstable_batchedUpdates: ReactUpdates.batchedUpdates,
  unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer
  /* eslint-enable camelcase */
};

// Inject the runtime into a devtools global hook regardless of browser.
// Allows for debugging when the hook is injected on the page.
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject === 'function') {
  __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
    ComponentTree: {
      getClosestInstanceFromNode: ReactDOMComponentTree.getClosestInstanceFromNode,
      getNodeFromInstance: function (inst) {
        // inst is an internal instance (but could be a composite)
        if (inst._renderedComponent) {
          inst = getHostComponentFromComposite(inst);
        }
        if (inst) {
          return ReactDOMComponentTree.getNodeFromInstance(inst);
        } else {
          return null;
        }
      }
    },
    Mount: ReactMount,
    Reconciler: ReactReconciler
  });
}

if (process.env.NODE_ENV !== 'production') {
  var ExecutionEnvironment = __webpack_require__(5);
  if (ExecutionEnvironment.canUseDOM && window.top === window.self) {
    // First check if devtools is not installed
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
      // If we're in Chrome or Firefox, provide a download link if not installed.
      if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
        // Firefox does not have the issue with devtools loaded over file://
        var showFileUrlMessage = window.location.protocol.indexOf('http') === -1 && navigator.userAgent.indexOf('Firefox') === -1;
        console.debug('Download the React DevTools ' + (showFileUrlMessage ? 'and use an HTTP server (instead of a file: URL) ' : '') + 'for a better development experience: ' + 'https://fb.me/react-devtools');
      }
    }

    var testFunc = function testFn() {};
    process.env.NODE_ENV !== 'production' ? warning((testFunc.name || testFunc.toString()).indexOf('testFn') !== -1, "It looks like you're using a minified copy of the development build " + 'of React. When deploying React apps to production, make sure to use ' + 'the production build which skips development warnings and is faster. ' + 'See https://fb.me/react-minification for more details.') : void 0;

    // If we're in IE8, check to see if we are in compatibility mode and provide
    // information on preventing compatibility mode
    var ieCompatibilityMode = document.documentMode && document.documentMode < 8;

    process.env.NODE_ENV !== 'production' ? warning(!ieCompatibilityMode, 'Internet Explorer is running in compatibility mode; please add the ' + 'following tag to your HTML to prevent this from happening: ' + '<meta http-equiv="X-UA-Compatible" content="IE=edge" />') : void 0;

    var expectedFeatures = [
    // shims
    Array.isArray, Array.prototype.every, Array.prototype.forEach, Array.prototype.indexOf, Array.prototype.map, Date.now, Function.prototype.bind, Object.keys, String.prototype.trim];

    for (var i = 0; i < expectedFeatures.length; i++) {
      if (!expectedFeatures[i]) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'One or more ES5 shims expected by React are not available: ' + 'https://fb.me/react-warning-polyfills') : void 0;
        break;
      }
    }
  }
}

if (process.env.NODE_ENV !== 'production') {
  var ReactInstrumentation = __webpack_require__(16);
  var ReactDOMUnknownPropertyHook = __webpack_require__(533);
  var ReactDOMNullInputValuePropHook = __webpack_require__(527);
  var ReactDOMInvalidARIAHook = __webpack_require__(526);

  ReactInstrumentation.debugTool.addHook(ReactDOMUnknownPropertyHook);
  ReactInstrumentation.debugTool.addHook(ReactDOMNullInputValuePropHook);
  ReactInstrumentation.debugTool.addHook(ReactDOMInvalidARIAHook);
}

module.exports = ReactDOM;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 520 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */

/* global hasOwnProperty:true */



var _prodInvariant = __webpack_require__(7),
    _assign = __webpack_require__(4);

var AutoFocusUtils = __webpack_require__(507);
var CSSPropertyOperations = __webpack_require__(509);
var DOMLazyTree = __webpack_require__(40);
var DOMNamespaces = __webpack_require__(126);
var DOMProperty = __webpack_require__(25);
var DOMPropertyOperations = __webpack_require__(225);
var EventPluginHub = __webpack_require__(53);
var EventPluginRegistry = __webpack_require__(80);
var ReactBrowserEventEmitter = __webpack_require__(81);
var ReactDOMComponentFlags = __webpack_require__(226);
var ReactDOMComponentTree = __webpack_require__(11);
var ReactDOMInput = __webpack_require__(525);
var ReactDOMOption = __webpack_require__(528);
var ReactDOMSelect = __webpack_require__(227);
var ReactDOMTextarea = __webpack_require__(531);
var ReactInstrumentation = __webpack_require__(16);
var ReactMultiChild = __webpack_require__(544);
var ReactServerRenderingTransaction = __webpack_require__(549);

var emptyFunction = __webpack_require__(12);
var escapeTextContentForBrowser = __webpack_require__(84);
var invariant = __webpack_require__(1);
var isEventSupported = __webpack_require__(137);
var shallowEqual = __webpack_require__(34);
var inputValueTracking = __webpack_require__(240);
var validateDOMNesting = __webpack_require__(139);
var warning = __webpack_require__(2);

var Flags = ReactDOMComponentFlags;
var deleteListener = EventPluginHub.deleteListener;
var getNode = ReactDOMComponentTree.getNodeFromInstance;
var listenTo = ReactBrowserEventEmitter.listenTo;
var registrationNameModules = EventPluginRegistry.registrationNameModules;

// For quickly matching children type, to test if can be treated as content.
var CONTENT_TYPES = { string: true, number: true };

var STYLE = 'style';
var HTML = '__html';
var RESERVED_PROPS = {
  children: null,
  dangerouslySetInnerHTML: null,
  suppressContentEditableWarning: null
};

// Node type for document fragments (Node.DOCUMENT_FRAGMENT_NODE).
var DOC_FRAGMENT_TYPE = 11;

function getDeclarationErrorAddendum(internalInstance) {
  if (internalInstance) {
    var owner = internalInstance._currentElement._owner || null;
    if (owner) {
      var name = owner.getName();
      if (name) {
        return ' This DOM node was rendered by `' + name + '`.';
      }
    }
  }
  return '';
}

function friendlyStringify(obj) {
  if (typeof obj === 'object') {
    if (Array.isArray(obj)) {
      return '[' + obj.map(friendlyStringify).join(', ') + ']';
    } else {
      var pairs = [];
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var keyEscaped = /^[a-z$_][\w$_]*$/i.test(key) ? key : JSON.stringify(key);
          pairs.push(keyEscaped + ': ' + friendlyStringify(obj[key]));
        }
      }
      return '{' + pairs.join(', ') + '}';
    }
  } else if (typeof obj === 'string') {
    return JSON.stringify(obj);
  } else if (typeof obj === 'function') {
    return '[function object]';
  }
  // Differs from JSON.stringify in that undefined because undefined and that
  // inf and nan don't become null
  return String(obj);
}

var styleMutationWarning = {};

function checkAndWarnForMutatedStyle(style1, style2, component) {
  if (style1 == null || style2 == null) {
    return;
  }
  if (shallowEqual(style1, style2)) {
    return;
  }

  var componentName = component._tag;
  var owner = component._currentElement._owner;
  var ownerName;
  if (owner) {
    ownerName = owner.getName();
  }

  var hash = ownerName + '|' + componentName;

  if (styleMutationWarning.hasOwnProperty(hash)) {
    return;
  }

  styleMutationWarning[hash] = true;

  process.env.NODE_ENV !== 'production' ? warning(false, '`%s` was passed a style object that has previously been mutated. ' + 'Mutating `style` is deprecated. Consider cloning it beforehand. Check ' + 'the `render` %s. Previous style: %s. Mutated style: %s.', componentName, owner ? 'of `' + ownerName + '`' : 'using <' + componentName + '>', friendlyStringify(style1), friendlyStringify(style2)) : void 0;
}

/**
 * @param {object} component
 * @param {?object} props
 */
function assertValidProps(component, props) {
  if (!props) {
    return;
  }
  // Note the use of `==` which checks for null or undefined.
  if (voidElementTags[component._tag]) {
    !(props.children == null && props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : _prodInvariant('137', component._tag, component._currentElement._owner ? ' Check the render method of ' + component._currentElement._owner.getName() + '.' : '') : void 0;
  }
  if (props.dangerouslySetInnerHTML != null) {
    !(props.children == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : _prodInvariant('60') : void 0;
    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML in props.dangerouslySetInnerHTML) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : _prodInvariant('61') : void 0;
  }
  if (process.env.NODE_ENV !== 'production') {
    process.env.NODE_ENV !== 'production' ? warning(props.innerHTML == null, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.') : void 0;
    process.env.NODE_ENV !== 'production' ? warning(props.suppressContentEditableWarning || !props.contentEditable || props.children == null, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
    process.env.NODE_ENV !== 'production' ? warning(props.onFocusIn == null && props.onFocusOut == null, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.') : void 0;
  }
  !(props.style == null || typeof props.style === 'object') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', getDeclarationErrorAddendum(component)) : _prodInvariant('62', getDeclarationErrorAddendum(component)) : void 0;
}

function enqueuePutListener(inst, registrationName, listener, transaction) {
  if (transaction instanceof ReactServerRenderingTransaction) {
    return;
  }
  if (process.env.NODE_ENV !== 'production') {
    // IE8 has no API for event capturing and the `onScroll` event doesn't
    // bubble.
    process.env.NODE_ENV !== 'production' ? warning(registrationName !== 'onScroll' || isEventSupported('scroll', true), "This browser doesn't support the `onScroll` event") : void 0;
  }
  var containerInfo = inst._hostContainerInfo;
  var isDocumentFragment = containerInfo._node && containerInfo._node.nodeType === DOC_FRAGMENT_TYPE;
  var doc = isDocumentFragment ? containerInfo._node : containerInfo._ownerDocument;
  listenTo(registrationName, doc);
  transaction.getReactMountReady().enqueue(putListener, {
    inst: inst,
    registrationName: registrationName,
    listener: listener
  });
}

function putListener() {
  var listenerToPut = this;
  EventPluginHub.putListener(listenerToPut.inst, listenerToPut.registrationName, listenerToPut.listener);
}

function inputPostMount() {
  var inst = this;
  ReactDOMInput.postMountWrapper(inst);
}

function textareaPostMount() {
  var inst = this;
  ReactDOMTextarea.postMountWrapper(inst);
}

function optionPostMount() {
  var inst = this;
  ReactDOMOption.postMountWrapper(inst);
}

var setAndValidateContentChildDev = emptyFunction;
if (process.env.NODE_ENV !== 'production') {
  setAndValidateContentChildDev = function (content) {
    var hasExistingContent = this._contentDebugID != null;
    var debugID = this._debugID;
    // This ID represents the inlined child that has no backing instance:
    var contentDebugID = -debugID;

    if (content == null) {
      if (hasExistingContent) {
        ReactInstrumentation.debugTool.onUnmountComponent(this._contentDebugID);
      }
      this._contentDebugID = null;
      return;
    }

    validateDOMNesting(null, String(content), this, this._ancestorInfo);
    this._contentDebugID = contentDebugID;
    if (hasExistingContent) {
      ReactInstrumentation.debugTool.onBeforeUpdateComponent(contentDebugID, content);
      ReactInstrumentation.debugTool.onUpdateComponent(contentDebugID);
    } else {
      ReactInstrumentation.debugTool.onBeforeMountComponent(contentDebugID, content, debugID);
      ReactInstrumentation.debugTool.onMountComponent(contentDebugID);
      ReactInstrumentation.debugTool.onSetChildren(debugID, [contentDebugID]);
    }
  };
}

// There are so many media events, it makes sense to just
// maintain a list rather than create a `trapBubbledEvent` for each
var mediaEvents = {
  topAbort: 'abort',
  topCanPlay: 'canplay',
  topCanPlayThrough: 'canplaythrough',
  topDurationChange: 'durationchange',
  topEmptied: 'emptied',
  topEncrypted: 'encrypted',
  topEnded: 'ended',
  topError: 'error',
  topLoadedData: 'loadeddata',
  topLoadedMetadata: 'loadedmetadata',
  topLoadStart: 'loadstart',
  topPause: 'pause',
  topPlay: 'play',
  topPlaying: 'playing',
  topProgress: 'progress',
  topRateChange: 'ratechange',
  topSeeked: 'seeked',
  topSeeking: 'seeking',
  topStalled: 'stalled',
  topSuspend: 'suspend',
  topTimeUpdate: 'timeupdate',
  topVolumeChange: 'volumechange',
  topWaiting: 'waiting'
};

function trackInputValue() {
  inputValueTracking.track(this);
}

function trapBubbledEventsLocal() {
  var inst = this;
  // If a component renders to null or if another component fatals and causes
  // the state of the tree to be corrupted, `node` here can be null.
  !inst._rootNodeID ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Must be mounted to trap events') : _prodInvariant('63') : void 0;
  var node = getNode(inst);
  !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'trapBubbledEvent(...): Requires node to be rendered.') : _prodInvariant('64') : void 0;

  switch (inst._tag) {
    case 'iframe':
    case 'object':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
      break;
    case 'video':
    case 'audio':
      inst._wrapperState.listeners = [];
      // Create listener for each media event
      for (var event in mediaEvents) {
        if (mediaEvents.hasOwnProperty(event)) {
          inst._wrapperState.listeners.push(ReactBrowserEventEmitter.trapBubbledEvent(event, mediaEvents[event], node));
        }
      }
      break;
    case 'source':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node)];
      break;
    case 'img':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topError', 'error', node), ReactBrowserEventEmitter.trapBubbledEvent('topLoad', 'load', node)];
      break;
    case 'form':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topReset', 'reset', node), ReactBrowserEventEmitter.trapBubbledEvent('topSubmit', 'submit', node)];
      break;
    case 'input':
    case 'select':
    case 'textarea':
      inst._wrapperState.listeners = [ReactBrowserEventEmitter.trapBubbledEvent('topInvalid', 'invalid', node)];
      break;
  }
}

function postUpdateSelectWrapper() {
  ReactDOMSelect.postUpdateWrapper(this);
}

// For HTML, certain tags should omit their close tag. We keep a whitelist for
// those special-case tags.

var omittedCloseTags = {
  area: true,
  base: true,
  br: true,
  col: true,
  embed: true,
  hr: true,
  img: true,
  input: true,
  keygen: true,
  link: true,
  meta: true,
  param: true,
  source: true,
  track: true,
  wbr: true
  // NOTE: menuitem's close tag should be omitted, but that causes problems.
};

var newlineEatingTags = {
  listing: true,
  pre: true,
  textarea: true
};

// For HTML, certain tags cannot have children. This has the same purpose as
// `omittedCloseTags` except that `menuitem` should still have its closing tag.

var voidElementTags = _assign({
  menuitem: true
}, omittedCloseTags);

// We accept any tag to be rendered but since this gets injected into arbitrary
// HTML, we want to make sure that it's a safe tag.
// http://www.w3.org/TR/REC-xml/#NT-Name

var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/; // Simplified subset
var validatedTagCache = {};
var hasOwnProperty = {}.hasOwnProperty;

function validateDangerousTag(tag) {
  if (!hasOwnProperty.call(validatedTagCache, tag)) {
    !VALID_TAG_REGEX.test(tag) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Invalid tag: %s', tag) : _prodInvariant('65', tag) : void 0;
    validatedTagCache[tag] = true;
  }
}

function isCustomComponent(tagName, props) {
  return tagName.indexOf('-') >= 0 || props.is != null;
}

var globalIdCounter = 1;

/**
 * Creates a new React class that is idempotent and capable of containing other
 * React components. It accepts event listeners and DOM properties that are
 * valid according to `DOMProperty`.
 *
 *  - Event listeners: `onClick`, `onMouseDown`, etc.
 *  - DOM properties: `className`, `name`, `title`, etc.
 *
 * The `style` property functions differently from the DOM API. It accepts an
 * object mapping of style properties to values.
 *
 * @constructor ReactDOMComponent
 * @extends ReactMultiChild
 */
function ReactDOMComponent(element) {
  var tag = element.type;
  validateDangerousTag(tag);
  this._currentElement = element;
  this._tag = tag.toLowerCase();
  this._namespaceURI = null;
  this._renderedChildren = null;
  this._previousStyle = null;
  this._previousStyleCopy = null;
  this._hostNode = null;
  this._hostParent = null;
  this._rootNodeID = 0;
  this._domID = 0;
  this._hostContainerInfo = null;
  this._wrapperState = null;
  this._topLevelWrapper = null;
  this._flags = 0;
  if (process.env.NODE_ENV !== 'production') {
    this._ancestorInfo = null;
    setAndValidateContentChildDev.call(this, null);
  }
}

ReactDOMComponent.displayName = 'ReactDOMComponent';

ReactDOMComponent.Mixin = {
  /**
   * Generates root tag markup then recurses. This method has side effects and
   * is not idempotent.
   *
   * @internal
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {?ReactDOMComponent} the parent component instance
   * @param {?object} info about the host container
   * @param {object} context
   * @return {string} The computed markup.
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    this._rootNodeID = globalIdCounter++;
    this._domID = hostContainerInfo._idCounter++;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var props = this._currentElement.props;

    switch (this._tag) {
      case 'audio':
      case 'form':
      case 'iframe':
      case 'img':
      case 'link':
      case 'object':
      case 'source':
      case 'video':
        this._wrapperState = {
          listeners: null
        };
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'input':
        ReactDOMInput.mountWrapper(this, props, hostParent);
        props = ReactDOMInput.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trackInputValue, this);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'option':
        ReactDOMOption.mountWrapper(this, props, hostParent);
        props = ReactDOMOption.getHostProps(this, props);
        break;
      case 'select':
        ReactDOMSelect.mountWrapper(this, props, hostParent);
        props = ReactDOMSelect.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
      case 'textarea':
        ReactDOMTextarea.mountWrapper(this, props, hostParent);
        props = ReactDOMTextarea.getHostProps(this, props);
        transaction.getReactMountReady().enqueue(trackInputValue, this);
        transaction.getReactMountReady().enqueue(trapBubbledEventsLocal, this);
        break;
    }

    assertValidProps(this, props);

    // We create tags in the namespace of their parent container, except HTML
    // tags get no namespace.
    var namespaceURI;
    var parentTag;
    if (hostParent != null) {
      namespaceURI = hostParent._namespaceURI;
      parentTag = hostParent._tag;
    } else if (hostContainerInfo._tag) {
      namespaceURI = hostContainerInfo._namespaceURI;
      parentTag = hostContainerInfo._tag;
    }
    if (namespaceURI == null || namespaceURI === DOMNamespaces.svg && parentTag === 'foreignobject') {
      namespaceURI = DOMNamespaces.html;
    }
    if (namespaceURI === DOMNamespaces.html) {
      if (this._tag === 'svg') {
        namespaceURI = DOMNamespaces.svg;
      } else if (this._tag === 'math') {
        namespaceURI = DOMNamespaces.mathml;
      }
    }
    this._namespaceURI = namespaceURI;

    if (process.env.NODE_ENV !== 'production') {
      var parentInfo;
      if (hostParent != null) {
        parentInfo = hostParent._ancestorInfo;
      } else if (hostContainerInfo._tag) {
        parentInfo = hostContainerInfo._ancestorInfo;
      }
      if (parentInfo) {
        // parentInfo should always be present except for the top-level
        // component when server rendering
        validateDOMNesting(this._tag, null, this, parentInfo);
      }
      this._ancestorInfo = validateDOMNesting.updatedAncestorInfo(parentInfo, this._tag, this);
    }

    var mountImage;
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var el;
      if (namespaceURI === DOMNamespaces.html) {
        if (this._tag === 'script') {
          // Create the script via .innerHTML so its "parser-inserted" flag is
          // set to true and it does not execute
          var div = ownerDocument.createElement('div');
          var type = this._currentElement.type;
          div.innerHTML = '<' + type + '></' + type + '>';
          el = div.removeChild(div.firstChild);
        } else if (props.is) {
          el = ownerDocument.createElement(this._currentElement.type, props.is);
        } else {
          // Separate else branch instead of using `props.is || undefined` above becuase of a Firefox bug.
          // See discussion in https://github.com/facebook/react/pull/6896
          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
          el = ownerDocument.createElement(this._currentElement.type);
        }
      } else {
        el = ownerDocument.createElementNS(namespaceURI, this._currentElement.type);
      }
      ReactDOMComponentTree.precacheNode(this, el);
      this._flags |= Flags.hasCachedChildNodes;
      if (!this._hostParent) {
        DOMPropertyOperations.setAttributeForRoot(el);
      }
      this._updateDOMProperties(null, props, transaction);
      var lazyTree = DOMLazyTree(el);
      this._createInitialChildren(transaction, props, context, lazyTree);
      mountImage = lazyTree;
    } else {
      var tagOpen = this._createOpenTagMarkupAndPutListeners(transaction, props);
      var tagContent = this._createContentMarkup(transaction, props, context);
      if (!tagContent && omittedCloseTags[this._tag]) {
        mountImage = tagOpen + '/>';
      } else {
        mountImage = tagOpen + '>' + tagContent + '</' + this._currentElement.type + '>';
      }
    }

    switch (this._tag) {
      case 'input':
        transaction.getReactMountReady().enqueue(inputPostMount, this);
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'textarea':
        transaction.getReactMountReady().enqueue(textareaPostMount, this);
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'select':
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'button':
        if (props.autoFocus) {
          transaction.getReactMountReady().enqueue(AutoFocusUtils.focusDOMComponent, this);
        }
        break;
      case 'option':
        transaction.getReactMountReady().enqueue(optionPostMount, this);
        break;
    }

    return mountImage;
  },

  /**
   * Creates markup for the open tag and all attributes.
   *
   * This method has side effects because events get registered.
   *
   * Iterating over object properties is faster than iterating over arrays.
   * @see http://jsperf.com/obj-vs-arr-iteration
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @return {string} Markup of opening tag.
   */
  _createOpenTagMarkupAndPutListeners: function (transaction, props) {
    var ret = '<' + this._currentElement.type;

    for (var propKey in props) {
      if (!props.hasOwnProperty(propKey)) {
        continue;
      }
      var propValue = props[propKey];
      if (propValue == null) {
        continue;
      }
      if (registrationNameModules.hasOwnProperty(propKey)) {
        if (propValue) {
          enqueuePutListener(this, propKey, propValue, transaction);
        }
      } else {
        if (propKey === STYLE) {
          if (propValue) {
            if (process.env.NODE_ENV !== 'production') {
              // See `_updateDOMProperties`. style block
              this._previousStyle = propValue;
            }
            propValue = this._previousStyleCopy = _assign({}, props.style);
          }
          propValue = CSSPropertyOperations.createMarkupForStyles(propValue, this);
        }
        var markup = null;
        if (this._tag != null && isCustomComponent(this._tag, props)) {
          if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
            markup = DOMPropertyOperations.createMarkupForCustomAttribute(propKey, propValue);
          }
        } else {
          markup = DOMPropertyOperations.createMarkupForProperty(propKey, propValue);
        }
        if (markup) {
          ret += ' ' + markup;
        }
      }
    }

    // For static pages, no need to put React ID and checksum. Saves lots of
    // bytes.
    if (transaction.renderToStaticMarkup) {
      return ret;
    }

    if (!this._hostParent) {
      ret += ' ' + DOMPropertyOperations.createMarkupForRoot();
    }
    ret += ' ' + DOMPropertyOperations.createMarkupForID(this._domID);
    return ret;
  },

  /**
   * Creates markup for the content between the tags.
   *
   * @private
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} props
   * @param {object} context
   * @return {string} Content markup.
   */
  _createContentMarkup: function (transaction, props, context) {
    var ret = '';

    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        ret = innerHTML.__html;
      }
    } else {
      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      if (contentToUse != null) {
        // TODO: Validate that text is allowed as a child of this node
        ret = escapeTextContentForBrowser(contentToUse);
        if (process.env.NODE_ENV !== 'production') {
          setAndValidateContentChildDev.call(this, contentToUse);
        }
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(childrenToUse, transaction, context);
        ret = mountImages.join('');
      }
    }
    if (newlineEatingTags[this._tag] && ret.charAt(0) === '\n') {
      // text/html ignores the first character in these tags if it's a newline
      // Prefer to break application/xml over text/html (for now) by adding
      // a newline specifically to get eaten by the parser. (Alternately for
      // textareas, replacing "^\n" with "\r\n" doesn't get eaten, and the first
      // \r is normalized out by HTMLTextAreaElement#value.)
      // See: <http://www.w3.org/TR/html-polyglot/#newlines-in-textarea-and-pre>
      // See: <http://www.w3.org/TR/html5/syntax.html#element-restrictions>
      // See: <http://www.w3.org/TR/html5/syntax.html#newlines>
      // See: Parsing of "textarea" "listing" and "pre" elements
      //  from <http://www.w3.org/TR/html5/syntax.html#parsing-main-inbody>
      return '\n' + ret;
    } else {
      return ret;
    }
  },

  _createInitialChildren: function (transaction, props, context, lazyTree) {
    // Intentional use of != to avoid catching zero/false.
    var innerHTML = props.dangerouslySetInnerHTML;
    if (innerHTML != null) {
      if (innerHTML.__html != null) {
        DOMLazyTree.queueHTML(lazyTree, innerHTML.__html);
      }
    } else {
      var contentToUse = CONTENT_TYPES[typeof props.children] ? props.children : null;
      var childrenToUse = contentToUse != null ? null : props.children;
      // TODO: Validate that text is allowed as a child of this node
      if (contentToUse != null) {
        // Avoid setting textContent when the text is empty. In IE11 setting
        // textContent on a text area will cause the placeholder to not
        // show within the textarea until it has been focused and blurred again.
        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
        if (contentToUse !== '') {
          if (process.env.NODE_ENV !== 'production') {
            setAndValidateContentChildDev.call(this, contentToUse);
          }
          DOMLazyTree.queueText(lazyTree, contentToUse);
        }
      } else if (childrenToUse != null) {
        var mountImages = this.mountChildren(childrenToUse, transaction, context);
        for (var i = 0; i < mountImages.length; i++) {
          DOMLazyTree.queueChild(lazyTree, mountImages[i]);
        }
      }
    }
  },

  /**
   * Receives a next element and updates the component.
   *
   * @internal
   * @param {ReactElement} nextElement
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @param {object} context
   */
  receiveComponent: function (nextElement, transaction, context) {
    var prevElement = this._currentElement;
    this._currentElement = nextElement;
    this.updateComponent(transaction, prevElement, nextElement, context);
  },

  /**
   * Updates a DOM component after it has already been allocated and
   * attached to the DOM. Reconciles the root DOM node, then recurses.
   *
   * @param {ReactReconcileTransaction} transaction
   * @param {ReactElement} prevElement
   * @param {ReactElement} nextElement
   * @internal
   * @overridable
   */
  updateComponent: function (transaction, prevElement, nextElement, context) {
    var lastProps = prevElement.props;
    var nextProps = this._currentElement.props;

    switch (this._tag) {
      case 'input':
        lastProps = ReactDOMInput.getHostProps(this, lastProps);
        nextProps = ReactDOMInput.getHostProps(this, nextProps);
        break;
      case 'option':
        lastProps = ReactDOMOption.getHostProps(this, lastProps);
        nextProps = ReactDOMOption.getHostProps(this, nextProps);
        break;
      case 'select':
        lastProps = ReactDOMSelect.getHostProps(this, lastProps);
        nextProps = ReactDOMSelect.getHostProps(this, nextProps);
        break;
      case 'textarea':
        lastProps = ReactDOMTextarea.getHostProps(this, lastProps);
        nextProps = ReactDOMTextarea.getHostProps(this, nextProps);
        break;
    }

    assertValidProps(this, nextProps);
    this._updateDOMProperties(lastProps, nextProps, transaction);
    this._updateDOMChildren(lastProps, nextProps, transaction, context);

    switch (this._tag) {
      case 'input':
        // Update the wrapper around inputs *after* updating props. This has to
        // happen after `_updateDOMProperties`. Otherwise HTML5 input validations
        // raise warnings and prevent the new value from being assigned.
        ReactDOMInput.updateWrapper(this);
        break;
      case 'textarea':
        ReactDOMTextarea.updateWrapper(this);
        break;
      case 'select':
        // <select> value update needs to occur after <option> children
        // reconciliation
        transaction.getReactMountReady().enqueue(postUpdateSelectWrapper, this);
        break;
    }
  },

  /**
   * Reconciles the properties by detecting differences in property values and
   * updating the DOM as necessary. This function is probably the single most
   * critical path for performance optimization.
   *
   * TODO: Benchmark whether checking for changed values in memory actually
   *       improves performance (especially statically positioned elements).
   * TODO: Benchmark the effects of putting this at the top since 99% of props
   *       do not change for a given reconciliation.
   * TODO: Benchmark areas that can be improved with caching.
   *
   * @private
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {?DOMElement} node
   */
  _updateDOMProperties: function (lastProps, nextProps, transaction) {
    var propKey;
    var styleName;
    var styleUpdates;
    for (propKey in lastProps) {
      if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
        continue;
      }
      if (propKey === STYLE) {
        var lastStyle = this._previousStyleCopy;
        for (styleName in lastStyle) {
          if (lastStyle.hasOwnProperty(styleName)) {
            styleUpdates = styleUpdates || {};
            styleUpdates[styleName] = '';
          }
        }
        this._previousStyleCopy = null;
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        if (lastProps[propKey]) {
          // Only call deleteListener if there was a listener previously or
          // else willDeleteListener gets called when there wasn't actually a
          // listener (e.g., onClick={null})
          deleteListener(this, propKey);
        }
      } else if (isCustomComponent(this._tag, lastProps)) {
        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
          DOMPropertyOperations.deleteValueForAttribute(getNode(this), propKey);
        }
      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
        DOMPropertyOperations.deleteValueForProperty(getNode(this), propKey);
      }
    }
    for (propKey in nextProps) {
      var nextProp = nextProps[propKey];
      var lastProp = propKey === STYLE ? this._previousStyleCopy : lastProps != null ? lastProps[propKey] : undefined;
      if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
        continue;
      }
      if (propKey === STYLE) {
        if (nextProp) {
          if (process.env.NODE_ENV !== 'production') {
            checkAndWarnForMutatedStyle(this._previousStyleCopy, this._previousStyle, this);
            this._previousStyle = nextProp;
          }
          nextProp = this._previousStyleCopy = _assign({}, nextProp);
        } else {
          this._previousStyleCopy = null;
        }
        if (lastProp) {
          // Unset styles on `lastProp` but not on `nextProp`.
          for (styleName in lastProp) {
            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = '';
            }
          }
          // Update styles that changed since `lastProp`.
          for (styleName in nextProp) {
            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
              styleUpdates = styleUpdates || {};
              styleUpdates[styleName] = nextProp[styleName];
            }
          }
        } else {
          // Relies on `updateStylesByID` not mutating `styleUpdates`.
          styleUpdates = nextProp;
        }
      } else if (registrationNameModules.hasOwnProperty(propKey)) {
        if (nextProp) {
          enqueuePutListener(this, propKey, nextProp, transaction);
        } else if (lastProp) {
          deleteListener(this, propKey);
        }
      } else if (isCustomComponent(this._tag, nextProps)) {
        if (!RESERVED_PROPS.hasOwnProperty(propKey)) {
          DOMPropertyOperations.setValueForAttribute(getNode(this), propKey, nextProp);
        }
      } else if (DOMProperty.properties[propKey] || DOMProperty.isCustomAttribute(propKey)) {
        var node = getNode(this);
        // If we're updating to null or undefined, we should remove the property
        // from the DOM node instead of inadvertently setting to a string. This
        // brings us in line with the same behavior we have on initial render.
        if (nextProp != null) {
          DOMPropertyOperations.setValueForProperty(node, propKey, nextProp);
        } else {
          DOMPropertyOperations.deleteValueForProperty(node, propKey);
        }
      }
    }
    if (styleUpdates) {
      CSSPropertyOperations.setValueForStyles(getNode(this), styleUpdates, this);
    }
  },

  /**
   * Reconciles the children with the various properties that affect the
   * children content.
   *
   * @param {object} lastProps
   * @param {object} nextProps
   * @param {ReactReconcileTransaction} transaction
   * @param {object} context
   */
  _updateDOMChildren: function (lastProps, nextProps, transaction, context) {
    var lastContent = CONTENT_TYPES[typeof lastProps.children] ? lastProps.children : null;
    var nextContent = CONTENT_TYPES[typeof nextProps.children] ? nextProps.children : null;

    var lastHtml = lastProps.dangerouslySetInnerHTML && lastProps.dangerouslySetInnerHTML.__html;
    var nextHtml = nextProps.dangerouslySetInnerHTML && nextProps.dangerouslySetInnerHTML.__html;

    // Note the use of `!=` which checks for null or undefined.
    var lastChildren = lastContent != null ? null : lastProps.children;
    var nextChildren = nextContent != null ? null : nextProps.children;

    // If we're switching from children to content/html or vice versa, remove
    // the old content
    var lastHasContentOrHtml = lastContent != null || lastHtml != null;
    var nextHasContentOrHtml = nextContent != null || nextHtml != null;
    if (lastChildren != null && nextChildren == null) {
      this.updateChildren(null, transaction, context);
    } else if (lastHasContentOrHtml && !nextHasContentOrHtml) {
      this.updateTextContent('');
      if (process.env.NODE_ENV !== 'production') {
        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
      }
    }

    if (nextContent != null) {
      if (lastContent !== nextContent) {
        this.updateTextContent('' + nextContent);
        if (process.env.NODE_ENV !== 'production') {
          setAndValidateContentChildDev.call(this, nextContent);
        }
      }
    } else if (nextHtml != null) {
      if (lastHtml !== nextHtml) {
        this.updateMarkup('' + nextHtml);
      }
      if (process.env.NODE_ENV !== 'production') {
        ReactInstrumentation.debugTool.onSetChildren(this._debugID, []);
      }
    } else if (nextChildren != null) {
      if (process.env.NODE_ENV !== 'production') {
        setAndValidateContentChildDev.call(this, null);
      }

      this.updateChildren(nextChildren, transaction, context);
    }
  },

  getHostNode: function () {
    return getNode(this);
  },

  /**
   * Destroys all event registrations for this instance. Does not remove from
   * the DOM. That must be done by the parent.
   *
   * @internal
   */
  unmountComponent: function (safely) {
    switch (this._tag) {
      case 'audio':
      case 'form':
      case 'iframe':
      case 'img':
      case 'link':
      case 'object':
      case 'source':
      case 'video':
        var listeners = this._wrapperState.listeners;
        if (listeners) {
          for (var i = 0; i < listeners.length; i++) {
            listeners[i].remove();
          }
        }
        break;
      case 'input':
      case 'textarea':
        inputValueTracking.stopTracking(this);
        break;
      case 'html':
      case 'head':
      case 'body':
        /**
         * Components like <html> <head> and <body> can't be removed or added
         * easily in a cross-browser way, however it's valuable to be able to
         * take advantage of React's reconciliation for styling and <title>
         * management. So we just document it and throw in dangerous cases.
         */
         true ? process.env.NODE_ENV !== 'production' ? invariant(false, '<%s> tried to unmount. Because of cross-browser quirks it is impossible to unmount some top-level components (eg <html>, <head>, and <body>) reliably and efficiently. To fix this, have a single top-level component that never unmounts render these elements.', this._tag) : _prodInvariant('66', this._tag) : void 0;
        break;
    }

    this.unmountChildren(safely);
    ReactDOMComponentTree.uncacheNode(this);
    EventPluginHub.deleteAllListeners(this);
    this._rootNodeID = 0;
    this._domID = 0;
    this._wrapperState = null;

    if (process.env.NODE_ENV !== 'production') {
      setAndValidateContentChildDev.call(this, null);
    }
  },

  getPublicInstance: function () {
    return getNode(this);
  }
};

_assign(ReactDOMComponent.prototype, ReactDOMComponent.Mixin, ReactMultiChild.Mixin);

module.exports = ReactDOMComponent;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 521 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var validateDOMNesting = __webpack_require__(139);

var DOC_NODE_TYPE = 9;

function ReactDOMContainerInfo(topLevelWrapper, node) {
  var info = {
    _topLevelWrapper: topLevelWrapper,
    _idCounter: 1,
    _ownerDocument: node ? node.nodeType === DOC_NODE_TYPE ? node : node.ownerDocument : null,
    _node: node,
    _tag: node ? node.nodeName.toLowerCase() : null,
    _namespaceURI: node ? node.namespaceURI : null
  };
  if (process.env.NODE_ENV !== 'production') {
    info._ancestorInfo = node ? validateDOMNesting.updatedAncestorInfo(null, info._tag, null) : null;
  }
  return info;
}

module.exports = ReactDOMContainerInfo;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 522 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(4);

var DOMLazyTree = __webpack_require__(40);
var ReactDOMComponentTree = __webpack_require__(11);

var ReactDOMEmptyComponent = function (instantiate) {
  // ReactCompositeComponent uses this:
  this._currentElement = null;
  // ReactDOMComponentTree uses these:
  this._hostNode = null;
  this._hostParent = null;
  this._hostContainerInfo = null;
  this._domID = 0;
};
_assign(ReactDOMEmptyComponent.prototype, {
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    var domID = hostContainerInfo._idCounter++;
    this._domID = domID;
    this._hostParent = hostParent;
    this._hostContainerInfo = hostContainerInfo;

    var nodeValue = ' react-empty: ' + this._domID + ' ';
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var node = ownerDocument.createComment(nodeValue);
      ReactDOMComponentTree.precacheNode(this, node);
      return DOMLazyTree(node);
    } else {
      if (transaction.renderToStaticMarkup) {
        // Normally we'd insert a comment node, but since this is a situation
        // where React won't take over (static pages), we can simply return
        // nothing.
        return '';
      }
      return '<!--' + nodeValue + '-->';
    }
  },
  receiveComponent: function () {},
  getHostNode: function () {
    return ReactDOMComponentTree.getNodeFromInstance(this);
  },
  unmountComponent: function () {
    ReactDOMComponentTree.uncacheNode(this);
  }
});

module.exports = ReactDOMEmptyComponent;

/***/ }),
/* 523 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactDOMFeatureFlags = {
  useCreateElement: true,
  useFiber: false
};

module.exports = ReactDOMFeatureFlags;

/***/ }),
/* 524 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMChildrenOperations = __webpack_require__(125);
var ReactDOMComponentTree = __webpack_require__(11);

/**
 * Operations used to process updates to DOM nodes.
 */
var ReactDOMIDOperations = {
  /**
   * Updates a component's children by processing a series of updates.
   *
   * @param {array<object>} updates List of update configurations.
   * @internal
   */
  dangerouslyProcessChildrenUpdates: function (parentInst, updates) {
    var node = ReactDOMComponentTree.getNodeFromInstance(parentInst);
    DOMChildrenOperations.processUpdates(node, updates);
  }
};

module.exports = ReactDOMIDOperations;

/***/ }),
/* 525 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(7),
    _assign = __webpack_require__(4);

var DOMPropertyOperations = __webpack_require__(225);
var LinkedValueUtils = __webpack_require__(129);
var ReactDOMComponentTree = __webpack_require__(11);
var ReactUpdates = __webpack_require__(19);

var invariant = __webpack_require__(1);
var warning = __webpack_require__(2);

var didWarnValueLink = false;
var didWarnCheckedLink = false;
var didWarnValueDefaultValue = false;
var didWarnCheckedDefaultChecked = false;
var didWarnControlledToUncontrolled = false;
var didWarnUncontrolledToControlled = false;

function forceUpdateIfMounted() {
  if (this._rootNodeID) {
    // DOM component is still mounted; update
    ReactDOMInput.updateWrapper(this);
  }
}

function isControlled(props) {
  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
  return usesChecked ? props.checked != null : props.value != null;
}

/**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * @see http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */
var ReactDOMInput = {
  getHostProps: function (inst, props) {
    var value = LinkedValueUtils.getValue(props);
    var checked = LinkedValueUtils.getChecked(props);

    var hostProps = _assign({
      // Make sure we set .type before any other properties (setting .value
      // before .type means .value is lost in IE11 and below)
      type: undefined,
      // Make sure we set .step before .value (setting .value before .step
      // means .value is rounded on mount, based upon step precision)
      step: undefined,
      // Make sure we set .min & .max before .value (to ensure proper order
      // in corner cases such as min or max deriving from value, e.g. Issue #7170)
      min: undefined,
      max: undefined
    }, props, {
      defaultChecked: undefined,
      defaultValue: undefined,
      value: value != null ? value : inst._wrapperState.initialValue,
      checked: checked != null ? checked : inst._wrapperState.initialChecked,
      onChange: inst._wrapperState.onChange
    });

    return hostProps;
  },

  mountWrapper: function (inst, props) {
    if (process.env.NODE_ENV !== 'production') {
      LinkedValueUtils.checkPropTypes('input', props, inst._currentElement._owner);

      var owner = inst._currentElement._owner;

      if (props.valueLink !== undefined && !didWarnValueLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      if (props.checkedLink !== undefined && !didWarnCheckedLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`checkedLink` prop on `input` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnCheckedLink = true;
      }
      if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnCheckedDefaultChecked = true;
      }
      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnValueDefaultValue = true;
      }
    }

    var defaultValue = props.defaultValue;
    inst._wrapperState = {
      initialChecked: props.checked != null ? props.checked : props.defaultChecked,
      initialValue: props.value != null ? props.value : defaultValue,
      listeners: null,
      onChange: _handleChange.bind(inst),
      controlled: isControlled(props)
    };
  },

  updateWrapper: function (inst) {
    var props = inst._currentElement.props;

    if (process.env.NODE_ENV !== 'production') {
      var controlled = isControlled(props);
      var owner = inst._currentElement._owner;

      if (!inst._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnUncontrolledToControlled = true;
      }
      if (inst._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
        process.env.NODE_ENV !== 'production' ? warning(false, '%s is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', owner && owner.getName() || 'A component', props.type) : void 0;
        didWarnControlledToUncontrolled = true;
      }
    }

    // TODO: Shouldn't this be getChecked(props)?
    var checked = props.checked;
    if (checked != null) {
      DOMPropertyOperations.setValueForProperty(ReactDOMComponentTree.getNodeFromInstance(inst), 'checked', checked || false);
    }

    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      if (value === 0 && node.value === '') {
        node.value = '0';
        // Note: IE9 reports a number inputs as 'text', so check props instead.
      } else if (props.type === 'number') {
        // Simulate `input.valueAsNumber`. IE9 does not support it
        var valueAsNumber = parseFloat(node.value, 10) || 0;

        if (
        // eslint-disable-next-line
        value != valueAsNumber ||
        // eslint-disable-next-line
        value == valueAsNumber && node.value != value) {
          // Cast `value` to a string to ensure the value is set correctly. While
          // browsers typically do this as necessary, jsdom doesn't.
          node.value = '' + value;
        }
      } else if (node.value !== '' + value) {
        // Cast `value` to a string to ensure the value is set correctly. While
        // browsers typically do this as necessary, jsdom doesn't.
        node.value = '' + value;
      }
    } else {
      if (props.value == null && props.defaultValue != null) {
        // In Chrome, assigning defaultValue to certain input types triggers input validation.
        // For number inputs, the display value loses trailing decimal points. For email inputs,
        // Chrome raises "The specified value <x> is not a valid email address".
        //
        // Here we check to see if the defaultValue has actually changed, avoiding these problems
        // when the user is inputting text
        //
        // https://github.com/facebook/react/issues/7253
        if (node.defaultValue !== '' + props.defaultValue) {
          node.defaultValue = '' + props.defaultValue;
        }
      }
      if (props.checked == null && props.defaultChecked != null) {
        node.defaultChecked = !!props.defaultChecked;
      }
    }
  },

  postMountWrapper: function (inst) {
    var props = inst._currentElement.props;

    // This is in postMount because we need access to the DOM node, which is not
    // available until after the component has mounted.
    var node = ReactDOMComponentTree.getNodeFromInstance(inst);

    // Detach value from defaultValue. We won't do anything if we're working on
    // submit or reset inputs as those values & defaultValues are linked. They
    // are not resetable nodes so this operation doesn't matter and actually
    // removes browser-default values (eg "Submit Query") when no value is
    // provided.

    switch (props.type) {
      case 'submit':
      case 'reset':
        break;
      case 'color':
      case 'date':
      case 'datetime':
      case 'datetime-local':
      case 'month':
      case 'time':
      case 'week':
        // This fixes the no-show issue on iOS Safari and Android Chrome:
        // https://github.com/facebook/react/issues/7233
        node.value = '';
        node.value = node.defaultValue;
        break;
      default:
        node.value = node.value;
        break;
    }

    // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
    // this is needed to work around a chrome bug where setting defaultChecked
    // will sometimes influence the value of checked (even after detachment).
    // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
    // We need to temporarily unset name to avoid disrupting radio button groups.
    var name = node.name;
    if (name !== '') {
      node.name = '';
    }
    node.defaultChecked = !node.defaultChecked;
    node.defaultChecked = !node.defaultChecked;
    if (name !== '') {
      node.name = name;
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;

  var returnValue = LinkedValueUtils.executeOnChange(props, event);

  // Here we use asap to wait until all updates have propagated, which
  // is important when using controlled components within layers:
  // https://github.com/facebook/react/issues/1698
  ReactUpdates.asap(forceUpdateIfMounted, this);

  var name = props.name;
  if (props.type === 'radio' && name != null) {
    var rootNode = ReactDOMComponentTree.getNodeFromInstance(this);
    var queryRoot = rootNode;

    while (queryRoot.parentNode) {
      queryRoot = queryRoot.parentNode;
    }

    // If `rootNode.form` was non-null, then we could try `form.elements`,
    // but that sometimes behaves strangely in IE8. We could also try using
    // `form.getElementsByName`, but that will only return direct children
    // and won't include inputs that use the HTML5 `form=` attribute. Since
    // the input might not even be in a form, let's just use the global
    // `querySelectorAll` to ensure we don't miss anything.
    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

    for (var i = 0; i < group.length; i++) {
      var otherNode = group[i];
      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
        continue;
      }
      // This will throw if radio buttons rendered by different copies of React
      // and the same name are rendered into the same form (same as #1939).
      // That's probably okay; we don't support it just as we don't support
      // mixing React radio buttons with non-React ones.
      var otherInstance = ReactDOMComponentTree.getInstanceFromNode(otherNode);
      !otherInstance ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : _prodInvariant('90') : void 0;
      // If this is a controlled radio button group, forcing the input that
      // was previously checked to update will cause it to be come re-checked
      // as appropriate.
      ReactUpdates.asap(forceUpdateIfMounted, otherInstance);
    }
  }

  return returnValue;
}

module.exports = ReactDOMInput;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 526 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMProperty = __webpack_require__(25);
var ReactComponentTreeHook = __webpack_require__(8);

var warning = __webpack_require__(2);

var warnedProperties = {};
var rARIA = new RegExp('^(aria)-[' + DOMProperty.ATTRIBUTE_NAME_CHAR + ']*$');

function validateProperty(tagName, name, debugID) {
  if (warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
    return true;
  }

  if (rARIA.test(name)) {
    var lowerCasedName = name.toLowerCase();
    var standardName = DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

    // If this is an aria-* attribute, but is not listed in the known DOM
    // DOM properties, then it is an invalid aria-* attribute.
    if (standardName == null) {
      warnedProperties[name] = true;
      return false;
    }
    // aria-* attributes should be lowercase; suggest the lowercase version.
    if (name !== standardName) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown ARIA attribute %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      warnedProperties[name] = true;
      return true;
    }
  }

  return true;
}

function warnInvalidARIAProps(debugID, element) {
  var invalidProps = [];

  for (var key in element.props) {
    var isValid = validateProperty(element.type, key, debugID);
    if (!isValid) {
      invalidProps.push(key);
    }
  }

  var unknownPropString = invalidProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (invalidProps.length === 1) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  } else if (invalidProps.length > 1) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  }
}

function handleElement(debugID, element) {
  if (element == null || typeof element.type !== 'string') {
    return;
  }
  if (element.type.indexOf('-') >= 0 || element.props.is) {
    return;
  }

  warnInvalidARIAProps(debugID, element);
}

var ReactDOMInvalidARIAHook = {
  onBeforeMountComponent: function (debugID, element) {
    if (process.env.NODE_ENV !== 'production') {
      handleElement(debugID, element);
    }
  },
  onBeforeUpdateComponent: function (debugID, element) {
    if (process.env.NODE_ENV !== 'production') {
      handleElement(debugID, element);
    }
  }
};

module.exports = ReactDOMInvalidARIAHook;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 527 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactComponentTreeHook = __webpack_require__(8);

var warning = __webpack_require__(2);

var didWarnValueNull = false;

function handleElement(debugID, element) {
  if (element == null) {
    return;
  }
  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {
    return;
  }
  if (element.props != null && element.props.value === null && !didWarnValueNull) {
    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;

    didWarnValueNull = true;
  }
}

var ReactDOMNullInputValuePropHook = {
  onBeforeMountComponent: function (debugID, element) {
    handleElement(debugID, element);
  },
  onBeforeUpdateComponent: function (debugID, element) {
    handleElement(debugID, element);
  }
};

module.exports = ReactDOMNullInputValuePropHook;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 528 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(4);

var React = __webpack_require__(17);
var ReactDOMComponentTree = __webpack_require__(11);
var ReactDOMSelect = __webpack_require__(227);

var warning = __webpack_require__(2);
var didWarnInvalidOptionChildren = false;

function flattenChildren(children) {
  var content = '';

  // Flatten children and warn if they aren't strings or numbers;
  // invalid types are ignored.
  React.Children.forEach(children, function (child) {
    if (child == null) {
      return;
    }
    if (typeof child === 'string' || typeof child === 'number') {
      content += child;
    } else if (!didWarnInvalidOptionChildren) {
      didWarnInvalidOptionChildren = true;
      process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : void 0;
    }
  });

  return content;
}

/**
 * Implements an <option> host component that warns when `selected` is set.
 */
var ReactDOMOption = {
  mountWrapper: function (inst, props, hostParent) {
    // TODO (yungsters): Remove support for `selected` in <option>.
    if (process.env.NODE_ENV !== 'production') {
      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : void 0;
    }

    // Look up whether this option is 'selected'
    var selectValue = null;
    if (hostParent != null) {
      var selectParent = hostParent;

      if (selectParent._tag === 'optgroup') {
        selectParent = selectParent._hostParent;
      }

      if (selectParent != null && selectParent._tag === 'select') {
        selectValue = ReactDOMSelect.getSelectValueContext(selectParent);
      }
    }

    // If the value is null (e.g., no specified value or after initial mount)
    // or missing (e.g., for <datalist>), we don't change props.selected
    var selected = null;
    if (selectValue != null) {
      var value;
      if (props.value != null) {
        value = props.value + '';
      } else {
        value = flattenChildren(props.children);
      }
      selected = false;
      if (Array.isArray(selectValue)) {
        // multiple
        for (var i = 0; i < selectValue.length; i++) {
          if ('' + selectValue[i] === value) {
            selected = true;
            break;
          }
        }
      } else {
        selected = '' + selectValue === value;
      }
    }

    inst._wrapperState = { selected: selected };
  },

  postMountWrapper: function (inst) {
    // value="" should make a value attribute (#6219)
    var props = inst._currentElement.props;
    if (props.value != null) {
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      node.setAttribute('value', props.value);
    }
  },

  getHostProps: function (inst, props) {
    var hostProps = _assign({ selected: undefined, children: undefined }, props);

    // Read state only from initial mount because <select> updates value
    // manually; we need the initial state only for server rendering
    if (inst._wrapperState.selected != null) {
      hostProps.selected = inst._wrapperState.selected;
    }

    var content = flattenChildren(props.children);

    if (content) {
      hostProps.children = content;
    }

    return hostProps;
  }
};

module.exports = ReactDOMOption;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 529 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ExecutionEnvironment = __webpack_require__(5);

var getNodeForCharacterOffset = __webpack_require__(572);
var getTextContentAccessor = __webpack_require__(239);

/**
 * While `isCollapsed` is available on the Selection object and `collapsed`
 * is available on the Range object, IE11 sometimes gets them wrong.
 * If the anchor/focus nodes and offsets are the same, the range is collapsed.
 */
function isCollapsed(anchorNode, anchorOffset, focusNode, focusOffset) {
  return anchorNode === focusNode && anchorOffset === focusOffset;
}

/**
 * Get the appropriate anchor and focus node/offset pairs for IE.
 *
 * The catch here is that IE's selection API doesn't provide information
 * about whether the selection is forward or backward, so we have to
 * behave as though it's always forward.
 *
 * IE text differs from modern selection in that it behaves as though
 * block elements end with a new line. This means character offsets will
 * differ between the two APIs.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getIEOffsets(node) {
  var selection = document.selection;
  var selectedRange = selection.createRange();
  var selectedLength = selectedRange.text.length;

  // Duplicate selection so we can move range without breaking user selection.
  var fromStart = selectedRange.duplicate();
  fromStart.moveToElementText(node);
  fromStart.setEndPoint('EndToStart', selectedRange);

  var startOffset = fromStart.text.length;
  var endOffset = startOffset + selectedLength;

  return {
    start: startOffset,
    end: endOffset
  };
}

/**
 * @param {DOMElement} node
 * @return {?object}
 */
function getModernOffsets(node) {
  var selection = window.getSelection && window.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode;
  var anchorOffset = selection.anchorOffset;
  var focusNode = selection.focusNode;
  var focusOffset = selection.focusOffset;

  var currentRange = selection.getRangeAt(0);

  // In Firefox, range.startContainer and range.endContainer can be "anonymous
  // divs", e.g. the up/down buttons on an <input type="number">. Anonymous
  // divs do not seem to expose properties, triggering a "Permission denied
  // error" if any of its properties are accessed. The only seemingly possible
  // way to avoid erroring is to access a property that typically works for
  // non-anonymous divs and catch any error that may otherwise arise. See
  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427
  try {
    /* eslint-disable no-unused-expressions */
    currentRange.startContainer.nodeType;
    currentRange.endContainer.nodeType;
    /* eslint-enable no-unused-expressions */
  } catch (e) {
    return null;
  }

  // If the node and offset values are the same, the selection is collapsed.
  // `Selection.isCollapsed` is available natively, but IE sometimes gets
  // this value wrong.
  var isSelectionCollapsed = isCollapsed(selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);

  var rangeLength = isSelectionCollapsed ? 0 : currentRange.toString().length;

  var tempRange = currentRange.cloneRange();
  tempRange.selectNodeContents(node);
  tempRange.setEnd(currentRange.startContainer, currentRange.startOffset);

  var isTempRangeCollapsed = isCollapsed(tempRange.startContainer, tempRange.startOffset, tempRange.endContainer, tempRange.endOffset);

  var start = isTempRangeCollapsed ? 0 : tempRange.toString().length;
  var end = start + rangeLength;

  // Detect whether the selection is backward.
  var detectionRange = document.createRange();
  detectionRange.setStart(anchorNode, anchorOffset);
  detectionRange.setEnd(focusNode, focusOffset);
  var isBackward = detectionRange.collapsed;

  return {
    start: isBackward ? end : start,
    end: isBackward ? start : end
  };
}

/**
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setIEOffsets(node, offsets) {
  var range = document.selection.createRange().duplicate();
  var start, end;

  if (offsets.end === undefined) {
    start = offsets.start;
    end = start;
  } else if (offsets.start > offsets.end) {
    start = offsets.end;
    end = offsets.start;
  } else {
    start = offsets.start;
    end = offsets.end;
  }

  range.moveToElementText(node);
  range.moveStart('character', start);
  range.setEndPoint('EndToStart', range);
  range.moveEnd('character', end - start);
  range.select();
}

/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setModernOffsets(node, offsets) {
  if (!window.getSelection) {
    return;
  }

  var selection = window.getSelection();
  var length = node[getTextContentAccessor()].length;
  var start = Math.min(offsets.start, length);
  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

  // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.
  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    var range = document.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

var useIEOffsets = ExecutionEnvironment.canUseDOM && 'selection' in document && !('getSelection' in window);

var ReactDOMSelection = {
  /**
   * @param {DOMElement} node
   */
  getOffsets: useIEOffsets ? getIEOffsets : getModernOffsets,

  /**
   * @param {DOMElement|DOMTextNode} node
   * @param {object} offsets
   */
  setOffsets: useIEOffsets ? setIEOffsets : setModernOffsets
};

module.exports = ReactDOMSelection;

/***/ }),
/* 530 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(7),
    _assign = __webpack_require__(4);

var DOMChildrenOperations = __webpack_require__(125);
var DOMLazyTree = __webpack_require__(40);
var ReactDOMComponentTree = __webpack_require__(11);

var escapeTextContentForBrowser = __webpack_require__(84);
var invariant = __webpack_require__(1);
var validateDOMNesting = __webpack_require__(139);

/**
 * Text nodes violate a couple assumptions that React makes about components:
 *
 *  - When mounting text into the DOM, adjacent text nodes are merged.
 *  - Text nodes cannot be assigned a React root ID.
 *
 * This component is used to wrap strings between comment nodes so that they
 * can undergo the same reconciliation that is applied to elements.
 *
 * TODO: Investigate representing React components in the DOM with text nodes.
 *
 * @class ReactDOMTextComponent
 * @extends ReactComponent
 * @internal
 */
var ReactDOMTextComponent = function (text) {
  // TODO: This is really a ReactText (ReactNode), not a ReactElement
  this._currentElement = text;
  this._stringText = '' + text;
  // ReactDOMComponentTree uses these:
  this._hostNode = null;
  this._hostParent = null;

  // Properties
  this._domID = 0;
  this._mountIndex = 0;
  this._closingComment = null;
  this._commentNodes = null;
};

_assign(ReactDOMTextComponent.prototype, {
  /**
   * Creates the markup for this text node. This node is not intended to have
   * any features besides containing text content.
   *
   * @param {ReactReconcileTransaction|ReactServerRenderingTransaction} transaction
   * @return {string} Markup for this text node.
   * @internal
   */
  mountComponent: function (transaction, hostParent, hostContainerInfo, context) {
    if (process.env.NODE_ENV !== 'production') {
      var parentInfo;
      if (hostParent != null) {
        parentInfo = hostParent._ancestorInfo;
      } else if (hostContainerInfo != null) {
        parentInfo = hostContainerInfo._ancestorInfo;
      }
      if (parentInfo) {
        // parentInfo should always be present except for the top-level
        // component when server rendering
        validateDOMNesting(null, this._stringText, this, parentInfo);
      }
    }

    var domID = hostContainerInfo._idCounter++;
    var openingValue = ' react-text: ' + domID + ' ';
    var closingValue = ' /react-text ';
    this._domID = domID;
    this._hostParent = hostParent;
    if (transaction.useCreateElement) {
      var ownerDocument = hostContainerInfo._ownerDocument;
      var openingComment = ownerDocument.createComment(openingValue);
      var closingComment = ownerDocument.createComment(closingValue);
      var lazyTree = DOMLazyTree(ownerDocument.createDocumentFragment());
      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(openingComment));
      if (this._stringText) {
        DOMLazyTree.queueChild(lazyTree, DOMLazyTree(ownerDocument.createTextNode(this._stringText)));
      }
      DOMLazyTree.queueChild(lazyTree, DOMLazyTree(closingComment));
      ReactDOMComponentTree.precacheNode(this, openingComment);
      this._closingComment = closingComment;
      return lazyTree;
    } else {
      var escapedText = escapeTextContentForBrowser(this._stringText);

      if (transaction.renderToStaticMarkup) {
        // Normally we'd wrap this between comment nodes for the reasons stated
        // above, but since this is a situation where React won't take over
        // (static pages), we can simply return the text as it is.
        return escapedText;
      }

      return '<!--' + openingValue + '-->' + escapedText + '<!--' + closingValue + '-->';
    }
  },

  /**
   * Updates this component by updating the text content.
   *
   * @param {ReactText} nextText The next text content
   * @param {ReactReconcileTransaction} transaction
   * @internal
   */
  receiveComponent: function (nextText, transaction) {
    if (nextText !== this._currentElement) {
      this._currentElement = nextText;
      var nextStringText = '' + nextText;
      if (nextStringText !== this._stringText) {
        // TODO: Save this as pending props and use performUpdateIfNecessary
        // and/or updateComponent to do the actual update for consistency with
        // other component types?
        this._stringText = nextStringText;
        var commentNodes = this.getHostNode();
        DOMChildrenOperations.replaceDelimitedText(commentNodes[0], commentNodes[1], nextStringText);
      }
    }
  },

  getHostNode: function () {
    var hostNode = this._commentNodes;
    if (hostNode) {
      return hostNode;
    }
    if (!this._closingComment) {
      var openingComment = ReactDOMComponentTree.getNodeFromInstance(this);
      var node = openingComment.nextSibling;
      while (true) {
        !(node != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing closing comment for text component %s', this._domID) : _prodInvariant('67', this._domID) : void 0;
        if (node.nodeType === 8 && node.nodeValue === ' /react-text ') {
          this._closingComment = node;
          break;
        }
        node = node.nextSibling;
      }
    }
    hostNode = [this._hostNode, this._closingComment];
    this._commentNodes = hostNode;
    return hostNode;
  },

  unmountComponent: function () {
    this._closingComment = null;
    this._commentNodes = null;
    ReactDOMComponentTree.uncacheNode(this);
  }
});

module.exports = ReactDOMTextComponent;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 531 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(7),
    _assign = __webpack_require__(4);

var LinkedValueUtils = __webpack_require__(129);
var ReactDOMComponentTree = __webpack_require__(11);
var ReactUpdates = __webpack_require__(19);

var invariant = __webpack_require__(1);
var warning = __webpack_require__(2);

var didWarnValueLink = false;
var didWarnValDefaultVal = false;

function forceUpdateIfMounted() {
  if (this._rootNodeID) {
    // DOM component is still mounted; update
    ReactDOMTextarea.updateWrapper(this);
  }
}

/**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */
var ReactDOMTextarea = {
  getHostProps: function (inst, props) {
    !(props.dangerouslySetInnerHTML == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : _prodInvariant('91') : void 0;

    // Always set children to the same thing. In IE9, the selection range will
    // get reset if `textContent` is mutated.  We could add a check in setTextContent
    // to only set the value if/when the value differs from the node value (which would
    // completely solve this IE9 bug), but Sebastian+Ben seemed to like this solution.
    // The value can be a boolean or object so that's why it's forced to be a string.
    var hostProps = _assign({}, props, {
      value: undefined,
      defaultValue: undefined,
      children: '' + inst._wrapperState.initialValue,
      onChange: inst._wrapperState.onChange
    });

    return hostProps;
  },

  mountWrapper: function (inst, props) {
    if (process.env.NODE_ENV !== 'production') {
      LinkedValueUtils.checkPropTypes('textarea', props, inst._currentElement._owner);
      if (props.valueLink !== undefined && !didWarnValueLink) {
        process.env.NODE_ENV !== 'production' ? warning(false, '`valueLink` prop on `textarea` is deprecated; set `value` and `onChange` instead.') : void 0;
        didWarnValueLink = true;
      }
      if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components') : void 0;
        didWarnValDefaultVal = true;
      }
    }

    var value = LinkedValueUtils.getValue(props);
    var initialValue = value;

    // Only bother fetching default value if we're going to use it
    if (value == null) {
      var defaultValue = props.defaultValue;
      // TODO (yungsters): Remove support for children content in <textarea>.
      var children = props.children;
      if (children != null) {
        if (process.env.NODE_ENV !== 'production') {
          process.env.NODE_ENV !== 'production' ? warning(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.') : void 0;
        }
        !(defaultValue == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : _prodInvariant('92') : void 0;
        if (Array.isArray(children)) {
          !(children.length <= 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, '<textarea> can only have at most one child.') : _prodInvariant('93') : void 0;
          children = children[0];
        }

        defaultValue = '' + children;
      }
      if (defaultValue == null) {
        defaultValue = '';
      }
      initialValue = defaultValue;
    }

    inst._wrapperState = {
      initialValue: '' + initialValue,
      listeners: null,
      onChange: _handleChange.bind(inst)
    };
  },

  updateWrapper: function (inst) {
    var props = inst._currentElement.props;

    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var value = LinkedValueUtils.getValue(props);
    if (value != null) {
      // Cast `value` to a string to ensure the value is set correctly. While
      // browsers typically do this as necessary, jsdom doesn't.
      var newValue = '' + value;

      // To avoid side effects (such as losing text selection), only set value if changed
      if (newValue !== node.value) {
        node.value = newValue;
      }
      if (props.defaultValue == null) {
        node.defaultValue = newValue;
      }
    }
    if (props.defaultValue != null) {
      node.defaultValue = props.defaultValue;
    }
  },

  postMountWrapper: function (inst) {
    // This is in postMount because we need access to the DOM node, which is not
    // available until after the component has mounted.
    var node = ReactDOMComponentTree.getNodeFromInstance(inst);
    var textContent = node.textContent;

    // Only set node.value if textContent is equal to the expected
    // initial value. In IE10/IE11 there is a bug where the placeholder attribute
    // will populate textContent as well.
    // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
    if (textContent === inst._wrapperState.initialValue) {
      node.value = textContent;
    }
  }
};

function _handleChange(event) {
  var props = this._currentElement.props;
  var returnValue = LinkedValueUtils.executeOnChange(props, event);
  ReactUpdates.asap(forceUpdateIfMounted, this);
  return returnValue;
}

module.exports = ReactDOMTextarea;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 532 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(7);

var invariant = __webpack_require__(1);

/**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */
function getLowestCommonAncestor(instA, instB) {
  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;
  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getNodeFromInstance: Invalid argument.') : _prodInvariant('33') : void 0;

  var depthA = 0;
  for (var tempA = instA; tempA; tempA = tempA._hostParent) {
    depthA++;
  }
  var depthB = 0;
  for (var tempB = instB; tempB; tempB = tempB._hostParent) {
    depthB++;
  }

  // If A is deeper, crawl up.
  while (depthA - depthB > 0) {
    instA = instA._hostParent;
    depthA--;
  }

  // If B is deeper, crawl up.
  while (depthB - depthA > 0) {
    instB = instB._hostParent;
    depthB--;
  }

  // Walk in lockstep until we find a match.
  var depth = depthA;
  while (depth--) {
    if (instA === instB) {
      return instA;
    }
    instA = instA._hostParent;
    instB = instB._hostParent;
  }
  return null;
}

/**
 * Return if A is an ancestor of B.
 */
function isAncestor(instA, instB) {
  !('_hostNode' in instA) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;
  !('_hostNode' in instB) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'isAncestor: Invalid argument.') : _prodInvariant('35') : void 0;

  while (instB) {
    if (instB === instA) {
      return true;
    }
    instB = instB._hostParent;
  }
  return false;
}

/**
 * Return the parent instance of the passed-in instance.
 */
function getParentInstance(inst) {
  !('_hostNode' in inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'getParentInstance: Invalid argument.') : _prodInvariant('36') : void 0;

  return inst._hostParent;
}

/**
 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
 */
function traverseTwoPhase(inst, fn, arg) {
  var path = [];
  while (inst) {
    path.push(inst);
    inst = inst._hostParent;
  }
  var i;
  for (i = path.length; i-- > 0;) {
    fn(path[i], 'captured', arg);
  }
  for (i = 0; i < path.length; i++) {
    fn(path[i], 'bubbled', arg);
  }
}

/**
 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
 * should would receive a `mouseEnter` or `mouseLeave` event.
 *
 * Does not invoke the callback on the nearest common ancestor because nothing
 * "entered" or "left" that element.
 */
function traverseEnterLeave(from, to, fn, argFrom, argTo) {
  var common = from && to ? getLowestCommonAncestor(from, to) : null;
  var pathFrom = [];
  while (from && from !== common) {
    pathFrom.push(from);
    from = from._hostParent;
  }
  var pathTo = [];
  while (to && to !== common) {
    pathTo.push(to);
    to = to._hostParent;
  }
  var i;
  for (i = 0; i < pathFrom.length; i++) {
    fn(pathFrom[i], 'bubbled', argFrom);
  }
  for (i = pathTo.length; i-- > 0;) {
    fn(pathTo[i], 'captured', argTo);
  }
}

module.exports = {
  isAncestor: isAncestor,
  getLowestCommonAncestor: getLowestCommonAncestor,
  getParentInstance: getParentInstance,
  traverseTwoPhase: traverseTwoPhase,
  traverseEnterLeave: traverseEnterLeave
};
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 533 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMProperty = __webpack_require__(25);
var EventPluginRegistry = __webpack_require__(80);
var ReactComponentTreeHook = __webpack_require__(8);

var warning = __webpack_require__(2);

if (process.env.NODE_ENV !== 'production') {
  var reactProps = {
    children: true,
    dangerouslySetInnerHTML: true,
    key: true,
    ref: true,

    autoFocus: true,
    defaultValue: true,
    valueLink: true,
    defaultChecked: true,
    checkedLink: true,
    innerHTML: true,
    suppressContentEditableWarning: true,
    onFocusIn: true,
    onFocusOut: true
  };
  var warnedProperties = {};

  var validateProperty = function (tagName, name, debugID) {
    if (DOMProperty.properties.hasOwnProperty(name) || DOMProperty.isCustomAttribute(name)) {
      return true;
    }
    if (reactProps.hasOwnProperty(name) && reactProps[name] || warnedProperties.hasOwnProperty(name) && warnedProperties[name]) {
      return true;
    }
    if (EventPluginRegistry.registrationNameModules.hasOwnProperty(name)) {
      return true;
    }
    warnedProperties[name] = true;
    var lowerCasedName = name.toLowerCase();

    // data-* attributes should be lowercase; suggest the lowercase version
    var standardName = DOMProperty.isCustomAttribute(lowerCasedName) ? lowerCasedName : DOMProperty.getPossibleStandardName.hasOwnProperty(lowerCasedName) ? DOMProperty.getPossibleStandardName[lowerCasedName] : null;

    var registrationName = EventPluginRegistry.possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? EventPluginRegistry.possibleRegistrationNames[lowerCasedName] : null;

    if (standardName != null) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown DOM property %s. Did you mean %s?%s', name, standardName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      return true;
    } else if (registrationName != null) {
      process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown event handler property %s. Did you mean `%s`?%s', name, registrationName, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
      return true;
    } else {
      // We were unable to guess which prop the user intended.
      // It is likely that the user was just blindly spreading/forwarding props
      // Components should be careful to only render valid props/attributes.
      // Warning will be invoked in warnUnknownProperties to allow grouping.
      return false;
    }
  };
}

var warnUnknownProperties = function (debugID, element) {
  var unknownProps = [];
  for (var key in element.props) {
    var isValid = validateProperty(element.type, key, debugID);
    if (!isValid) {
      unknownProps.push(key);
    }
  }

  var unknownPropString = unknownProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (unknownProps.length === 1) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown prop %s on <%s> tag. Remove this prop from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  } else if (unknownProps.length > 1) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'Unknown props %s on <%s> tag. Remove these props from the element. ' + 'For details, see https://fb.me/react-unknown-prop%s', unknownPropString, element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;
  }
};

function handleElement(debugID, element) {
  if (element == null || typeof element.type !== 'string') {
    return;
  }
  if (element.type.indexOf('-') >= 0 || element.props.is) {
    return;
  }
  warnUnknownProperties(debugID, element);
}

var ReactDOMUnknownPropertyHook = {
  onBeforeMountComponent: function (debugID, element) {
    handleElement(debugID, element);
  },
  onBeforeUpdateComponent: function (debugID, element) {
    handleElement(debugID, element);
  }
};

module.exports = ReactDOMUnknownPropertyHook;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 534 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var ReactInvalidSetStateWarningHook = __webpack_require__(542);
var ReactHostOperationHistoryHook = __webpack_require__(540);
var ReactComponentTreeHook = __webpack_require__(8);
var ExecutionEnvironment = __webpack_require__(5);

var performanceNow = __webpack_require__(156);
var warning = __webpack_require__(2);

var hooks = [];
var didHookThrowForEvent = {};

function callHook(event, fn, context, arg1, arg2, arg3, arg4, arg5) {
  try {
    fn.call(context, arg1, arg2, arg3, arg4, arg5);
  } catch (e) {
    process.env.NODE_ENV !== 'production' ? warning(didHookThrowForEvent[event], 'Exception thrown by hook while handling %s: %s', event, e + '\n' + e.stack) : void 0;
    didHookThrowForEvent[event] = true;
  }
}

function emitEvent(event, arg1, arg2, arg3, arg4, arg5) {
  for (var i = 0; i < hooks.length; i++) {
    var hook = hooks[i];
    var fn = hook[event];
    if (fn) {
      callHook(event, fn, hook, arg1, arg2, arg3, arg4, arg5);
    }
  }
}

var isProfiling = false;
var flushHistory = [];
var lifeCycleTimerStack = [];
var currentFlushNesting = 0;
var currentFlushMeasurements = [];
var currentFlushStartTime = 0;
var currentTimerDebugID = null;
var currentTimerStartTime = 0;
var currentTimerNestedFlushDuration = 0;
var currentTimerType = null;

var lifeCycleTimerHasWarned = false;

function clearHistory() {
  ReactComponentTreeHook.purgeUnmountedComponents();
  ReactHostOperationHistoryHook.clearHistory();
}

function getTreeSnapshot(registeredIDs) {
  return registeredIDs.reduce(function (tree, id) {
    var ownerID = ReactComponentTreeHook.getOwnerID(id);
    var parentID = ReactComponentTreeHook.getParentID(id);
    tree[id] = {
      displayName: ReactComponentTreeHook.getDisplayName(id),
      text: ReactComponentTreeHook.getText(id),
      updateCount: ReactComponentTreeHook.getUpdateCount(id),
      childIDs: ReactComponentTreeHook.getChildIDs(id),
      // Text nodes don't have owners but this is close enough.
      ownerID: ownerID || parentID && ReactComponentTreeHook.getOwnerID(parentID) || 0,
      parentID: parentID
    };
    return tree;
  }, {});
}

function resetMeasurements() {
  var previousStartTime = currentFlushStartTime;
  var previousMeasurements = currentFlushMeasurements;
  var previousOperations = ReactHostOperationHistoryHook.getHistory();

  if (currentFlushNesting === 0) {
    currentFlushStartTime = 0;
    currentFlushMeasurements = [];
    clearHistory();
    return;
  }

  if (previousMeasurements.length || previousOperations.length) {
    var registeredIDs = ReactComponentTreeHook.getRegisteredIDs();
    flushHistory.push({
      duration: performanceNow() - previousStartTime,
      measurements: previousMeasurements || [],
      operations: previousOperations || [],
      treeSnapshot: getTreeSnapshot(registeredIDs)
    });
  }

  clearHistory();
  currentFlushStartTime = performanceNow();
  currentFlushMeasurements = [];
}

function checkDebugID(debugID) {
  var allowRoot = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  if (allowRoot && debugID === 0) {
    return;
  }
  if (!debugID) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'ReactDebugTool: debugID may not be empty.') : void 0;
  }
}

function beginLifeCycleTimer(debugID, timerType) {
  if (currentFlushNesting === 0) {
    return;
  }
  if (currentTimerType && !lifeCycleTimerHasWarned) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'Did not expect %s timer to start while %s timer is still in ' + 'progress for %s instance.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
    lifeCycleTimerHasWarned = true;
  }
  currentTimerStartTime = performanceNow();
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = debugID;
  currentTimerType = timerType;
}

function endLifeCycleTimer(debugID, timerType) {
  if (currentFlushNesting === 0) {
    return;
  }
  if (currentTimerType !== timerType && !lifeCycleTimerHasWarned) {
    process.env.NODE_ENV !== 'production' ? warning(false, 'There is an internal error in the React performance measurement code. ' + 'We did not expect %s timer to stop while %s timer is still in ' + 'progress for %s instance. Please report this as a bug in React.', timerType, currentTimerType || 'no', debugID === currentTimerDebugID ? 'the same' : 'another') : void 0;
    lifeCycleTimerHasWarned = true;
  }
  if (isProfiling) {
    currentFlushMeasurements.push({
      timerType: timerType,
      instanceID: debugID,
      duration: performanceNow() - currentTimerStartTime - currentTimerNestedFlushDuration
    });
  }
  currentTimerStartTime = 0;
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = null;
  currentTimerType = null;
}

function pauseCurrentLifeCycleTimer() {
  var currentTimer = {
    startTime: currentTimerStartTime,
    nestedFlushStartTime: performanceNow(),
    debugID: currentTimerDebugID,
    timerType: currentTimerType
  };
  lifeCycleTimerStack.push(currentTimer);
  currentTimerStartTime = 0;
  currentTimerNestedFlushDuration = 0;
  currentTimerDebugID = null;
  currentTimerType = null;
}

function resumeCurrentLifeCycleTimer() {
  var _lifeCycleTimerStack$ = lifeCycleTimerStack.pop(),
      startTime = _lifeCycleTimerStack$.startTime,
      nestedFlushStartTime = _lifeCycleTimerStack$.nestedFlushStartTime,
      debugID = _lifeCycleTimerStack$.debugID,
      timerType = _lifeCycleTimerStack$.timerType;

  var nestedFlushDuration = performanceNow() - nestedFlushStartTime;
  currentTimerStartTime = startTime;
  currentTimerNestedFlushDuration += nestedFlushDuration;
  currentTimerDebugID = debugID;
  currentTimerType = timerType;
}

var lastMarkTimeStamp = 0;
var canUsePerformanceMeasure = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';

function shouldMark(debugID) {
  if (!isProfiling || !canUsePerformanceMeasure) {
    return false;
  }
  var element = ReactComponentTreeHook.getElement(debugID);
  if (element == null || typeof element !== 'object') {
    return false;
  }
  var isHostElement = typeof element.type === 'string';
  if (isHostElement) {
    return false;
  }
  return true;
}

function markBegin(debugID, markType) {
  if (!shouldMark(debugID)) {
    return;
  }

  var markName = debugID + '::' + markType;
  lastMarkTimeStamp = performanceNow();
  performance.mark(markName);
}

function markEnd(debugID, markType) {
  if (!shouldMark(debugID)) {
    return;
  }

  var markName = debugID + '::' + markType;
  var displayName = ReactComponentTreeHook.getDisplayName(debugID) || 'Unknown';

  // Chrome has an issue of dropping markers recorded too fast:
  // https://bugs.chromium.org/p/chromium/issues/detail?id=640652
  // To work around this, we will not report very small measurements.
  // I determined the magic number by tweaking it back and forth.
  // 0.05ms was enough to prevent the issue, but I set it to 0.1ms to be safe.
  // When the bug is fixed, we can `measure()` unconditionally if we want to.
  var timeStamp = performanceNow();
  if (timeStamp - lastMarkTimeStamp > 0.1) {
    var measurementName = displayName + ' [' + markType + ']';
    performance.measure(measurementName, markName);
  }

  performance.clearMarks(markName);
  if (measurementName) {
    performance.clearMeasures(measurementName);
  }
}

var ReactDebugTool = {
  addHook: function (hook) {
    hooks.push(hook);
  },
  removeHook: function (hook) {
    for (var i = 0; i < hooks.length; i++) {
      if (hooks[i] === hook) {
        hooks.splice(i, 1);
        i--;
      }
    }
  },
  isProfiling: function () {
    return isProfiling;
  },
  beginProfiling: function () {
    if (isProfiling) {
      return;
    }

    isProfiling = true;
    flushHistory.length = 0;
    resetMeasurements();
    ReactDebugTool.addHook(ReactHostOperationHistoryHook);
  },
  endProfiling: function () {
    if (!isProfiling) {
      return;
    }

    isProfiling = false;
    resetMeasurements();
    ReactDebugTool.removeHook(ReactHostOperationHistoryHook);
  },
  getFlushHistory: function () {
    return flushHistory;
  },
  onBeginFlush: function () {
    currentFlushNesting++;
    resetMeasurements();
    pauseCurrentLifeCycleTimer();
    emitEvent('onBeginFlush');
  },
  onEndFlush: function () {
    resetMeasurements();
    currentFlushNesting--;
    resumeCurrentLifeCycleTimer();
    emitEvent('onEndFlush');
  },
  onBeginLifeCycleTimer: function (debugID, timerType) {
    checkDebugID(debugID);
    emitEvent('onBeginLifeCycleTimer', debugID, timerType);
    markBegin(debugID, timerType);
    beginLifeCycleTimer(debugID, timerType);
  },
  onEndLifeCycleTimer: function (debugID, timerType) {
    checkDebugID(debugID);
    endLifeCycleTimer(debugID, timerType);
    markEnd(debugID, timerType);
    emitEvent('onEndLifeCycleTimer', debugID, timerType);
  },
  onBeginProcessingChildContext: function () {
    emitEvent('onBeginProcessingChildContext');
  },
  onEndProcessingChildContext: function () {
    emitEvent('onEndProcessingChildContext');
  },
  onHostOperation: function (operation) {
    checkDebugID(operation.instanceID);
    emitEvent('onHostOperation', operation);
  },
  onSetState: function () {
    emitEvent('onSetState');
  },
  onSetChildren: function (debugID, childDebugIDs) {
    checkDebugID(debugID);
    childDebugIDs.forEach(checkDebugID);
    emitEvent('onSetChildren', debugID, childDebugIDs);
  },
  onBeforeMountComponent: function (debugID, element, parentDebugID) {
    checkDebugID(debugID);
    checkDebugID(parentDebugID, true);
    emitEvent('onBeforeMountComponent', debugID, element, parentDebugID);
    markBegin(debugID, 'mount');
  },
  onMountComponent: function (debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'mount');
    emitEvent('onMountComponent', debugID);
  },
  onBeforeUpdateComponent: function (debugID, element) {
    checkDebugID(debugID);
    emitEvent('onBeforeUpdateComponent', debugID, element);
    markBegin(debugID, 'update');
  },
  onUpdateComponent: function (debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'update');
    emitEvent('onUpdateComponent', debugID);
  },
  onBeforeUnmountComponent: function (debugID) {
    checkDebugID(debugID);
    emitEvent('onBeforeUnmountComponent', debugID);
    markBegin(debugID, 'unmount');
  },
  onUnmountComponent: function (debugID) {
    checkDebugID(debugID);
    markEnd(debugID, 'unmount');
    emitEvent('onUnmountComponent', debugID);
  },
  onTestEvent: function () {
    emitEvent('onTestEvent');
  }
};

// TODO remove these when RN/www gets updated
ReactDebugTool.addDevtool = ReactDebugTool.addHook;
ReactDebugTool.removeDevtool = ReactDebugTool.removeHook;

ReactDebugTool.addHook(ReactInvalidSetStateWarningHook);
ReactDebugTool.addHook(ReactComponentTreeHook);
var url = ExecutionEnvironment.canUseDOM && window.location.href || '';
if (/[?&]react_perf\b/.test(url)) {
  ReactDebugTool.beginProfiling();
}

module.exports = ReactDebugTool;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 535 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(4);

var ReactUpdates = __webpack_require__(19);
var Transaction = __webpack_require__(83);

var emptyFunction = __webpack_require__(12);

var RESET_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: function () {
    ReactDefaultBatchingStrategy.isBatchingUpdates = false;
  }
};

var FLUSH_BATCHED_UPDATES = {
  initialize: emptyFunction,
  close: ReactUpdates.flushBatchedUpdates.bind(ReactUpdates)
};

var TRANSACTION_WRAPPERS = [FLUSH_BATCHED_UPDATES, RESET_BATCHED_UPDATES];

function ReactDefaultBatchingStrategyTransaction() {
  this.reinitializeTransaction();
}

_assign(ReactDefaultBatchingStrategyTransaction.prototype, Transaction, {
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  }
});

var transaction = new ReactDefaultBatchingStrategyTransaction();

var ReactDefaultBatchingStrategy = {
  isBatchingUpdates: false,

  /**
   * Call the provided function in a context within which calls to `setState`
   * and friends are batched such that components aren't updated unnecessarily.
   */
  batchedUpdates: function (callback, a, b, c, d, e) {
    var alreadyBatchingUpdates = ReactDefaultBatchingStrategy.isBatchingUpdates;

    ReactDefaultBatchingStrategy.isBatchingUpdates = true;

    // The code is written this way to avoid extra allocations
    if (alreadyBatchingUpdates) {
      return callback(a, b, c, d, e);
    } else {
      return transaction.perform(callback, null, a, b, c, d, e);
    }
  }
};

module.exports = ReactDefaultBatchingStrategy;

/***/ }),
/* 536 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ARIADOMPropertyConfig = __webpack_require__(506);
var BeforeInputEventPlugin = __webpack_require__(508);
var ChangeEventPlugin = __webpack_require__(510);
var DefaultEventPluginOrder = __webpack_require__(512);
var EnterLeaveEventPlugin = __webpack_require__(513);
var HTMLDOMPropertyConfig = __webpack_require__(515);
var ReactComponentBrowserEnvironment = __webpack_require__(517);
var ReactDOMComponent = __webpack_require__(520);
var ReactDOMComponentTree = __webpack_require__(11);
var ReactDOMEmptyComponent = __webpack_require__(522);
var ReactDOMTreeTraversal = __webpack_require__(532);
var ReactDOMTextComponent = __webpack_require__(530);
var ReactDefaultBatchingStrategy = __webpack_require__(535);
var ReactEventListener = __webpack_require__(539);
var ReactInjection = __webpack_require__(541);
var ReactReconcileTransaction = __webpack_require__(547);
var SVGDOMPropertyConfig = __webpack_require__(552);
var SelectEventPlugin = __webpack_require__(553);
var SimpleEventPlugin = __webpack_require__(554);

var alreadyInjected = false;

function inject() {
  if (alreadyInjected) {
    // TODO: This is currently true because these injections are shared between
    // the client and the server package. They should be built independently
    // and not share any injection state. Then this problem will be solved.
    return;
  }
  alreadyInjected = true;

  ReactInjection.EventEmitter.injectReactEventListener(ReactEventListener);

  /**
   * Inject modules for resolving DOM hierarchy and plugin ordering.
   */
  ReactInjection.EventPluginHub.injectEventPluginOrder(DefaultEventPluginOrder);
  ReactInjection.EventPluginUtils.injectComponentTree(ReactDOMComponentTree);
  ReactInjection.EventPluginUtils.injectTreeTraversal(ReactDOMTreeTraversal);

  /**
   * Some important event plugins included by default (without having to require
   * them).
   */
  ReactInjection.EventPluginHub.injectEventPluginsByName({
    SimpleEventPlugin: SimpleEventPlugin,
    EnterLeaveEventPlugin: EnterLeaveEventPlugin,
    ChangeEventPlugin: ChangeEventPlugin,
    SelectEventPlugin: SelectEventPlugin,
    BeforeInputEventPlugin: BeforeInputEventPlugin
  });

  ReactInjection.HostComponent.injectGenericComponentClass(ReactDOMComponent);

  ReactInjection.HostComponent.injectTextComponentClass(ReactDOMTextComponent);

  ReactInjection.DOMProperty.injectDOMPropertyConfig(ARIADOMPropertyConfig);
  ReactInjection.DOMProperty.injectDOMPropertyConfig(HTMLDOMPropertyConfig);
  ReactInjection.DOMProperty.injectDOMPropertyConfig(SVGDOMPropertyConfig);

  ReactInjection.EmptyComponent.injectEmptyComponentFactory(function (instantiate) {
    return new ReactDOMEmptyComponent(instantiate);
  });

  ReactInjection.Updates.injectReconcileTransaction(ReactReconcileTransaction);
  ReactInjection.Updates.injectBatchingStrategy(ReactDefaultBatchingStrategy);

  ReactInjection.Component.injectEnvironment(ReactComponentBrowserEnvironment);
}

module.exports = {
  inject: inject
};

/***/ }),
/* 537 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



// The Symbol used to tag the ReactElement type. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.

var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol['for'] && Symbol['for']('react.element') || 0xeac7;

module.exports = REACT_ELEMENT_TYPE;

/***/ }),
/* 538 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var EventPluginHub = __webpack_require__(53);

function runEventQueueInBatch(events) {
  EventPluginHub.enqueueEvents(events);
  EventPluginHub.processEventQueue(false);
}

var ReactEventEmitterMixin = {
  /**
   * Streams a fired top-level event to `EventPluginHub` where plugins have the
   * opportunity to create `ReactEvent`s to be dispatched.
   */
  handleTopLevel: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var events = EventPluginHub.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
    runEventQueueInBatch(events);
  }
};

module.exports = ReactEventEmitterMixin;

/***/ }),
/* 539 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(4);

var EventListener = __webpack_require__(59);
var ExecutionEnvironment = __webpack_require__(5);
var PooledClass = __webpack_require__(30);
var ReactDOMComponentTree = __webpack_require__(11);
var ReactUpdates = __webpack_require__(19);

var getEventTarget = __webpack_require__(136);
var getUnboundedScrollPosition = __webpack_require__(153);

/**
 * Find the deepest React component completely containing the root of the
 * passed-in instance (for use when entire React trees are nested within each
 * other). If React trees are not nested, returns null.
 */
function findParent(inst) {
  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
  // traversal, but caching is difficult to do correctly without using a
  // mutation observer to listen for all DOM changes.
  while (inst._hostParent) {
    inst = inst._hostParent;
  }
  var rootNode = ReactDOMComponentTree.getNodeFromInstance(inst);
  var container = rootNode.parentNode;
  return ReactDOMComponentTree.getClosestInstanceFromNode(container);
}

// Used to store ancestor hierarchy in top level callback
function TopLevelCallbackBookKeeping(topLevelType, nativeEvent) {
  this.topLevelType = topLevelType;
  this.nativeEvent = nativeEvent;
  this.ancestors = [];
}
_assign(TopLevelCallbackBookKeeping.prototype, {
  destructor: function () {
    this.topLevelType = null;
    this.nativeEvent = null;
    this.ancestors.length = 0;
  }
});
PooledClass.addPoolingTo(TopLevelCallbackBookKeeping, PooledClass.twoArgumentPooler);

function handleTopLevelImpl(bookKeeping) {
  var nativeEventTarget = getEventTarget(bookKeeping.nativeEvent);
  var targetInst = ReactDOMComponentTree.getClosestInstanceFromNode(nativeEventTarget);

  // Loop through the hierarchy, in case there's any nested components.
  // It's important that we build the array of ancestors before calling any
  // event handlers, because event handlers can modify the DOM, leading to
  // inconsistencies with ReactMount's node cache. See #1105.
  var ancestor = targetInst;
  do {
    bookKeeping.ancestors.push(ancestor);
    ancestor = ancestor && findParent(ancestor);
  } while (ancestor);

  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
    targetInst = bookKeeping.ancestors[i];
    ReactEventListener._handleTopLevel(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
  }
}

function scrollValueMonitor(cb) {
  var scrollPosition = getUnboundedScrollPosition(window);
  cb(scrollPosition);
}

var ReactEventListener = {
  _enabled: true,
  _handleTopLevel: null,

  WINDOW_HANDLE: ExecutionEnvironment.canUseDOM ? window : null,

  setHandleTopLevel: function (handleTopLevel) {
    ReactEventListener._handleTopLevel = handleTopLevel;
  },

  setEnabled: function (enabled) {
    ReactEventListener._enabled = !!enabled;
  },

  isEnabled: function () {
    return ReactEventListener._enabled;
  },

  /**
   * Traps top-level events by using event bubbling.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} element Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapBubbledEvent: function (topLevelType, handlerBaseName, element) {
    if (!element) {
      return null;
    }
    return EventListener.listen(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
  },

  /**
   * Traps a top-level event by using event capturing.
   *
   * @param {string} topLevelType Record from `EventConstants`.
   * @param {string} handlerBaseName Event name (e.g. "click").
   * @param {object} element Element on which to attach listener.
   * @return {?object} An object with a remove function which will forcefully
   *                  remove the listener.
   * @internal
   */
  trapCapturedEvent: function (topLevelType, handlerBaseName, element) {
    if (!element) {
      return null;
    }
    return EventListener.capture(element, handlerBaseName, ReactEventListener.dispatchEvent.bind(null, topLevelType));
  },

  monitorScrollValue: function (refresh) {
    var callback = scrollValueMonitor.bind(null, refresh);
    EventListener.listen(window, 'scroll', callback);
  },

  dispatchEvent: function (topLevelType, nativeEvent) {
    if (!ReactEventListener._enabled) {
      return;
    }

    var bookKeeping = TopLevelCallbackBookKeeping.getPooled(topLevelType, nativeEvent);
    try {
      // Event queue being processed in the same cycle allows
      // `preventDefault`.
      ReactUpdates.batchedUpdates(handleTopLevelImpl, bookKeeping);
    } finally {
      TopLevelCallbackBookKeeping.release(bookKeeping);
    }
  }
};

module.exports = ReactEventListener;

/***/ }),
/* 540 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var history = [];

var ReactHostOperationHistoryHook = {
  onHostOperation: function (operation) {
    history.push(operation);
  },
  clearHistory: function () {
    if (ReactHostOperationHistoryHook._preventClearing) {
      // Should only be used for tests.
      return;
    }

    history = [];
  },
  getHistory: function () {
    return history;
  }
};

module.exports = ReactHostOperationHistoryHook;

/***/ }),
/* 541 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var DOMProperty = __webpack_require__(25);
var EventPluginHub = __webpack_require__(53);
var EventPluginUtils = __webpack_require__(127);
var ReactComponentEnvironment = __webpack_require__(130);
var ReactEmptyComponent = __webpack_require__(228);
var ReactBrowserEventEmitter = __webpack_require__(81);
var ReactHostComponent = __webpack_require__(230);
var ReactUpdates = __webpack_require__(19);

var ReactInjection = {
  Component: ReactComponentEnvironment.injection,
  DOMProperty: DOMProperty.injection,
  EmptyComponent: ReactEmptyComponent.injection,
  EventPluginHub: EventPluginHub.injection,
  EventPluginUtils: EventPluginUtils.injection,
  EventEmitter: ReactBrowserEventEmitter.injection,
  HostComponent: ReactHostComponent.injection,
  Updates: ReactUpdates.injection
};

module.exports = ReactInjection;

/***/ }),
/* 542 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2016-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var warning = __webpack_require__(2);

if (process.env.NODE_ENV !== 'production') {
  var processingChildContext = false;

  var warnInvalidSetState = function () {
    process.env.NODE_ENV !== 'production' ? warning(!processingChildContext, 'setState(...): Cannot call setState() inside getChildContext()') : void 0;
  };
}

var ReactInvalidSetStateWarningHook = {
  onBeginProcessingChildContext: function () {
    processingChildContext = true;
  },
  onEndProcessingChildContext: function () {
    processingChildContext = false;
  },
  onSetState: function () {
    warnInvalidSetState();
  }
};

module.exports = ReactInvalidSetStateWarningHook;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 543 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var adler32 = __webpack_require__(565);

var TAG_END = /\/?>/;
var COMMENT_START = /^<\!\-\-/;

var ReactMarkupChecksum = {
  CHECKSUM_ATTR_NAME: 'data-react-checksum',

  /**
   * @param {string} markup Markup string
   * @return {string} Markup string with checksum attribute attached
   */
  addChecksumToMarkup: function (markup) {
    var checksum = adler32(markup);

    // Add checksum (handle both parent tags, comments and self-closing tags)
    if (COMMENT_START.test(markup)) {
      return markup;
    } else {
      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '="' + checksum + '"$&');
    }
  },

  /**
   * @param {string} markup to use
   * @param {DOMElement} element root React element
   * @returns {boolean} whether or not the markup is the same
   */
  canReuseMarkup: function (markup, element) {
    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);
    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);
    var markupChecksum = adler32(markup);
    return markupChecksum === existingChecksum;
  }
};

module.exports = ReactMarkupChecksum;

/***/ }),
/* 544 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(7);

var ReactComponentEnvironment = __webpack_require__(130);
var ReactInstanceMap = __webpack_require__(55);
var ReactInstrumentation = __webpack_require__(16);

var ReactCurrentOwner = __webpack_require__(13);
var ReactReconciler = __webpack_require__(41);
var ReactChildReconciler = __webpack_require__(516);

var emptyFunction = __webpack_require__(12);
var flattenChildren = __webpack_require__(569);
var invariant = __webpack_require__(1);

/**
 * Make an update for markup to be rendered and inserted at a supplied index.
 *
 * @param {string} markup Markup that renders into an element.
 * @param {number} toIndex Destination index.
 * @private
 */
function makeInsertMarkup(markup, afterNode, toIndex) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'INSERT_MARKUP',
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: toIndex,
    afterNode: afterNode
  };
}

/**
 * Make an update for moving an existing element to another index.
 *
 * @param {number} fromIndex Source index of the existing element.
 * @param {number} toIndex Destination index of the element.
 * @private
 */
function makeMove(child, afterNode, toIndex) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'MOVE_EXISTING',
    content: null,
    fromIndex: child._mountIndex,
    fromNode: ReactReconciler.getHostNode(child),
    toIndex: toIndex,
    afterNode: afterNode
  };
}

/**
 * Make an update for removing an element at an index.
 *
 * @param {number} fromIndex Index of the element to remove.
 * @private
 */
function makeRemove(child, node) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'REMOVE_NODE',
    content: null,
    fromIndex: child._mountIndex,
    fromNode: node,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Make an update for setting the markup of a node.
 *
 * @param {string} markup Markup that renders into an element.
 * @private
 */
function makeSetMarkup(markup) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'SET_MARKUP',
    content: markup,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Make an update for setting the text content.
 *
 * @param {string} textContent Text content to set.
 * @private
 */
function makeTextContent(textContent) {
  // NOTE: Null values reduce hidden classes.
  return {
    type: 'TEXT_CONTENT',
    content: textContent,
    fromIndex: null,
    fromNode: null,
    toIndex: null,
    afterNode: null
  };
}

/**
 * Push an update, if any, onto the queue. Creates a new queue if none is
 * passed and always returns the queue. Mutative.
 */
function enqueue(queue, update) {
  if (update) {
    queue = queue || [];
    queue.push(update);
  }
  return queue;
}

/**
 * Processes any enqueued updates.
 *
 * @private
 */
function processQueue(inst, updateQueue) {
  ReactComponentEnvironment.processChildrenUpdates(inst, updateQueue);
}

var setChildrenForInstrumentation = emptyFunction;
if (process.env.NODE_ENV !== 'production') {
  var getDebugID = function (inst) {
    if (!inst._debugID) {
      // Check for ART-like instances. TODO: This is silly/gross.
      var internal;
      if (internal = ReactInstanceMap.get(inst)) {
        inst = internal;
      }
    }
    return inst._debugID;
  };
  setChildrenForInstrumentation = function (children) {
    var debugID = getDebugID(this);
    // TODO: React Native empty components are also multichild.
    // This means they still get into this method but don't have _debugID.
    if (debugID !== 0) {
      ReactInstrumentation.debugTool.onSetChildren(debugID, children ? Object.keys(children).map(function (key) {
        return children[key]._debugID;
      }) : []);
    }
  };
}

/**
 * ReactMultiChild are capable of reconciling multiple children.
 *
 * @class ReactMultiChild
 * @internal
 */
var ReactMultiChild = {
  /**
   * Provides common functionality for components that must reconcile multiple
   * children. This is used by `ReactDOMComponent` to mount, update, and
   * unmount child components.
   *
   * @lends {ReactMultiChild.prototype}
   */
  Mixin: {
    _reconcilerInstantiateChildren: function (nestedChildren, transaction, context) {
      if (process.env.NODE_ENV !== 'production') {
        var selfDebugID = getDebugID(this);
        if (this._currentElement) {
          try {
            ReactCurrentOwner.current = this._currentElement._owner;
            return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context, selfDebugID);
          } finally {
            ReactCurrentOwner.current = null;
          }
        }
      }
      return ReactChildReconciler.instantiateChildren(nestedChildren, transaction, context);
    },

    _reconcilerUpdateChildren: function (prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context) {
      var nextChildren;
      var selfDebugID = 0;
      if (process.env.NODE_ENV !== 'production') {
        selfDebugID = getDebugID(this);
        if (this._currentElement) {
          try {
            ReactCurrentOwner.current = this._currentElement._owner;
            nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
          } finally {
            ReactCurrentOwner.current = null;
          }
          ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
          return nextChildren;
        }
      }
      nextChildren = flattenChildren(nextNestedChildrenElements, selfDebugID);
      ReactChildReconciler.updateChildren(prevChildren, nextChildren, mountImages, removedNodes, transaction, this, this._hostContainerInfo, context, selfDebugID);
      return nextChildren;
    },

    /**
     * Generates a "mount image" for each of the supplied children. In the case
     * of `ReactDOMComponent`, a mount image is a string of markup.
     *
     * @param {?object} nestedChildren Nested child maps.
     * @return {array} An array of mounted representations.
     * @internal
     */
    mountChildren: function (nestedChildren, transaction, context) {
      var children = this._reconcilerInstantiateChildren(nestedChildren, transaction, context);
      this._renderedChildren = children;

      var mountImages = [];
      var index = 0;
      for (var name in children) {
        if (children.hasOwnProperty(name)) {
          var child = children[name];
          var selfDebugID = 0;
          if (process.env.NODE_ENV !== 'production') {
            selfDebugID = getDebugID(this);
          }
          var mountImage = ReactReconciler.mountComponent(child, transaction, this, this._hostContainerInfo, context, selfDebugID);
          child._mountIndex = index++;
          mountImages.push(mountImage);
        }
      }

      if (process.env.NODE_ENV !== 'production') {
        setChildrenForInstrumentation.call(this, children);
      }

      return mountImages;
    },

    /**
     * Replaces any rendered children with a text content string.
     *
     * @param {string} nextContent String of content.
     * @internal
     */
    updateTextContent: function (nextContent) {
      var prevChildren = this._renderedChildren;
      // Remove any rendered children.
      ReactChildReconciler.unmountChildren(prevChildren, false);
      for (var name in prevChildren) {
        if (prevChildren.hasOwnProperty(name)) {
           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
        }
      }
      // Set new text content.
      var updates = [makeTextContent(nextContent)];
      processQueue(this, updates);
    },

    /**
     * Replaces any rendered children with a markup string.
     *
     * @param {string} nextMarkup String of markup.
     * @internal
     */
    updateMarkup: function (nextMarkup) {
      var prevChildren = this._renderedChildren;
      // Remove any rendered children.
      ReactChildReconciler.unmountChildren(prevChildren, false);
      for (var name in prevChildren) {
        if (prevChildren.hasOwnProperty(name)) {
           true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'updateTextContent called on non-empty component.') : _prodInvariant('118') : void 0;
        }
      }
      var updates = [makeSetMarkup(nextMarkup)];
      processQueue(this, updates);
    },

    /**
     * Updates the rendered children with new children.
     *
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @internal
     */
    updateChildren: function (nextNestedChildrenElements, transaction, context) {
      // Hook used by React ART
      this._updateChildren(nextNestedChildrenElements, transaction, context);
    },

    /**
     * @param {?object} nextNestedChildrenElements Nested child element maps.
     * @param {ReactReconcileTransaction} transaction
     * @final
     * @protected
     */
    _updateChildren: function (nextNestedChildrenElements, transaction, context) {
      var prevChildren = this._renderedChildren;
      var removedNodes = {};
      var mountImages = [];
      var nextChildren = this._reconcilerUpdateChildren(prevChildren, nextNestedChildrenElements, mountImages, removedNodes, transaction, context);
      if (!nextChildren && !prevChildren) {
        return;
      }
      var updates = null;
      var name;
      // `nextIndex` will increment for each child in `nextChildren`, but
      // `lastIndex` will be the last index visited in `prevChildren`.
      var nextIndex = 0;
      var lastIndex = 0;
      // `nextMountIndex` will increment for each newly mounted child.
      var nextMountIndex = 0;
      var lastPlacedNode = null;
      for (name in nextChildren) {
        if (!nextChildren.hasOwnProperty(name)) {
          continue;
        }
        var prevChild = prevChildren && prevChildren[name];
        var nextChild = nextChildren[name];
        if (prevChild === nextChild) {
          updates = enqueue(updates, this.moveChild(prevChild, lastPlacedNode, nextIndex, lastIndex));
          lastIndex = Math.max(prevChild._mountIndex, lastIndex);
          prevChild._mountIndex = nextIndex;
        } else {
          if (prevChild) {
            // Update `lastIndex` before `_mountIndex` gets unset by unmounting.
            lastIndex = Math.max(prevChild._mountIndex, lastIndex);
            // The `removedNodes` loop below will actually remove the child.
          }
          // The child must be instantiated before it's mounted.
          updates = enqueue(updates, this._mountChildAtIndex(nextChild, mountImages[nextMountIndex], lastPlacedNode, nextIndex, transaction, context));
          nextMountIndex++;
        }
        nextIndex++;
        lastPlacedNode = ReactReconciler.getHostNode(nextChild);
      }
      // Remove children that are no longer present.
      for (name in removedNodes) {
        if (removedNodes.hasOwnProperty(name)) {
          updates = enqueue(updates, this._unmountChild(prevChildren[name], removedNodes[name]));
        }
      }
      if (updates) {
        processQueue(this, updates);
      }
      this._renderedChildren = nextChildren;

      if (process.env.NODE_ENV !== 'production') {
        setChildrenForInstrumentation.call(this, nextChildren);
      }
    },

    /**
     * Unmounts all rendered children. This should be used to clean up children
     * when this component is unmounted. It does not actually perform any
     * backend operations.
     *
     * @internal
     */
    unmountChildren: function (safely) {
      var renderedChildren = this._renderedChildren;
      ReactChildReconciler.unmountChildren(renderedChildren, safely);
      this._renderedChildren = null;
    },

    /**
     * Moves a child component to the supplied index.
     *
     * @param {ReactComponent} child Component to move.
     * @param {number} toIndex Destination index of the element.
     * @param {number} lastIndex Last index visited of the siblings of `child`.
     * @protected
     */
    moveChild: function (child, afterNode, toIndex, lastIndex) {
      // If the index of `child` is less than `lastIndex`, then it needs to
      // be moved. Otherwise, we do not need to move it because a child will be
      // inserted or moved before `child`.
      if (child._mountIndex < lastIndex) {
        return makeMove(child, afterNode, toIndex);
      }
    },

    /**
     * Creates a child component.
     *
     * @param {ReactComponent} child Component to create.
     * @param {string} mountImage Markup to insert.
     * @protected
     */
    createChild: function (child, afterNode, mountImage) {
      return makeInsertMarkup(mountImage, afterNode, child._mountIndex);
    },

    /**
     * Removes a child component.
     *
     * @param {ReactComponent} child Child to remove.
     * @protected
     */
    removeChild: function (child, node) {
      return makeRemove(child, node);
    },

    /**
     * Mounts a child with the supplied name.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to mount.
     * @param {string} name Name of the child.
     * @param {number} index Index at which to insert the child.
     * @param {ReactReconcileTransaction} transaction
     * @private
     */
    _mountChildAtIndex: function (child, mountImage, afterNode, index, transaction, context) {
      child._mountIndex = index;
      return this.createChild(child, afterNode, mountImage);
    },

    /**
     * Unmounts a rendered child.
     *
     * NOTE: This is part of `updateChildren` and is here for readability.
     *
     * @param {ReactComponent} child Component to unmount.
     * @private
     */
    _unmountChild: function (child, node) {
      var update = this.removeChild(child, node);
      child._mountIndex = null;
      return update;
    }
  }
};

module.exports = ReactMultiChild;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 545 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(7);

var invariant = __webpack_require__(1);

/**
 * @param {?object} object
 * @return {boolean} True if `object` is a valid owner.
 * @final
 */
function isValidOwner(object) {
  return !!(object && typeof object.attachRef === 'function' && typeof object.detachRef === 'function');
}

/**
 * ReactOwners are capable of storing references to owned components.
 *
 * All components are capable of //being// referenced by owner components, but
 * only ReactOwner components are capable of //referencing// owned components.
 * The named reference is known as a "ref".
 *
 * Refs are available when mounted and updated during reconciliation.
 *
 *   var MyComponent = React.createClass({
 *     render: function() {
 *       return (
 *         <div onClick={this.handleClick}>
 *           <CustomComponent ref="custom" />
 *         </div>
 *       );
 *     },
 *     handleClick: function() {
 *       this.refs.custom.handleClick();
 *     },
 *     componentDidMount: function() {
 *       this.refs.custom.initialize();
 *     }
 *   });
 *
 * Refs should rarely be used. When refs are used, they should only be done to
 * control data that is not handled by React's data flow.
 *
 * @class ReactOwner
 */
var ReactOwner = {
  /**
   * Adds a component by ref to an owner component.
   *
   * @param {ReactComponent} component Component to reference.
   * @param {string} ref Name by which to refer to the component.
   * @param {ReactOwner} owner Component on which to record the ref.
   * @final
   * @internal
   */
  addComponentAsRefTo: function (component, ref, owner) {
    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('119') : void 0;
    owner.attachRef(ref, component);
  },

  /**
   * Removes a component by ref from an owner component.
   *
   * @param {ReactComponent} component Component to dereference.
   * @param {string} ref Name of the ref to remove.
   * @param {ReactOwner} owner Component on which the ref is recorded.
   * @final
   * @internal
   */
  removeComponentAsRefFrom: function (component, ref, owner) {
    !isValidOwner(owner) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'removeComponentAsRefFrom(...): Only a ReactOwner can have refs. You might be removing a ref to a component that was not created inside a component\'s `render` method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).') : _prodInvariant('120') : void 0;
    var ownerPublicInstance = owner.getPublicInstance();
    // Check that `component`'s owner is still alive and that `component` is still the current ref
    // because we do not want to detach the ref if another component stole it.
    if (ownerPublicInstance && ownerPublicInstance.refs[ref] === component.getPublicInstance()) {
      owner.detachRef(ref);
    }
  }
};

module.exports = ReactOwner;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 546 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var ReactPropTypeLocationNames = {};

if (process.env.NODE_ENV !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
}

module.exports = ReactPropTypeLocationNames;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 547 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(4);

var CallbackQueue = __webpack_require__(224);
var PooledClass = __webpack_require__(30);
var ReactBrowserEventEmitter = __webpack_require__(81);
var ReactInputSelection = __webpack_require__(231);
var ReactInstrumentation = __webpack_require__(16);
var Transaction = __webpack_require__(83);
var ReactUpdateQueue = __webpack_require__(132);

/**
 * Ensures that, when possible, the selection range (currently selected text
 * input) is not disturbed by performing the transaction.
 */
var SELECTION_RESTORATION = {
  /**
   * @return {Selection} Selection information.
   */
  initialize: ReactInputSelection.getSelectionInformation,
  /**
   * @param {Selection} sel Selection information returned from `initialize`.
   */
  close: ReactInputSelection.restoreSelection
};

/**
 * Suppresses events (blur/focus) that could be inadvertently dispatched due to
 * high level DOM manipulations (like temporarily removing a text input from the
 * DOM).
 */
var EVENT_SUPPRESSION = {
  /**
   * @return {boolean} The enabled status of `ReactBrowserEventEmitter` before
   * the reconciliation.
   */
  initialize: function () {
    var currentlyEnabled = ReactBrowserEventEmitter.isEnabled();
    ReactBrowserEventEmitter.setEnabled(false);
    return currentlyEnabled;
  },

  /**
   * @param {boolean} previouslyEnabled Enabled status of
   *   `ReactBrowserEventEmitter` before the reconciliation occurred. `close`
   *   restores the previous value.
   */
  close: function (previouslyEnabled) {
    ReactBrowserEventEmitter.setEnabled(previouslyEnabled);
  }
};

/**
 * Provides a queue for collecting `componentDidMount` and
 * `componentDidUpdate` callbacks during the transaction.
 */
var ON_DOM_READY_QUEUEING = {
  /**
   * Initializes the internal `onDOMReady` queue.
   */
  initialize: function () {
    this.reactMountReady.reset();
  },

  /**
   * After DOM is flushed, invoke all registered `onDOMReady` callbacks.
   */
  close: function () {
    this.reactMountReady.notifyAll();
  }
};

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [SELECTION_RESTORATION, EVENT_SUPPRESSION, ON_DOM_READY_QUEUEING];

if (process.env.NODE_ENV !== 'production') {
  TRANSACTION_WRAPPERS.push({
    initialize: ReactInstrumentation.debugTool.onBeginFlush,
    close: ReactInstrumentation.debugTool.onEndFlush
  });
}

/**
 * Currently:
 * - The order that these are listed in the transaction is critical:
 * - Suppresses events.
 * - Restores selection range.
 *
 * Future:
 * - Restore document/overflow scroll positions that were unintentionally
 *   modified via DOM insertions above the top viewport boundary.
 * - Implement/integrate with customized constraint based layout system and keep
 *   track of which dimensions must be remeasured.
 *
 * @class ReactReconcileTransaction
 */
function ReactReconcileTransaction(useCreateElement) {
  this.reinitializeTransaction();
  // Only server-side rendering really needs this option (see
  // `ReactServerRendering`), but server-side uses
  // `ReactServerRenderingTransaction` instead. This option is here so that it's
  // accessible and defaults to false when `ReactDOMComponent` and
  // `ReactDOMTextComponent` checks it in `mountComponent`.`
  this.renderToStaticMarkup = false;
  this.reactMountReady = CallbackQueue.getPooled(null);
  this.useCreateElement = useCreateElement;
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array<object>} List of operation wrap procedures.
   *   TODO: convert to array<TransactionWrapper>
   */
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function () {
    return this.reactMountReady;
  },

  /**
   * @return {object} The queue to collect React async events.
   */
  getUpdateQueue: function () {
    return ReactUpdateQueue;
  },

  /**
   * Save current transaction state -- if the return value from this method is
   * passed to `rollback`, the transaction will be reset to that state.
   */
  checkpoint: function () {
    // reactMountReady is the our only stateful wrapper
    return this.reactMountReady.checkpoint();
  },

  rollback: function (checkpoint) {
    this.reactMountReady.rollback(checkpoint);
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be reused.
   */
  destructor: function () {
    CallbackQueue.release(this.reactMountReady);
    this.reactMountReady = null;
  }
};

_assign(ReactReconcileTransaction.prototype, Transaction, Mixin);

PooledClass.addPoolingTo(ReactReconcileTransaction);

module.exports = ReactReconcileTransaction;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 548 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var ReactOwner = __webpack_require__(545);

var ReactRef = {};

function attachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(component.getPublicInstance());
  } else {
    // Legacy ref
    ReactOwner.addComponentAsRefTo(component, ref, owner);
  }
}

function detachRef(ref, component, owner) {
  if (typeof ref === 'function') {
    ref(null);
  } else {
    // Legacy ref
    ReactOwner.removeComponentAsRefFrom(component, ref, owner);
  }
}

ReactRef.attachRefs = function (instance, element) {
  if (element === null || typeof element !== 'object') {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    attachRef(ref, instance, element._owner);
  }
};

ReactRef.shouldUpdateRefs = function (prevElement, nextElement) {
  // If either the owner or a `ref` has changed, make sure the newest owner
  // has stored a reference to `this`, and the previous owner (if different)
  // has forgotten the reference to `this`. We use the element instead
  // of the public this.props because the post processing cannot determine
  // a ref. The ref conceptually lives on the element.

  // TODO: Should this even be possible? The owner cannot change because
  // it's forbidden by shouldUpdateReactComponent. The ref can change
  // if you swap the keys of but not the refs. Reconsider where this check
  // is made. It probably belongs where the key checking and
  // instantiateReactComponent is done.

  var prevRef = null;
  var prevOwner = null;
  if (prevElement !== null && typeof prevElement === 'object') {
    prevRef = prevElement.ref;
    prevOwner = prevElement._owner;
  }

  var nextRef = null;
  var nextOwner = null;
  if (nextElement !== null && typeof nextElement === 'object') {
    nextRef = nextElement.ref;
    nextOwner = nextElement._owner;
  }

  return prevRef !== nextRef ||
  // If owner changes but we have an unchanged function ref, don't update refs
  typeof nextRef === 'string' && nextOwner !== prevOwner;
};

ReactRef.detachRefs = function (instance, element) {
  if (element === null || typeof element !== 'object') {
    return;
  }
  var ref = element.ref;
  if (ref != null) {
    detachRef(ref, instance, element._owner);
  }
};

module.exports = ReactRef;

/***/ }),
/* 549 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _assign = __webpack_require__(4);

var PooledClass = __webpack_require__(30);
var Transaction = __webpack_require__(83);
var ReactInstrumentation = __webpack_require__(16);
var ReactServerUpdateQueue = __webpack_require__(550);

/**
 * Executed within the scope of the `Transaction` instance. Consider these as
 * being member methods, but with an implied ordering while being isolated from
 * each other.
 */
var TRANSACTION_WRAPPERS = [];

if (process.env.NODE_ENV !== 'production') {
  TRANSACTION_WRAPPERS.push({
    initialize: ReactInstrumentation.debugTool.onBeginFlush,
    close: ReactInstrumentation.debugTool.onEndFlush
  });
}

var noopCallbackQueue = {
  enqueue: function () {}
};

/**
 * @class ReactServerRenderingTransaction
 * @param {boolean} renderToStaticMarkup
 */
function ReactServerRenderingTransaction(renderToStaticMarkup) {
  this.reinitializeTransaction();
  this.renderToStaticMarkup = renderToStaticMarkup;
  this.useCreateElement = false;
  this.updateQueue = new ReactServerUpdateQueue(this);
}

var Mixin = {
  /**
   * @see Transaction
   * @abstract
   * @final
   * @return {array} Empty list of operation wrap procedures.
   */
  getTransactionWrappers: function () {
    return TRANSACTION_WRAPPERS;
  },

  /**
   * @return {object} The queue to collect `onDOMReady` callbacks with.
   */
  getReactMountReady: function () {
    return noopCallbackQueue;
  },

  /**
   * @return {object} The queue to collect React async events.
   */
  getUpdateQueue: function () {
    return this.updateQueue;
  },

  /**
   * `PooledClass` looks for this, and will invoke this before allowing this
   * instance to be reused.
   */
  destructor: function () {},

  checkpoint: function () {},

  rollback: function () {}
};

_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);

PooledClass.addPoolingTo(ReactServerRenderingTransaction);

module.exports = ReactServerRenderingTransaction;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 550 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ReactUpdateQueue = __webpack_require__(132);

var warning = __webpack_require__(2);

function warnNoop(publicInstance, callerName) {
  if (process.env.NODE_ENV !== 'production') {
    var constructor = publicInstance.constructor;
    process.env.NODE_ENV !== 'production' ? warning(false, '%s(...): Can only update a mounting component. ' + 'This usually means you called %s() outside componentWillMount() on the server. ' + 'This is a no-op. Please check the code for the %s component.', callerName, callerName, constructor && (constructor.displayName || constructor.name) || 'ReactClass') : void 0;
  }
}

/**
 * This is the update queue used for server rendering.
 * It delegates to ReactUpdateQueue while server rendering is in progress and
 * switches to ReactNoopUpdateQueue after the transaction has completed.
 * @class ReactServerUpdateQueue
 * @param {Transaction} transaction
 */

var ReactServerUpdateQueue = function () {
  function ReactServerUpdateQueue(transaction) {
    _classCallCheck(this, ReactServerUpdateQueue);

    this.transaction = transaction;
  }

  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */


  ReactServerUpdateQueue.prototype.isMounted = function isMounted(publicInstance) {
    return false;
  };

  /**
   * Enqueue a callback that will be executed after all the pending updates
   * have processed.
   *
   * @param {ReactClass} publicInstance The instance to use as `this` context.
   * @param {?function} callback Called after state is updated.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueCallback = function enqueueCallback(publicInstance, callback, callerName) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueCallback(publicInstance, callback, callerName);
    }
  };

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueForceUpdate = function enqueueForceUpdate(publicInstance) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueForceUpdate(publicInstance);
    } else {
      warnNoop(publicInstance, 'forceUpdate');
    }
  };

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object|function} completeState Next state.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueReplaceState = function enqueueReplaceState(publicInstance, completeState) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueReplaceState(publicInstance, completeState);
    } else {
      warnNoop(publicInstance, 'replaceState');
    }
  };

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object|function} partialState Next partial state to be merged with state.
   * @internal
   */


  ReactServerUpdateQueue.prototype.enqueueSetState = function enqueueSetState(publicInstance, partialState) {
    if (this.transaction.isInTransaction()) {
      ReactUpdateQueue.enqueueSetState(publicInstance, partialState);
    } else {
      warnNoop(publicInstance, 'setState');
    }
  };

  return ReactServerUpdateQueue;
}();

module.exports = ReactServerUpdateQueue;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 551 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



module.exports = '15.6.1';

/***/ }),
/* 552 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var NS = {
  xlink: 'http://www.w3.org/1999/xlink',
  xml: 'http://www.w3.org/XML/1998/namespace'
};

// We use attributes for everything SVG so let's avoid some duplication and run
// code instead.
// The following are all specified in the HTML config already so we exclude here.
// - class (as className)
// - color
// - height
// - id
// - lang
// - max
// - media
// - method
// - min
// - name
// - style
// - target
// - type
// - width
var ATTRS = {
  accentHeight: 'accent-height',
  accumulate: 0,
  additive: 0,
  alignmentBaseline: 'alignment-baseline',
  allowReorder: 'allowReorder',
  alphabetic: 0,
  amplitude: 0,
  arabicForm: 'arabic-form',
  ascent: 0,
  attributeName: 'attributeName',
  attributeType: 'attributeType',
  autoReverse: 'autoReverse',
  azimuth: 0,
  baseFrequency: 'baseFrequency',
  baseProfile: 'baseProfile',
  baselineShift: 'baseline-shift',
  bbox: 0,
  begin: 0,
  bias: 0,
  by: 0,
  calcMode: 'calcMode',
  capHeight: 'cap-height',
  clip: 0,
  clipPath: 'clip-path',
  clipRule: 'clip-rule',
  clipPathUnits: 'clipPathUnits',
  colorInterpolation: 'color-interpolation',
  colorInterpolationFilters: 'color-interpolation-filters',
  colorProfile: 'color-profile',
  colorRendering: 'color-rendering',
  contentScriptType: 'contentScriptType',
  contentStyleType: 'contentStyleType',
  cursor: 0,
  cx: 0,
  cy: 0,
  d: 0,
  decelerate: 0,
  descent: 0,
  diffuseConstant: 'diffuseConstant',
  direction: 0,
  display: 0,
  divisor: 0,
  dominantBaseline: 'dominant-baseline',
  dur: 0,
  dx: 0,
  dy: 0,
  edgeMode: 'edgeMode',
  elevation: 0,
  enableBackground: 'enable-background',
  end: 0,
  exponent: 0,
  externalResourcesRequired: 'externalResourcesRequired',
  fill: 0,
  fillOpacity: 'fill-opacity',
  fillRule: 'fill-rule',
  filter: 0,
  filterRes: 'filterRes',
  filterUnits: 'filterUnits',
  floodColor: 'flood-color',
  floodOpacity: 'flood-opacity',
  focusable: 0,
  fontFamily: 'font-family',
  fontSize: 'font-size',
  fontSizeAdjust: 'font-size-adjust',
  fontStretch: 'font-stretch',
  fontStyle: 'font-style',
  fontVariant: 'font-variant',
  fontWeight: 'font-weight',
  format: 0,
  from: 0,
  fx: 0,
  fy: 0,
  g1: 0,
  g2: 0,
  glyphName: 'glyph-name',
  glyphOrientationHorizontal: 'glyph-orientation-horizontal',
  glyphOrientationVertical: 'glyph-orientation-vertical',
  glyphRef: 'glyphRef',
  gradientTransform: 'gradientTransform',
  gradientUnits: 'gradientUnits',
  hanging: 0,
  horizAdvX: 'horiz-adv-x',
  horizOriginX: 'horiz-origin-x',
  ideographic: 0,
  imageRendering: 'image-rendering',
  'in': 0,
  in2: 0,
  intercept: 0,
  k: 0,
  k1: 0,
  k2: 0,
  k3: 0,
  k4: 0,
  kernelMatrix: 'kernelMatrix',
  kernelUnitLength: 'kernelUnitLength',
  kerning: 0,
  keyPoints: 'keyPoints',
  keySplines: 'keySplines',
  keyTimes: 'keyTimes',
  lengthAdjust: 'lengthAdjust',
  letterSpacing: 'letter-spacing',
  lightingColor: 'lighting-color',
  limitingConeAngle: 'limitingConeAngle',
  local: 0,
  markerEnd: 'marker-end',
  markerMid: 'marker-mid',
  markerStart: 'marker-start',
  markerHeight: 'markerHeight',
  markerUnits: 'markerUnits',
  markerWidth: 'markerWidth',
  mask: 0,
  maskContentUnits: 'maskContentUnits',
  maskUnits: 'maskUnits',
  mathematical: 0,
  mode: 0,
  numOctaves: 'numOctaves',
  offset: 0,
  opacity: 0,
  operator: 0,
  order: 0,
  orient: 0,
  orientation: 0,
  origin: 0,
  overflow: 0,
  overlinePosition: 'overline-position',
  overlineThickness: 'overline-thickness',
  paintOrder: 'paint-order',
  panose1: 'panose-1',
  pathLength: 'pathLength',
  patternContentUnits: 'patternContentUnits',
  patternTransform: 'patternTransform',
  patternUnits: 'patternUnits',
  pointerEvents: 'pointer-events',
  points: 0,
  pointsAtX: 'pointsAtX',
  pointsAtY: 'pointsAtY',
  pointsAtZ: 'pointsAtZ',
  preserveAlpha: 'preserveAlpha',
  preserveAspectRatio: 'preserveAspectRatio',
  primitiveUnits: 'primitiveUnits',
  r: 0,
  radius: 0,
  refX: 'refX',
  refY: 'refY',
  renderingIntent: 'rendering-intent',
  repeatCount: 'repeatCount',
  repeatDur: 'repeatDur',
  requiredExtensions: 'requiredExtensions',
  requiredFeatures: 'requiredFeatures',
  restart: 0,
  result: 0,
  rotate: 0,
  rx: 0,
  ry: 0,
  scale: 0,
  seed: 0,
  shapeRendering: 'shape-rendering',
  slope: 0,
  spacing: 0,
  specularConstant: 'specularConstant',
  specularExponent: 'specularExponent',
  speed: 0,
  spreadMethod: 'spreadMethod',
  startOffset: 'startOffset',
  stdDeviation: 'stdDeviation',
  stemh: 0,
  stemv: 0,
  stitchTiles: 'stitchTiles',
  stopColor: 'stop-color',
  stopOpacity: 'stop-opacity',
  strikethroughPosition: 'strikethrough-position',
  strikethroughThickness: 'strikethrough-thickness',
  string: 0,
  stroke: 0,
  strokeDasharray: 'stroke-dasharray',
  strokeDashoffset: 'stroke-dashoffset',
  strokeLinecap: 'stroke-linecap',
  strokeLinejoin: 'stroke-linejoin',
  strokeMiterlimit: 'stroke-miterlimit',
  strokeOpacity: 'stroke-opacity',
  strokeWidth: 'stroke-width',
  surfaceScale: 'surfaceScale',
  systemLanguage: 'systemLanguage',
  tableValues: 'tableValues',
  targetX: 'targetX',
  targetY: 'targetY',
  textAnchor: 'text-anchor',
  textDecoration: 'text-decoration',
  textRendering: 'text-rendering',
  textLength: 'textLength',
  to: 0,
  transform: 0,
  u1: 0,
  u2: 0,
  underlinePosition: 'underline-position',
  underlineThickness: 'underline-thickness',
  unicode: 0,
  unicodeBidi: 'unicode-bidi',
  unicodeRange: 'unicode-range',
  unitsPerEm: 'units-per-em',
  vAlphabetic: 'v-alphabetic',
  vHanging: 'v-hanging',
  vIdeographic: 'v-ideographic',
  vMathematical: 'v-mathematical',
  values: 0,
  vectorEffect: 'vector-effect',
  version: 0,
  vertAdvY: 'vert-adv-y',
  vertOriginX: 'vert-origin-x',
  vertOriginY: 'vert-origin-y',
  viewBox: 'viewBox',
  viewTarget: 'viewTarget',
  visibility: 0,
  widths: 0,
  wordSpacing: 'word-spacing',
  writingMode: 'writing-mode',
  x: 0,
  xHeight: 'x-height',
  x1: 0,
  x2: 0,
  xChannelSelector: 'xChannelSelector',
  xlinkActuate: 'xlink:actuate',
  xlinkArcrole: 'xlink:arcrole',
  xlinkHref: 'xlink:href',
  xlinkRole: 'xlink:role',
  xlinkShow: 'xlink:show',
  xlinkTitle: 'xlink:title',
  xlinkType: 'xlink:type',
  xmlBase: 'xml:base',
  xmlns: 0,
  xmlnsXlink: 'xmlns:xlink',
  xmlLang: 'xml:lang',
  xmlSpace: 'xml:space',
  y: 0,
  y1: 0,
  y2: 0,
  yChannelSelector: 'yChannelSelector',
  z: 0,
  zoomAndPan: 'zoomAndPan'
};

var SVGDOMPropertyConfig = {
  Properties: {},
  DOMAttributeNamespaces: {
    xlinkActuate: NS.xlink,
    xlinkArcrole: NS.xlink,
    xlinkHref: NS.xlink,
    xlinkRole: NS.xlink,
    xlinkShow: NS.xlink,
    xlinkTitle: NS.xlink,
    xlinkType: NS.xlink,
    xmlBase: NS.xml,
    xmlLang: NS.xml,
    xmlSpace: NS.xml
  },
  DOMAttributeNames: {}
};

Object.keys(ATTRS).forEach(function (key) {
  SVGDOMPropertyConfig.Properties[key] = 0;
  if (ATTRS[key]) {
    SVGDOMPropertyConfig.DOMAttributeNames[key] = ATTRS[key];
  }
});

module.exports = SVGDOMPropertyConfig;

/***/ }),
/* 553 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var EventPropagators = __webpack_require__(54);
var ExecutionEnvironment = __webpack_require__(5);
var ReactDOMComponentTree = __webpack_require__(11);
var ReactInputSelection = __webpack_require__(231);
var SyntheticEvent = __webpack_require__(22);

var getActiveElement = __webpack_require__(61);
var isTextInputElement = __webpack_require__(242);
var shallowEqual = __webpack_require__(34);

var skipSelectionChangeEvent = ExecutionEnvironment.canUseDOM && 'documentMode' in document && document.documentMode <= 11;

var eventTypes = {
  select: {
    phasedRegistrationNames: {
      bubbled: 'onSelect',
      captured: 'onSelectCapture'
    },
    dependencies: ['topBlur', 'topContextMenu', 'topFocus', 'topKeyDown', 'topKeyUp', 'topMouseDown', 'topMouseUp', 'topSelectionChange']
  }
};

var activeElement = null;
var activeElementInst = null;
var lastSelection = null;
var mouseDown = false;

// Track whether a listener exists for this plugin. If none exist, we do
// not extract events. See #3639.
var hasListener = false;

/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getSelection(node) {
  if ('selectionStart' in node && ReactInputSelection.hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else if (window.getSelection) {
    var selection = window.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  } else if (document.selection) {
    var range = document.selection.createRange();
    return {
      parentElement: range.parentElement(),
      text: range.text,
      top: range.boundingTop,
      left: range.boundingLeft
    };
  }
}

/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @return {?SyntheticEvent}
 */
function constructSelectEvent(nativeEvent, nativeEventTarget) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  if (mouseDown || activeElement == null || activeElement !== getActiveElement()) {
    return null;
  }

  // Only fire when selection has actually changed.
  var currentSelection = getSelection(activeElement);
  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;

    var syntheticEvent = SyntheticEvent.getPooled(eventTypes.select, activeElementInst, nativeEvent, nativeEventTarget);

    syntheticEvent.type = 'select';
    syntheticEvent.target = activeElement;

    EventPropagators.accumulateTwoPhaseDispatches(syntheticEvent);

    return syntheticEvent;
  }

  return null;
}

/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */
var SelectEventPlugin = {
  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    if (!hasListener) {
      return null;
    }

    var targetNode = targetInst ? ReactDOMComponentTree.getNodeFromInstance(targetInst) : window;

    switch (topLevelType) {
      // Track the input node that has focus.
      case 'topFocus':
        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
          activeElement = targetNode;
          activeElementInst = targetInst;
          lastSelection = null;
        }
        break;
      case 'topBlur':
        activeElement = null;
        activeElementInst = null;
        lastSelection = null;
        break;
      // Don't fire the event while the user is dragging. This matches the
      // semantics of the native select event.
      case 'topMouseDown':
        mouseDown = true;
        break;
      case 'topContextMenu':
      case 'topMouseUp':
        mouseDown = false;
        return constructSelectEvent(nativeEvent, nativeEventTarget);
      // Chrome and IE fire non-standard event when selection is changed (and
      // sometimes when it hasn't). IE's event fires out of order with respect
      // to key and input events on deletion, so we discard it.
      //
      // Firefox doesn't support selectionchange, so check selection status
      // after each key entry. The selection changes after keydown and before
      // keyup, but we check on keydown as well in the case of holding down a
      // key, when multiple keydown events are fired but only one keyup is.
      // This is also our approach for IE handling, for the reason above.
      case 'topSelectionChange':
        if (skipSelectionChangeEvent) {
          break;
        }
      // falls through
      case 'topKeyDown':
      case 'topKeyUp':
        return constructSelectEvent(nativeEvent, nativeEventTarget);
    }

    return null;
  },

  didPutListener: function (inst, registrationName, listener) {
    if (registrationName === 'onSelect') {
      hasListener = true;
    }
  }
};

module.exports = SelectEventPlugin;

/***/ }),
/* 554 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(7);

var EventListener = __webpack_require__(59);
var EventPropagators = __webpack_require__(54);
var ReactDOMComponentTree = __webpack_require__(11);
var SyntheticAnimationEvent = __webpack_require__(555);
var SyntheticClipboardEvent = __webpack_require__(556);
var SyntheticEvent = __webpack_require__(22);
var SyntheticFocusEvent = __webpack_require__(559);
var SyntheticKeyboardEvent = __webpack_require__(561);
var SyntheticMouseEvent = __webpack_require__(82);
var SyntheticDragEvent = __webpack_require__(558);
var SyntheticTouchEvent = __webpack_require__(562);
var SyntheticTransitionEvent = __webpack_require__(563);
var SyntheticUIEvent = __webpack_require__(56);
var SyntheticWheelEvent = __webpack_require__(564);

var emptyFunction = __webpack_require__(12);
var getEventCharCode = __webpack_require__(134);
var invariant = __webpack_require__(1);

/**
 * Turns
 * ['abort', ...]
 * into
 * eventTypes = {
 *   'abort': {
 *     phasedRegistrationNames: {
 *       bubbled: 'onAbort',
 *       captured: 'onAbortCapture',
 *     },
 *     dependencies: ['topAbort'],
 *   },
 *   ...
 * };
 * topLevelEventsToDispatchConfig = {
 *   'topAbort': { sameConfig }
 * };
 */
var eventTypes = {};
var topLevelEventsToDispatchConfig = {};
['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {
  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
  var onEvent = 'on' + capitalizedEvent;
  var topEvent = 'top' + capitalizedEvent;

  var type = {
    phasedRegistrationNames: {
      bubbled: onEvent,
      captured: onEvent + 'Capture'
    },
    dependencies: [topEvent]
  };
  eventTypes[event] = type;
  topLevelEventsToDispatchConfig[topEvent] = type;
});

var onClickListeners = {};

function getDictionaryKey(inst) {
  // Prevents V8 performance issue:
  // https://github.com/facebook/react/pull/7232
  return '.' + inst._rootNodeID;
}

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

var SimpleEventPlugin = {
  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
    if (!dispatchConfig) {
      return null;
    }
    var EventConstructor;
    switch (topLevelType) {
      case 'topAbort':
      case 'topCanPlay':
      case 'topCanPlayThrough':
      case 'topDurationChange':
      case 'topEmptied':
      case 'topEncrypted':
      case 'topEnded':
      case 'topError':
      case 'topInput':
      case 'topInvalid':
      case 'topLoad':
      case 'topLoadedData':
      case 'topLoadedMetadata':
      case 'topLoadStart':
      case 'topPause':
      case 'topPlay':
      case 'topPlaying':
      case 'topProgress':
      case 'topRateChange':
      case 'topReset':
      case 'topSeeked':
      case 'topSeeking':
      case 'topStalled':
      case 'topSubmit':
      case 'topSuspend':
      case 'topTimeUpdate':
      case 'topVolumeChange':
      case 'topWaiting':
        // HTML Events
        // @see http://www.w3.org/TR/html5/index.html#events-0
        EventConstructor = SyntheticEvent;
        break;
      case 'topKeyPress':
        // Firefox creates a keypress event for function keys too. This removes
        // the unwanted keypress events. Enter is however both printable and
        // non-printable. One would expect Tab to be as well (but it isn't).
        if (getEventCharCode(nativeEvent) === 0) {
          return null;
        }
      /* falls through */
      case 'topKeyDown':
      case 'topKeyUp':
        EventConstructor = SyntheticKeyboardEvent;
        break;
      case 'topBlur':
      case 'topFocus':
        EventConstructor = SyntheticFocusEvent;
        break;
      case 'topClick':
        // Firefox creates a click event on right mouse clicks. This removes the
        // unwanted click events.
        if (nativeEvent.button === 2) {
          return null;
        }
      /* falls through */
      case 'topDoubleClick':
      case 'topMouseDown':
      case 'topMouseMove':
      case 'topMouseUp':
      // TODO: Disabled elements should not respond to mouse events
      /* falls through */
      case 'topMouseOut':
      case 'topMouseOver':
      case 'topContextMenu':
        EventConstructor = SyntheticMouseEvent;
        break;
      case 'topDrag':
      case 'topDragEnd':
      case 'topDragEnter':
      case 'topDragExit':
      case 'topDragLeave':
      case 'topDragOver':
      case 'topDragStart':
      case 'topDrop':
        EventConstructor = SyntheticDragEvent;
        break;
      case 'topTouchCancel':
      case 'topTouchEnd':
      case 'topTouchMove':
      case 'topTouchStart':
        EventConstructor = SyntheticTouchEvent;
        break;
      case 'topAnimationEnd':
      case 'topAnimationIteration':
      case 'topAnimationStart':
        EventConstructor = SyntheticAnimationEvent;
        break;
      case 'topTransitionEnd':
        EventConstructor = SyntheticTransitionEvent;
        break;
      case 'topScroll':
        EventConstructor = SyntheticUIEvent;
        break;
      case 'topWheel':
        EventConstructor = SyntheticWheelEvent;
        break;
      case 'topCopy':
      case 'topCut':
      case 'topPaste':
        EventConstructor = SyntheticClipboardEvent;
        break;
    }
    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;
    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
    EventPropagators.accumulateTwoPhaseDispatches(event);
    return event;
  },

  didPutListener: function (inst, registrationName, listener) {
    // Mobile Safari does not fire properly bubble click events on
    // non-interactive elements, which means delegated click listeners do not
    // fire. The workaround for this bug involves attaching an empty click
    // listener on the target node.
    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
      var key = getDictionaryKey(inst);
      var node = ReactDOMComponentTree.getNodeFromInstance(inst);
      if (!onClickListeners[key]) {
        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);
      }
    }
  },

  willDeleteListener: function (inst, registrationName) {
    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {
      var key = getDictionaryKey(inst);
      onClickListeners[key].remove();
      delete onClickListeners[key];
    }
  }
};

module.exports = SimpleEventPlugin;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 555 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticEvent = __webpack_require__(22);

/**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */
var AnimationEventInterface = {
  animationName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticAnimationEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticAnimationEvent, AnimationEventInterface);

module.exports = SyntheticAnimationEvent;

/***/ }),
/* 556 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticEvent = __webpack_require__(22);

/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */
var ClipboardEventInterface = {
  clipboardData: function (event) {
    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticClipboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticClipboardEvent, ClipboardEventInterface);

module.exports = SyntheticClipboardEvent;

/***/ }),
/* 557 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticEvent = __webpack_require__(22);

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */
var CompositionEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticCompositionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticCompositionEvent, CompositionEventInterface);

module.exports = SyntheticCompositionEvent;

/***/ }),
/* 558 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticMouseEvent = __webpack_require__(82);

/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var DragEventInterface = {
  dataTransfer: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticDragEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticDragEvent, DragEventInterface);

module.exports = SyntheticDragEvent;

/***/ }),
/* 559 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticUIEvent = __webpack_require__(56);

/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var FocusEventInterface = {
  relatedTarget: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticFocusEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticFocusEvent, FocusEventInterface);

module.exports = SyntheticFocusEvent;

/***/ }),
/* 560 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticEvent = __webpack_require__(22);

/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */
var InputEventInterface = {
  data: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticInputEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticInputEvent, InputEventInterface);

module.exports = SyntheticInputEvent;

/***/ }),
/* 561 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticUIEvent = __webpack_require__(56);

var getEventCharCode = __webpack_require__(134);
var getEventKey = __webpack_require__(570);
var getEventModifierState = __webpack_require__(135);

/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var KeyboardEventInterface = {
  key: getEventKey,
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function (event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.

    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    return 0;
  },
  keyCode: function (event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.

    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  },
  which: function (event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  }
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticKeyboardEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticKeyboardEvent, KeyboardEventInterface);

module.exports = SyntheticKeyboardEvent;

/***/ }),
/* 562 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticUIEvent = __webpack_require__(56);

var getEventModifierState = __webpack_require__(135);

/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */
var TouchEventInterface = {
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null,
  getModifierState: getEventModifierState
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticUIEvent}
 */
function SyntheticTouchEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticUIEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticUIEvent.augmentClass(SyntheticTouchEvent, TouchEventInterface);

module.exports = SyntheticTouchEvent;

/***/ }),
/* 563 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticEvent = __webpack_require__(22);

/**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */
var TransitionEventInterface = {
  propertyName: null,
  elapsedTime: null,
  pseudoElement: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticEvent}
 */
function SyntheticTransitionEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticEvent.augmentClass(SyntheticTransitionEvent, TransitionEventInterface);

module.exports = SyntheticTransitionEvent;

/***/ }),
/* 564 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var SyntheticMouseEvent = __webpack_require__(82);

/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var WheelEventInterface = {
  deltaX: function (event) {
    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
  },
  deltaY: function (event) {
    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
    'wheelDelta' in event ? -event.wheelDelta : 0;
  },
  deltaZ: null,

  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: null
};

/**
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {string} dispatchMarker Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @extends {SyntheticMouseEvent}
 */
function SyntheticWheelEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {
  return SyntheticMouseEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);
}

SyntheticMouseEvent.augmentClass(SyntheticWheelEvent, WheelEventInterface);

module.exports = SyntheticWheelEvent;

/***/ }),
/* 565 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var MOD = 65521;

// adler32 is not cryptographically strong, and is only used to sanity check that
// markup generated on the server matches the markup generated on the client.
// This implementation (a modified version of the SheetJS version) has been optimized
// for our use case, at the expense of conforming to the adler32 specification
// for non-ascii inputs.
function adler32(data) {
  var a = 1;
  var b = 0;
  var i = 0;
  var l = data.length;
  var m = l & ~0x3;
  while (i < m) {
    var n = Math.min(i + 4096, m);
    for (; i < n; i += 4) {
      b += (a += data.charCodeAt(i)) + (a += data.charCodeAt(i + 1)) + (a += data.charCodeAt(i + 2)) + (a += data.charCodeAt(i + 3));
    }
    a %= MOD;
    b %= MOD;
  }
  for (; i < l; i++) {
    b += a += data.charCodeAt(i);
  }
  a %= MOD;
  b %= MOD;
  return a | b << 16;
}

module.exports = adler32;

/***/ }),
/* 566 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(7);

var ReactPropTypeLocationNames = __webpack_require__(546);
var ReactPropTypesSecret = __webpack_require__(234);

var invariant = __webpack_require__(1);
var warning = __webpack_require__(2);

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = __webpack_require__(8);
}

var loggedTypeFailures = {};

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?object} element The React element that is being type-checked
 * @param {?number} debugID The React component instance that is being type-checked
 * @private
 */
function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
  for (var typeSpecName in typeSpecs) {
    if (typeSpecs.hasOwnProperty(typeSpecName)) {
      var error;
      // Prop type validation may throw. In case they do, we don't want to
      // fail the render phase where it didn't fail before. So we log it.
      // After these have been cleaned up, we'll let them throw.
      try {
        // This is intentionally an invariant that gets caught. It's the same
        // behavior as without this statement except with a better message.
        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
      } catch (ex) {
        error = ex;
      }
      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var componentStackInfo = '';

        if (process.env.NODE_ENV !== 'production') {
          if (!ReactComponentTreeHook) {
            ReactComponentTreeHook = __webpack_require__(8);
          }
          if (debugID !== null) {
            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
          } else if (element !== null) {
            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
          }
        }

        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
      }
    }
  }
}

module.exports = checkReactTypeSpec;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 567 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var CSSProperty = __webpack_require__(223);
var warning = __webpack_require__(2);

var isUnitlessNumber = CSSProperty.isUnitlessNumber;
var styleWarnings = {};

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @param {ReactDOMComponent} component
 * @return {string} Normalized style value with dimensions applied.
 */
function dangerousStyleValue(name, value, component, isCustomProperty) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901

  var isEmpty = value == null || typeof value === 'boolean' || value === '';
  if (isEmpty) {
    return '';
  }

  var isNonNumeric = isNaN(value);
  if (isCustomProperty || isNonNumeric || value === 0 || isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name]) {
    return '' + value; // cast to string
  }

  if (typeof value === 'string') {
    if (process.env.NODE_ENV !== 'production') {
      // Allow '0' to pass through without warning. 0 is already special and
      // doesn't require units, so we don't need to warn about it.
      if (component && value !== '0') {
        var owner = component._currentElement._owner;
        var ownerName = owner ? owner.getName() : null;
        if (ownerName && !styleWarnings[ownerName]) {
          styleWarnings[ownerName] = {};
        }
        var warned = false;
        if (ownerName) {
          var warnings = styleWarnings[ownerName];
          warned = warnings[name];
          if (!warned) {
            warnings[name] = true;
          }
        }
        if (!warned) {
          process.env.NODE_ENV !== 'production' ? warning(false, 'a `%s` tag (owner: `%s`) was passed a numeric string value ' + 'for CSS property `%s` (value: `%s`) which will be treated ' + 'as a unitless number in a future version of React.', component._currentElement.type, ownerName || 'unknown', name, value) : void 0;
        }
      }
    }
    value = value.trim();
  }
  return value + 'px';
}

module.exports = dangerousStyleValue;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 568 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(7);

var ReactCurrentOwner = __webpack_require__(13);
var ReactDOMComponentTree = __webpack_require__(11);
var ReactInstanceMap = __webpack_require__(55);

var getHostComponentFromComposite = __webpack_require__(238);
var invariant = __webpack_require__(1);
var warning = __webpack_require__(2);

/**
 * Returns the DOM node rendered by this element.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode
 *
 * @param {ReactComponent|DOMElement} componentOrElement
 * @return {?DOMElement} The root node of this element.
 */
function findDOMNode(componentOrElement) {
  if (process.env.NODE_ENV !== 'production') {
    var owner = ReactCurrentOwner.current;
    if (owner !== null) {
      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;
      owner._warnedAboutRefsInRender = true;
    }
  }
  if (componentOrElement == null) {
    return null;
  }
  if (componentOrElement.nodeType === 1) {
    return componentOrElement;
  }

  var inst = ReactInstanceMap.get(componentOrElement);
  if (inst) {
    inst = getHostComponentFromComposite(inst);
    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;
  }

  if (typeof componentOrElement.render === 'function') {
     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;
  } else {
     true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;
  }
}

module.exports = findDOMNode;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 569 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var KeyEscapeUtils = __webpack_require__(128);
var traverseAllChildren = __webpack_require__(244);
var warning = __webpack_require__(2);

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = __webpack_require__(8);
}

/**
 * @param {function} traverseContext Context passed through traversal.
 * @param {?ReactComponent} child React child component.
 * @param {!string} name String name of key path to child.
 * @param {number=} selfDebugID Optional debugID of the current internal instance.
 */
function flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {
  // We found a component instance.
  if (traverseContext && typeof traverseContext === 'object') {
    var result = traverseContext;
    var keyUnique = result[name] === undefined;
    if (process.env.NODE_ENV !== 'production') {
      if (!ReactComponentTreeHook) {
        ReactComponentTreeHook = __webpack_require__(8);
      }
      if (!keyUnique) {
        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;
      }
    }
    if (keyUnique && child != null) {
      result[name] = child;
    }
  }
}

/**
 * Flattens children that are typically specified as `props.children`. Any null
 * children will not be included in the resulting object.
 * @return {!object} flattened children keyed by name.
 */
function flattenChildren(children, selfDebugID) {
  if (children == null) {
    return children;
  }
  var result = {};

  if (process.env.NODE_ENV !== 'production') {
    traverseAllChildren(children, function (traverseContext, child, name) {
      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);
    }, result);
  } else {
    traverseAllChildren(children, flattenSingleChildIntoContext, result);
  }
  return result;
}

module.exports = flattenChildren;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 570 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var getEventCharCode = __webpack_require__(134);

/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var normalizeKey = {
  Esc: 'Escape',
  Spacebar: ' ',
  Left: 'ArrowLeft',
  Up: 'ArrowUp',
  Right: 'ArrowRight',
  Down: 'ArrowDown',
  Del: 'Delete',
  Win: 'OS',
  Menu: 'ContextMenu',
  Apps: 'ContextMenu',
  Scroll: 'ScrollLock',
  MozPrintableKey: 'Unidentified'
};

/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var translateToKey = {
  8: 'Backspace',
  9: 'Tab',
  12: 'Clear',
  13: 'Enter',
  16: 'Shift',
  17: 'Control',
  18: 'Alt',
  19: 'Pause',
  20: 'CapsLock',
  27: 'Escape',
  32: ' ',
  33: 'PageUp',
  34: 'PageDown',
  35: 'End',
  36: 'Home',
  37: 'ArrowLeft',
  38: 'ArrowUp',
  39: 'ArrowRight',
  40: 'ArrowDown',
  45: 'Insert',
  46: 'Delete',
  112: 'F1',
  113: 'F2',
  114: 'F3',
  115: 'F4',
  116: 'F5',
  117: 'F6',
  118: 'F7',
  119: 'F8',
  120: 'F9',
  121: 'F10',
  122: 'F11',
  123: 'F12',
  144: 'NumLock',
  145: 'ScrollLock',
  224: 'Meta'
};

/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */
function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.

    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
    if (key !== 'Unidentified') {
      return key;
    }
  }

  // Browser does not implement `key`, polyfill as much of it as we can.
  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent);

    // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.
    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }
  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }
  return '';
}

module.exports = getEventKey;

/***/ }),
/* 571 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



/* global Symbol */

var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

/**
 * Returns the iterator method function contained on the iterable object.
 *
 * Be sure to invoke the function with the iterable as context:
 *
 *     var iteratorFn = getIteratorFn(myIterable);
 *     if (iteratorFn) {
 *       var iterator = iteratorFn.call(myIterable);
 *       ...
 *     }
 *
 * @param {?object} maybeIterable
 * @return {?function}
 */
function getIteratorFn(maybeIterable) {
  var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
  if (typeof iteratorFn === 'function') {
    return iteratorFn;
  }
}

module.exports = getIteratorFn;

/***/ }),
/* 572 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */

function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }
  return node;
}

/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */
function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }
    node = node.parentNode;
  }
}

/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */
function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType === 3) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

module.exports = getNodeForCharacterOffset;

/***/ }),
/* 573 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ExecutionEnvironment = __webpack_require__(5);

/**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */
function makePrefixMap(styleProp, eventName) {
  var prefixes = {};

  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
  prefixes['Moz' + styleProp] = 'moz' + eventName;
  prefixes['ms' + styleProp] = 'MS' + eventName;
  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();

  return prefixes;
}

/**
 * A list of event names to a configurable list of vendor prefixes.
 */
var vendorPrefixes = {
  animationend: makePrefixMap('Animation', 'AnimationEnd'),
  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
  animationstart: makePrefixMap('Animation', 'AnimationStart'),
  transitionend: makePrefixMap('Transition', 'TransitionEnd')
};

/**
 * Event names that have already been detected and prefixed (if applicable).
 */
var prefixedEventNames = {};

/**
 * Element to check for prefixes on.
 */
var style = {};

/**
 * Bootstrap if a DOM exists.
 */
if (ExecutionEnvironment.canUseDOM) {
  style = document.createElement('div').style;

  // On some platforms, in particular some releases of Android 4.x,
  // the un-prefixed "animation" and "transition" properties are defined on the
  // style object but the events that fire will still be prefixed, so we need
  // to check if the un-prefixed events are usable, and if not remove them from the map.
  if (!('AnimationEvent' in window)) {
    delete vendorPrefixes.animationend.animation;
    delete vendorPrefixes.animationiteration.animation;
    delete vendorPrefixes.animationstart.animation;
  }

  // Same as above
  if (!('TransitionEvent' in window)) {
    delete vendorPrefixes.transitionend.transition;
  }
}

/**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */
function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) {
    return prefixedEventNames[eventName];
  } else if (!vendorPrefixes[eventName]) {
    return eventName;
  }

  var prefixMap = vendorPrefixes[eventName];

  for (var styleProp in prefixMap) {
    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
      return prefixedEventNames[eventName] = prefixMap[styleProp];
    }
  }

  return '';
}

module.exports = getVendorPrefixedEventName;

/***/ }),
/* 574 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var escapeTextContentForBrowser = __webpack_require__(84);

/**
 * Escapes attribute value to prevent scripting attacks.
 *
 * @param {*} value Value to escape.
 * @return {string} An escaped string.
 */
function quoteAttributeValueForBrowser(value) {
  return '"' + escapeTextContentForBrowser(value) + '"';
}

module.exports = quoteAttributeValueForBrowser;

/***/ }),
/* 575 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactMount = __webpack_require__(232);

module.exports = ReactMount.renderSubtreeIntoContainer;

/***/ }),
/* 576 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */

function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

/**
 * Unescape and unwrap key for human-readable display
 *
 * @param {string} key to unescape.
 * @return {string} the unescaped key.
 */
function unescape(key) {
  var unescapeRegex = /(=0|=2)/g;
  var unescaperLookup = {
    '=0': '=',
    '=2': ':'
  };
  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);

  return ('' + keySubstring).replace(unescapeRegex, function (match) {
    return unescaperLookup[match];
  });
}

var KeyEscapeUtils = {
  escape: escape,
  unescape: unescape
};

module.exports = KeyEscapeUtils;

/***/ }),
/* 577 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var _prodInvariant = __webpack_require__(42);

var invariant = __webpack_require__(1);

/**
 * Static poolers. Several custom versions for each potential number of
 * arguments. A completely generic pooler is easy to implement, but would
 * require accessing the `arguments` object. In each of these, `this` refers to
 * the Class itself, not an instance. If any others are needed, simply add them
 * here, or in their own files.
 */
var oneArgumentPooler = function (copyFieldsFrom) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, copyFieldsFrom);
    return instance;
  } else {
    return new Klass(copyFieldsFrom);
  }
};

var twoArgumentPooler = function (a1, a2) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2);
    return instance;
  } else {
    return new Klass(a1, a2);
  }
};

var threeArgumentPooler = function (a1, a2, a3) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3);
    return instance;
  } else {
    return new Klass(a1, a2, a3);
  }
};

var fourArgumentPooler = function (a1, a2, a3, a4) {
  var Klass = this;
  if (Klass.instancePool.length) {
    var instance = Klass.instancePool.pop();
    Klass.call(instance, a1, a2, a3, a4);
    return instance;
  } else {
    return new Klass(a1, a2, a3, a4);
  }
};

var standardReleaser = function (instance) {
  var Klass = this;
  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : _prodInvariant('25') : void 0;
  instance.destructor();
  if (Klass.instancePool.length < Klass.poolSize) {
    Klass.instancePool.push(instance);
  }
};

var DEFAULT_POOL_SIZE = 10;
var DEFAULT_POOLER = oneArgumentPooler;

/**
 * Augments `CopyConstructor` to be a poolable class, augmenting only the class
 * itself (statically) not adding any prototypical fields. Any CopyConstructor
 * you give this may have a `poolSize` property, and will look for a
 * prototypical `destructor` on instances.
 *
 * @param {Function} CopyConstructor Constructor that can be used to reset.
 * @param {Function} pooler Customizable pooler.
 */
var addPoolingTo = function (CopyConstructor, pooler) {
  // Casting as any so that flow ignores the actual implementation and trusts
  // it to match the type we declared
  var NewKlass = CopyConstructor;
  NewKlass.instancePool = [];
  NewKlass.getPooled = pooler || DEFAULT_POOLER;
  if (!NewKlass.poolSize) {
    NewKlass.poolSize = DEFAULT_POOL_SIZE;
  }
  NewKlass.release = standardReleaser;
  return NewKlass;
};

var PooledClass = {
  addPoolingTo: addPoolingTo,
  oneArgumentPooler: oneArgumentPooler,
  twoArgumentPooler: twoArgumentPooler,
  threeArgumentPooler: threeArgumentPooler,
  fourArgumentPooler: fourArgumentPooler
};

module.exports = PooledClass;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 578 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var PooledClass = __webpack_require__(577);
var ReactElement = __webpack_require__(31);

var emptyFunction = __webpack_require__(12);
var traverseAllChildren = __webpack_require__(587);

var twoArgumentPooler = PooledClass.twoArgumentPooler;
var fourArgumentPooler = PooledClass.fourArgumentPooler;

var userProvidedKeyEscapeRegex = /\/+/g;
function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * traversal. Allows avoiding binding callbacks.
 *
 * @constructor ForEachBookKeeping
 * @param {!function} forEachFunction Function to perform traversal with.
 * @param {?*} forEachContext Context to perform context with.
 */
function ForEachBookKeeping(forEachFunction, forEachContext) {
  this.func = forEachFunction;
  this.context = forEachContext;
  this.count = 0;
}
ForEachBookKeeping.prototype.destructor = function () {
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(ForEachBookKeeping, twoArgumentPooler);

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func,
      context = bookKeeping.context;

  func.call(context, child, bookKeeping.count++);
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.foreach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }
  var traverseContext = ForEachBookKeeping.getPooled(forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  ForEachBookKeeping.release(traverseContext);
}

/**
 * PooledClass representing the bookkeeping associated with performing a child
 * mapping. Allows avoiding binding callbacks.
 *
 * @constructor MapBookKeeping
 * @param {!*} mapResult Object containing the ordered map of results.
 * @param {!function} mapFunction Function to perform mapping with.
 * @param {?*} mapContext Context to perform mapping with.
 */
function MapBookKeeping(mapResult, keyPrefix, mapFunction, mapContext) {
  this.result = mapResult;
  this.keyPrefix = keyPrefix;
  this.func = mapFunction;
  this.context = mapContext;
  this.count = 0;
}
MapBookKeeping.prototype.destructor = function () {
  this.result = null;
  this.keyPrefix = null;
  this.func = null;
  this.context = null;
  this.count = 0;
};
PooledClass.addPoolingTo(MapBookKeeping, fourArgumentPooler);

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result,
      keyPrefix = bookKeeping.keyPrefix,
      func = bookKeeping.func,
      context = bookKeeping.context;


  var mappedChild = func.call(context, child, bookKeeping.count++);
  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, emptyFunction.thatReturnsArgument);
  } else if (mappedChild != null) {
    if (ReactElement.isValidElement(mappedChild)) {
      mappedChild = ReactElement.cloneAndReplaceKey(mappedChild,
      // Keep both the (mapped) and old keys if they differ, just as
      // traverseAllChildren used to do for objects as children
      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }
    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';
  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }
  var traverseContext = MapBookKeeping.getPooled(array, escapedPrefix, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  MapBookKeeping.release(traverseContext);
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.map
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}

function forEachSingleChildDummy(traverseContext, child, name) {
  return null;
}

/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.count
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */
function countChildren(children, context) {
  return traverseAllChildren(children, forEachSingleChildDummy, null);
}

/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.toarray
 */
function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, emptyFunction.thatReturnsArgument);
  return result;
}

var ReactChildren = {
  forEach: forEachChildren,
  map: mapChildren,
  mapIntoWithKeyPrefixInternal: mapIntoWithKeyPrefixInternal,
  count: countChildren,
  toArray: toArray
};

module.exports = ReactChildren;

/***/ }),
/* 579 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var ReactElement = __webpack_require__(31);

/**
 * Create a factory that creates HTML tag elements.
 *
 * @private
 */
var createDOMFactory = ReactElement.createFactory;
if (process.env.NODE_ENV !== 'production') {
  var ReactElementValidator = __webpack_require__(247);
  createDOMFactory = ReactElementValidator.createFactory;
}

/**
 * Creates a mapping from supported HTML tags to `ReactDOMComponent` classes.
 *
 * @public
 */
var ReactDOMFactories = {
  a: createDOMFactory('a'),
  abbr: createDOMFactory('abbr'),
  address: createDOMFactory('address'),
  area: createDOMFactory('area'),
  article: createDOMFactory('article'),
  aside: createDOMFactory('aside'),
  audio: createDOMFactory('audio'),
  b: createDOMFactory('b'),
  base: createDOMFactory('base'),
  bdi: createDOMFactory('bdi'),
  bdo: createDOMFactory('bdo'),
  big: createDOMFactory('big'),
  blockquote: createDOMFactory('blockquote'),
  body: createDOMFactory('body'),
  br: createDOMFactory('br'),
  button: createDOMFactory('button'),
  canvas: createDOMFactory('canvas'),
  caption: createDOMFactory('caption'),
  cite: createDOMFactory('cite'),
  code: createDOMFactory('code'),
  col: createDOMFactory('col'),
  colgroup: createDOMFactory('colgroup'),
  data: createDOMFactory('data'),
  datalist: createDOMFactory('datalist'),
  dd: createDOMFactory('dd'),
  del: createDOMFactory('del'),
  details: createDOMFactory('details'),
  dfn: createDOMFactory('dfn'),
  dialog: createDOMFactory('dialog'),
  div: createDOMFactory('div'),
  dl: createDOMFactory('dl'),
  dt: createDOMFactory('dt'),
  em: createDOMFactory('em'),
  embed: createDOMFactory('embed'),
  fieldset: createDOMFactory('fieldset'),
  figcaption: createDOMFactory('figcaption'),
  figure: createDOMFactory('figure'),
  footer: createDOMFactory('footer'),
  form: createDOMFactory('form'),
  h1: createDOMFactory('h1'),
  h2: createDOMFactory('h2'),
  h3: createDOMFactory('h3'),
  h4: createDOMFactory('h4'),
  h5: createDOMFactory('h5'),
  h6: createDOMFactory('h6'),
  head: createDOMFactory('head'),
  header: createDOMFactory('header'),
  hgroup: createDOMFactory('hgroup'),
  hr: createDOMFactory('hr'),
  html: createDOMFactory('html'),
  i: createDOMFactory('i'),
  iframe: createDOMFactory('iframe'),
  img: createDOMFactory('img'),
  input: createDOMFactory('input'),
  ins: createDOMFactory('ins'),
  kbd: createDOMFactory('kbd'),
  keygen: createDOMFactory('keygen'),
  label: createDOMFactory('label'),
  legend: createDOMFactory('legend'),
  li: createDOMFactory('li'),
  link: createDOMFactory('link'),
  main: createDOMFactory('main'),
  map: createDOMFactory('map'),
  mark: createDOMFactory('mark'),
  menu: createDOMFactory('menu'),
  menuitem: createDOMFactory('menuitem'),
  meta: createDOMFactory('meta'),
  meter: createDOMFactory('meter'),
  nav: createDOMFactory('nav'),
  noscript: createDOMFactory('noscript'),
  object: createDOMFactory('object'),
  ol: createDOMFactory('ol'),
  optgroup: createDOMFactory('optgroup'),
  option: createDOMFactory('option'),
  output: createDOMFactory('output'),
  p: createDOMFactory('p'),
  param: createDOMFactory('param'),
  picture: createDOMFactory('picture'),
  pre: createDOMFactory('pre'),
  progress: createDOMFactory('progress'),
  q: createDOMFactory('q'),
  rp: createDOMFactory('rp'),
  rt: createDOMFactory('rt'),
  ruby: createDOMFactory('ruby'),
  s: createDOMFactory('s'),
  samp: createDOMFactory('samp'),
  script: createDOMFactory('script'),
  section: createDOMFactory('section'),
  select: createDOMFactory('select'),
  small: createDOMFactory('small'),
  source: createDOMFactory('source'),
  span: createDOMFactory('span'),
  strong: createDOMFactory('strong'),
  style: createDOMFactory('style'),
  sub: createDOMFactory('sub'),
  summary: createDOMFactory('summary'),
  sup: createDOMFactory('sup'),
  table: createDOMFactory('table'),
  tbody: createDOMFactory('tbody'),
  td: createDOMFactory('td'),
  textarea: createDOMFactory('textarea'),
  tfoot: createDOMFactory('tfoot'),
  th: createDOMFactory('th'),
  thead: createDOMFactory('thead'),
  time: createDOMFactory('time'),
  title: createDOMFactory('title'),
  tr: createDOMFactory('tr'),
  track: createDOMFactory('track'),
  u: createDOMFactory('u'),
  ul: createDOMFactory('ul'),
  'var': createDOMFactory('var'),
  video: createDOMFactory('video'),
  wbr: createDOMFactory('wbr'),

  // SVG
  circle: createDOMFactory('circle'),
  clipPath: createDOMFactory('clipPath'),
  defs: createDOMFactory('defs'),
  ellipse: createDOMFactory('ellipse'),
  g: createDOMFactory('g'),
  image: createDOMFactory('image'),
  line: createDOMFactory('line'),
  linearGradient: createDOMFactory('linearGradient'),
  mask: createDOMFactory('mask'),
  path: createDOMFactory('path'),
  pattern: createDOMFactory('pattern'),
  polygon: createDOMFactory('polygon'),
  polyline: createDOMFactory('polyline'),
  radialGradient: createDOMFactory('radialGradient'),
  rect: createDOMFactory('rect'),
  stop: createDOMFactory('stop'),
  svg: createDOMFactory('svg'),
  text: createDOMFactory('text'),
  tspan: createDOMFactory('tspan')
};

module.exports = ReactDOMFactories;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 580 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var ReactPropTypeLocationNames = {};

if (process.env.NODE_ENV !== 'production') {
  ReactPropTypeLocationNames = {
    prop: 'prop',
    context: 'context',
    childContext: 'child context'
  };
}

module.exports = ReactPropTypeLocationNames;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 581 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _require = __webpack_require__(31),
    isValidElement = _require.isValidElement;

var factory = __webpack_require__(120);

module.exports = factory(isValidElement);

/***/ }),
/* 582 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;

/***/ }),
/* 583 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



module.exports = '15.6.1';

/***/ }),
/* 584 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(42);

var ReactPropTypeLocationNames = __webpack_require__(580);
var ReactPropTypesSecret = __webpack_require__(582);

var invariant = __webpack_require__(1);
var warning = __webpack_require__(2);

var ReactComponentTreeHook;

if (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {
  // Temporary hack.
  // Inline requires don't work well with Jest:
  // https://github.com/facebook/react/issues/7240
  // Remove the inline requires when we don't need them anymore:
  // https://github.com/facebook/react/pull/7178
  ReactComponentTreeHook = __webpack_require__(8);
}

var loggedTypeFailures = {};

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?object} element The React element that is being type-checked
 * @param {?number} debugID The React component instance that is being type-checked
 * @private
 */
function checkReactTypeSpec(typeSpecs, values, location, componentName, element, debugID) {
  for (var typeSpecName in typeSpecs) {
    if (typeSpecs.hasOwnProperty(typeSpecName)) {
      var error;
      // Prop type validation may throw. In case they do, we don't want to
      // fail the render phase where it didn't fail before. So we log it.
      // After these have been cleaned up, we'll let them throw.
      try {
        // This is intentionally an invariant that gets caught. It's the same
        // behavior as without this statement except with a better message.
        !(typeof typeSpecs[typeSpecName] === 'function') ? process.env.NODE_ENV !== 'production' ? invariant(false, '%s: %s type `%s` is invalid; it must be a function, usually from React.PropTypes.', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : _prodInvariant('84', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName) : void 0;
        error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
      } catch (ex) {
        error = ex;
      }
      process.env.NODE_ENV !== 'production' ? warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', ReactPropTypeLocationNames[location], typeSpecName, typeof error) : void 0;
      if (error instanceof Error && !(error.message in loggedTypeFailures)) {
        // Only monitor this failure once because there tends to be a lot of the
        // same error.
        loggedTypeFailures[error.message] = true;

        var componentStackInfo = '';

        if (process.env.NODE_ENV !== 'production') {
          if (!ReactComponentTreeHook) {
            ReactComponentTreeHook = __webpack_require__(8);
          }
          if (debugID !== null) {
            componentStackInfo = ReactComponentTreeHook.getStackAddendumByID(debugID);
          } else if (element !== null) {
            componentStackInfo = ReactComponentTreeHook.getCurrentStackAddendum(element);
          }
        }

        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed %s type: %s%s', location, error.message, componentStackInfo) : void 0;
      }
    }
  }
}

module.exports = checkReactTypeSpec;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 585 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _require = __webpack_require__(245),
    Component = _require.Component;

var _require2 = __webpack_require__(31),
    isValidElement = _require2.isValidElement;

var ReactNoopUpdateQueue = __webpack_require__(248);
var factory = __webpack_require__(262);

module.exports = factory(Component, isValidElement, ReactNoopUpdateQueue);

/***/ }),
/* 586 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */


var _prodInvariant = __webpack_require__(42);

var ReactElement = __webpack_require__(31);

var invariant = __webpack_require__(1);

/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://facebook.github.io/react/docs/top-level-api.html#react.children.only
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */
function onlyChild(children) {
  !ReactElement.isValidElement(children) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.Children.only expected to receive a single React element child.') : _prodInvariant('143') : void 0;
  return children;
}

module.exports = onlyChild;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 587 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {/**
 * Copyright 2013-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */



var _prodInvariant = __webpack_require__(42);

var ReactCurrentOwner = __webpack_require__(13);
var REACT_ELEMENT_TYPE = __webpack_require__(246);

var getIteratorFn = __webpack_require__(249);
var invariant = __webpack_require__(1);
var KeyEscapeUtils = __webpack_require__(576);
var warning = __webpack_require__(2);

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * This is inlined from ReactElement since this file is shared between
 * isomorphic and renderers. We could extract this to a
 *
 */

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (component && typeof component === 'object' && component.key != null) {
    // Explicit key
    return KeyEscapeUtils.escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  if (children === null || type === 'string' || type === 'number' ||
  // The following is inlined from ReactElement. This means we can optimize
  // some checks. React Fiber also inlines this logic for similar purposes.
  type === 'object' && children.$$typeof === REACT_ELEMENT_TYPE) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child;
  var nextName;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (iteratorFn) {
      var iterator = iteratorFn.call(children);
      var step;
      if (iteratorFn !== children.entries) {
        var ii = 0;
        while (!(step = iterator.next()).done) {
          child = step.value;
          nextName = nextNamePrefix + getComponentKey(child, ii++);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        if (process.env.NODE_ENV !== 'production') {
          var mapsAsChildrenAddendum = '';
          if (ReactCurrentOwner.current) {
            var mapsAsChildrenOwnerName = ReactCurrentOwner.current.getName();
            if (mapsAsChildrenOwnerName) {
              mapsAsChildrenAddendum = ' Check the render method of `' + mapsAsChildrenOwnerName + '`.';
            }
          }
          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.%s', mapsAsChildrenAddendum) : void 0;
          didWarnAboutMaps = true;
        }
        // Iterator will provide entry [k,v] tuples rather than values.
        while (!(step = iterator.next()).done) {
          var entry = step.value;
          if (entry) {
            child = entry[1];
            nextName = nextNamePrefix + KeyEscapeUtils.escape(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        }
      }
    } else if (type === 'object') {
      var addendum = '';
      if (process.env.NODE_ENV !== 'production') {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';
        if (children._isReactElement) {
          addendum = " It looks like you're using an element created by a different " + 'version of React. Make sure to use only one copy of React.';
        }
        if (ReactCurrentOwner.current) {
          var name = ReactCurrentOwner.current.getName();
          if (name) {
            addendum += ' Check the render method of `' + name + '`.';
          }
        }
      }
      var childrenString = String(children);
       true ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : _prodInvariant('31', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : void 0;
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

module.exports = traverseAllChildren;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))

/***/ }),
/* 588 */,
/* 589 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = __webpack_require__(592);


/***/ }),
/* 590 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var encode = __webpack_require__(251);
var alphabet = __webpack_require__(87);

// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.
// This number should be updated every year or so to keep the generated id short.
// To regenerate `new Date() - 0` and bump the version. Always bump the version!
var REDUCE_TIME = 1459707606518;

// don't change unless we change the algos or REDUCE_TIME
// must be an integer and less than 16
var version = 6;

// Counter is used when shortid is called multiple times in one second.
var counter;

// Remember the last time shortid was called in case counter is needed.
var previousSeconds;

/**
 * Generate unique id
 * Returns string id
 */
function build(clusterWorkerId) {

    var str = '';

    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);

    if (seconds === previousSeconds) {
        counter++;
    } else {
        counter = 0;
        previousSeconds = seconds;
    }

    str = str + encode(alphabet.lookup, version);
    str = str + encode(alphabet.lookup, clusterWorkerId);
    if (counter > 0) {
        str = str + encode(alphabet.lookup, counter);
    }
    str = str + encode(alphabet.lookup, seconds);

    return str;
}

module.exports = build;


/***/ }),
/* 591 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var alphabet = __webpack_require__(87);

/**
 * Decode the id to get the version and worker
 * Mainly for debugging and testing.
 * @param id - the shortid-generated id.
 */
function decode(id) {
    var characters = alphabet.shuffled();
    return {
        version: characters.indexOf(id.substr(0, 1)) & 0x0f,
        worker: characters.indexOf(id.substr(1, 1)) & 0x0f
    };
}

module.exports = decode;


/***/ }),
/* 592 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var alphabet = __webpack_require__(87);
var encode = __webpack_require__(251);
var decode = __webpack_require__(591);
var build = __webpack_require__(590);
var isValid = __webpack_require__(593);

// if you are using cluster or multiple servers use this to make each instance
// has a unique value for worker
// Note: I don't know if this is automatically set when using third
// party cluster solutions such as pm2.
var clusterWorkerId = __webpack_require__(596) || 0;

/**
 * Set the seed.
 * Highly recommended if you don't want people to try to figure out your id schema.
 * exposed as shortid.seed(int)
 * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.
 */
function seed(seedValue) {
    alphabet.seed(seedValue);
    return module.exports;
}

/**
 * Set the cluster worker or machine id
 * exposed as shortid.worker(int)
 * @param workerId worker must be positive integer.  Number less than 16 is recommended.
 * returns shortid module so it can be chained.
 */
function worker(workerId) {
    clusterWorkerId = workerId;
    return module.exports;
}

/**
 *
 * sets new characters to use in the alphabet
 * returns the shuffled alphabet
 */
function characters(newCharacters) {
    if (newCharacters !== undefined) {
        alphabet.characters(newCharacters);
    }

    return alphabet.shuffled();
}

/**
 * Generate unique id
 * Returns string id
 */
function generate() {
  return build(clusterWorkerId);
}

// Export all other functions as properties of the generate function
module.exports = generate;
module.exports.generate = generate;
module.exports.seed = seed;
module.exports.worker = worker;
module.exports.characters = characters;
module.exports.decode = decode;
module.exports.isValid = isValid;


/***/ }),
/* 593 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var alphabet = __webpack_require__(87);

function isShortId(id) {
    if (!id || typeof id !== 'string' || id.length < 6 ) {
        return false;
    }

    var characters = alphabet.characters();
    var len = id.length;
    for(var i = 0; i < len;i++) {
        if (characters.indexOf(id[i]) === -1) {
            return false;
        }
    }
    return true;
}

module.exports = isShortId;


/***/ }),
/* 594 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto

function randomByte() {
    if (!crypto || !crypto.getRandomValues) {
        return Math.floor(Math.random() * 256) & 0x30;
    }
    var dest = new Uint8Array(1);
    crypto.getRandomValues(dest);
    return dest[0] & 0x30;
}

module.exports = randomByte;


/***/ }),
/* 595 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


// Found this seed-based random generator somewhere
// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)

var seed = 1;

/**
 * return a random number based on a seed
 * @param seed
 * @returns {number}
 */
function getNextValue() {
    seed = (seed * 9301 + 49297) % 233280;
    return seed/(233280.0);
}

function setSeed(_seed_) {
    seed = _seed_;
}

module.exports = {
    nextValue: getNextValue,
    seed: setSeed
};


/***/ }),
/* 596 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = 0;


/***/ }),
/* 597 */,
/* 598 */,
/* 599 */,
/* 600 */,
/* 601 */,
/* 602 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(3);
module.exports = __webpack_require__(32);


/***/ })
/******/ ]);
});
//# sourceMappingURL=chess-ctrls.react.js.map